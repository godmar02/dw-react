{"version":3,"sources":["components/contexts/DarkState.js","components/ErrorPage.js","services/firebase.js","components/homepage/HomepageHeader.js","components/contexts/HomepageState.js","components/contexts/AuthState.js","components/homepage/HomepageDetails.js","components/homepage/Homepage.js","components/contexts/ProfileState.js","components/profile/ProfilePicture.js","components/profile/ProfileDetails.js","components/profile/UserProfile.js","components/AppHeader.js","components/contexts/CharacterState.js","components/character/CharacterSheetHeader.js","components/character/CharacterBasicDetails.js","components/character/CharacterDamage.js","components/character/CharacterArmour.js","components/character/CharacterFunds.js","components/character/CharacterHP.js","components/character/CharacterLevel.js","components/character/CharacterXP.js","components/character/CharacterBasicStats.js","components/character/CharacterAbilities.js","components/contexts/AddBondState.js","components/character/AddBond.js","components/character/CharacterBonds.js","components/contexts/AddItemState.js","components/character/AddItem.js","components/character/CharacterGear.js","components/contexts/AddSpellState.js","components/character/AddSpell.js","components/character/CharacterSpells.js","components/character/CharacterStandardMoves.js","components/character/CharacterAdvancedMoves.js","components/contexts/AddMoveState.js","components/character/AddMove.js","components/character/CharacterClassMoves.js","components/character/CharacterMoves.js","components/other/DiceRoller.js","components/character/CharacterSheet.js","components/contexts/CampaignState.js","components/campaign/CampaignHeader.js","components/campaign/CampaignDetails.js","components/campaign/Campaign.js","components/character/CreateCharacter.js","components/App.js","index.js"],"names":["DarkState","createContext","ErrorPage","firebase","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","provider","GoogleAuthProvider","SignInWithGoogle","signInWithPopup","saveCharacter","campaign","character","data","collection","doc","set","setCustomParameters","prompt","HomepageHeader","Breadcrumbs","aria-label","HomepageState","AuthState","useStyles","makeStyles","table","minWidth","HomepageDetails","classes","currentUser","useContext","useState","open","setOpen","campaignName","setCampaignName","campaigns","handleCancel","deleteCampaign","delete","then","console","info","catch","error","alert","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","Tooltip","title","IconButton","onClick","Add","TableBody","map","index","to","id","owner","Delete","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","onChange","event","target","value","DialogActions","Button","color","email","saveCampaign","Homepage","setCampaigns","useEffect","observer","next","querySnapshot","updatedCampaignList","docs","docSnapshot","onSnapshot","ctx","useMemo","Provider","ProfileState","ProfilePicture","show","setShow","Avatar","src","photoURL","alt","ProfileDetails","style","border","WebkitBorderRadius","borderRadius","display","position","top","right","backgroundColor","textAlign","font","letterSpacing","lineHeight","fontWeight","padding","displayName","variant","FirebaseService","signOut","UserProfile","theme","root","flexGrow","menuButton","marginRight","spacing","AppHeader","darkState","setDarkState","AppBar","Toolbar","edge","Menu","Typography","Brightness4","Switch","checked","CharacterState","CharacterSheetHeader","useParams","campaignURL","characterURL","dw_class","level","smallTextField","width","CharacterBasicDetails","setCharacter","dwc","alig","alignment","handleCharacterChange","name","size","multiline","placeholder","full_name","backstory","class_details","suggested_look","suggestedLook","look","readOnly","race","race_move","alignments","find","x","attribute","textField","CharacterDamage","InputProps","damage","CharacterArmour","type","inputProps","min","armour","CharacterFunds","funds","CharacterHP","maxHp","abilities","base_hp","parseInt","category","score","hp","endAdornment","InputAdornment","input","CharacterLevel","CharacterXP","maxXp","xp","CharacterBasicStats","Grid","item","xs","container","justify","cardContent","paddingTop","paddingBottom","button","fontSize","CharacterAbilities","updateAbilityScore","e","newAbilities","abilityModifier","abilityScore","abilityAffliction","baseModifier","indexOf","modifier","Card","CardContent","reduce","totalScore","max","afflicted","newAffliction","updateAbilityAfflicted","ability","ability_afflictions","AddBondState","formControl","AddBond","bond","setBond","FormControl","RadioGroup","FormControlLabel","control","Radio","suggested_bonds","newBonds","bonds","addBond","CharacterBonds","updateBond","splice","deleteBond","align","colSpan","AddItemState","AddItem","setItem","Autocomplete","freeSolo","options","items","option","renderInput","params","newItem","Object","assign","checkbox","newItems","addItem","chips","flexWrap","chip","maxWidth","borderBottom","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","Row","props","openRow","setOpenRow","updateItem","KeyboardArrowUp","KeyboardArrowDown","Checkbox","updateItemCheckbox","uses","Select","multiple","tags","Input","renderValue","selected","Chip","itemTags","MenuItem","weight","deleteItem","Collapse","in","timeout","unmountOnExit","Box","tabIndex","itemTypes","description","cost","CharacterGear","totalLoad","maxLoad","str","strAfflicted","strScore","base_load","AddSpellState","marginTop","marginBottom","AddSpell","charaClass","setCharaClass","levelZero","setLevelZero","levelOne","setLevelOne","levelThree","setLevelThree","levelFive","setLevelFive","levelSeven","setLevelSeven","levelNine","setLevelNine","addSpell","spell","newSpell","spells","newSpells","InputLabel","FormLabel","FormGroup","row","filter","length","Accordion","AccordionSummary","expandIcon","ExpandMore","ongoing","school","AccordionDetails","source","CharacterSpells","updateSpellCheckbox","totalPreparedSpells","totalSpells","prepared","maxSpells","disabled","forgotten","updateSpell","deleteSpellRow","commune","prepareSpells","CharacterStandardMoves","standard_moves","escapeHtml","CharacterAdvancedMoves","advanced_moves","AddMoveState","AddMove","twoToFive","setTwoToFive","sixToTen","setSixToTen","addMove","move","newMove","moves","newMoves","dw_classes","CharacterClassMoves","editing","setEditing","setMoves","editMove","newEdit","saveMove","deleteMove","defaultValue","handleDescChange","refreshMove","Refresh","Save","Edit","TabPanel","children","other","role","hidden","p","a11yProps","palette","background","paper","CharacterMoves","React","setValue","Tabs","newValue","scrollButtons","Tab","DiceRoller","dice","setDice","diceNum","setDiceNum","rollResult","setRollResult","singleRoll","sides","Math","floor","random","total","i","rollDice","CharacterSheet","documentSnapshot","debouncedSave","useCallback","callback","delay","timer","args","clearTimeout","setTimeout","debounce","keys","CampaignState","CampaignHeader","CampaignDetails","deleteCharacter","CardHeader","action","subheader","characterData","CampaignSheet","setCampaign","updatedCharacterList","card","abCard","cardHeader","abCardContent","abTitle","abTextField","abButton","history","useHistory","charaName","setCharaName","charaFullName","setCharaFullName","charaRace","setCharaRace","charaAlignment","setCharaAlignment","charaRaceMove","setCharaRaceMove","charaMoveOption","setCharaMoveOption","charaSpellOptions","setCharaSpellOptions","charaAbilities","setCharaAbilities","charaGearOptions","setCharaGearOptions","charaBonds","setCharaBonds","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","handleBondChange","handleReset","push","handleSave","startingMoves","concat","processMoves","startingSpells","raceSpell","spellOptions","processSpells","maxHP","startingFunds","String","starting_funds","startingGear","starting_gear","gearChoices","choice","choiceGroup","Array","isArray","starting_gear_options","flat","singleItem","replace","coins","ammount","match","singleObject","gearDescription","gear","count","attributes","item_description","singleInput","Number","isFinite","join","Boolean","gearOptions","gearChoice","multiplicity","Fragment","newGear","addCharaGearOptions","toString","newArr","currentTarget","log","addCharaGearMultiOptions","moveOptions","moveChoices","moveNext","moveChoice","spellChoices","v","includes","spellOngoing","spellSchool","spellDescr","addCharaSpellOptions","afflictedValue","validateScore","Stepper","alternativeLabel","Step","StepLabel","direction","alignItems","stepIndex","intro","race_moves","suggested_names","starting_gear_details","abScore","startIcon","getStepContent","App","palletType","darkTheme","createMuiTheme","ThemeProvider","Container","exact","path","Campaign","CreateCharacter","Index","setCurrentUser","onAuthStateChanged","user","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.29d392ad.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst DarkState = createContext();\n\nexport default DarkState;\n","import React from 'react';\n\nexport default function ErrorPage() {\n  return <h1>Oops! Page not found!</h1>;\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialise Firebase and setting up firestore and auth for use later\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\n\n// Authenticate with Firebase-auth using the Google provider object\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account',\n});\nexport function SignInWithGoogle() {\n  auth.signInWithPopup(provider);\n}\n\n// Firestore operations\n\n// Create new campaign\nexport function createCampaign(campaign, owner) {\n  return db.collection('campaigns').doc(campaign).set({ owner: owner });\n}\n\n// Save/Create Character\nexport function saveCharacter(campaign, character, data) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .doc(character)\n    .set(data);\n}\n\n// Stream Campaign Data (all Campaigns)\nexport function streamCampaigns(observer) {\n  return db.collection('campaigns').onSnapshot(observer);\n}\n\n// Stream Character Data (all Characters)\nexport function streamCharacters(campaign, observer) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .onSnapshot(observer);\n}\n\n// Stream Character Data (selected Characters)\nexport function streamCharacter(campaign, character, observer) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .doc(character)\n    .onSnapshot(observer);\n}\n\n// Delete Campaign\nexport function deleteCampaign(campaign) {\n  return db.collection('campaigns').doc(campaign).delete();\n}\n\n// Delete Characters\nexport function deleteCharacter(campaign, character) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .doc(character)\n    .delete();\n}\n\n// Default Export\nexport default firebase;\n","import React from 'react';\nimport { Breadcrumbs } from '@material-ui/core';\n\nexport default function HomepageHeader() {\n  return (\n    <div>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <p>Home</p>\n      </Breadcrumbs>\n      <h1>Campaigns Homepage</h1>\n    </div>\n  );\n}\n","import { createContext } from 'react';\n\nconst HomepageState = createContext();\n\nexport default HomepageState;\n","import { createContext } from 'react';\n\nconst AuthState = createContext();\n\nexport default AuthState;\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as FirebaseService from 'services/firebase';\nimport HomepageState from 'components/contexts/HomepageState';\nimport AuthState from 'components/contexts/AuthState';\nimport { Add, Delete } from '@material-ui/icons';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Tooltip,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function HomepageDetails() {\n  const classes = useStyles();\n  const { currentUser } = useContext(AuthState);\n  const [open, setOpen] = useState(false);\n  const [campaignName, setCampaignName] = useState('');\n  const { campaigns } = useContext(HomepageState);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleCancel() {\n    setOpen(false);\n  }\n\n  function handleSave() {\n    setOpen(false);\n    saveCampaign();\n  }\n\n  // Create New Campaign\n  function saveCampaign() {\n    if (campaignName) {\n      //don't save unless details present\n      FirebaseService.createCampaign(campaignName, currentUser.email)\n        .then(() => {\n          console.info('Created Campaign:', campaignName);\n        })\n        .catch((error) => {\n          alert('Failed to create campaign, see console error');\n          console.error('Error creating document:', error);\n        });\n    } else {\n      alert('Cannot save blank campaign');\n    }\n  }\n\n  // Delete Campaign\n  const deleteCampaign = (campaignName) => {\n    if (campaignName) {\n      //don't save unless details present\n      FirebaseService.deleteCampaign(campaignName)\n        .then(() => {\n          console.info('Deleted Campaign:', campaignName);\n        })\n        .catch((error) => {\n          alert('Failed to delete campaign, see console error');\n          console.error('Error deleting document:', error);\n        });\n    } else {\n      alert('Cannot delete blank campaign');\n    }\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Campaign</TableCell>\n              <TableCell>Owner</TableCell>\n              <TableCell>\n                <Tooltip title='Add Campaign'>\n                  <IconButton aria-label='add' onClick={handleClickOpen}>\n                    <Add />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {campaigns.campaigns &&\n              campaigns.campaigns.map((campaign, index) => {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>\n                      <Link to={'/dw-react/' + campaign.id}>{campaign.id}</Link>\n                    </TableCell>\n                    <TableCell>{campaign.owner}</TableCell>\n                    <TableCell>\n                      <Tooltip title='Delete'>\n                        <IconButton\n                          aria-label='delete'\n                          onClick={() => deleteCampaign(campaign.id)}>\n                          <Delete />\n                        </IconButton>\n                      </Tooltip>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Dialog\n        open={open}\n        onClose={handleCancel}\n        aria-labelledby='form-dialog-title'>\n        <DialogTitle id='form-dialog-title'>Create new campaign</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To create a campaign, please enter the new campaign name here. You\n            will not be able to change this once saved.\n          </DialogContentText>\n          <TextField\n            autoFocus={true}\n            margin='dense'\n            id='name'\n            label='Campaign Name'\n            fullWidth\n            onChange={(event) => setCampaignName(event.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={handleSave} color='primary'>\n            Create Campaign\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport * as FirebaseService from 'services/firebase';\nimport HomepageHeader from 'components/homepage/HomepageHeader';\nimport HomepageDetails from 'components/homepage/HomepageDetails';\nimport HomepageState from 'components/contexts/HomepageState';\n\nexport default function Homepage() {\n  const [campaigns, setCampaigns] = useState({});\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    const unsubscribe = FirebaseService.streamCampaigns({\n      next: (querySnapshot) => {\n        const updatedCampaignList = querySnapshot.docs.map((docSnapshot) => {\n          return { id: docSnapshot.id, owner: docSnapshot.data().owner };\n        });\n        setCampaigns((campaign) => ({ campaigns: updatedCampaignList }));\n      },\n      error: (error) => {\n        alert('Failed to load data correctly, see console error');\n        console.error('Error loading data:', error);\n      },\n    });\n    return unsubscribe;\n  }, [setCampaigns]);\n\n  useEffect(() => {\n    console.info('Campaigns State:', campaigns);\n  }, [campaigns]); //Only log to console if state actually changes\n\n  const ctx = useMemo(() => ({ campaigns }), [campaigns]); //Memo-ised state for performance\n\n  return (\n    <HomepageState.Provider value={ctx}>\n      <HomepageHeader />\n      <br />\n      <HomepageDetails />\n    </HomepageState.Provider>\n  );\n}\n","import { createContext } from 'react';\n\nconst ProfileState = createContext();\n\nexport default ProfileState;\n","import React, { useContext } from 'react';\nimport AuthState from 'components/contexts/AuthState';\nimport ProfileState from 'components/contexts/ProfileState';\nimport Avatar from '@material-ui/core/Avatar';\n\nexport default function ProfilePicture() {\n  const { currentUser } = useContext(AuthState);\n  const { show, setShow } = useContext(ProfileState);\n  function toggleSetShow() {\n    setShow(!show);\n  }\n\n  return (\n    <Avatar\n      src={currentUser.photoURL}\n      alt='Google Profile'\n      onClick={() => toggleSetShow()}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport AuthState from 'components/contexts/AuthState';\nimport * as FirebaseService from 'services/firebase';\nimport { Button } from '@material-ui/core';\n\nexport default function ProfileDetails() {\n  const { currentUser } = useContext(AuthState);\n\n  return (\n    <div\n      style={{\n        border: '0',\n        WebkitBorderRadius: '50%',\n        borderRadius: '5px',\n        display: 'inline-block',\n        margin: '0',\n        position: 'absolute',\n        top: '50px',\n        right: '20px',\n        color: '#bdc1c6',\n        backgroundColor: 'rgba(60, 64, 67, 0.9)',\n        textAlign: 'left',\n        font: \"500 12px 'Roboto', arial, sans-serif\",\n        letterSpacing: '0.8px',\n        lineHeight: '16px',\n        fontWeight: 'bold',\n        padding: '8px 8px',\n      }}>\n      <div\n        style={{\n          color: 'white',\n        }}>\n        Google Account\n      </div>\n      <div>{currentUser.displayName}</div>\n      <div>{currentUser.email}</div>\n      <Button\n        variant='contained'\n        color='primary'\n        onClick={() => FirebaseService.auth.signOut()}>\n        LOG OUT\n      </Button>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from 'react';\nimport ProfilePicture from 'components/profile/ProfilePicture';\nimport ProfileDetails from 'components/profile/ProfileDetails';\nimport ProfileState from 'components/contexts/ProfileState';\n\nexport default function UserProfile() {\n  const [show, setShow] = useState(false);\n  const ctx = useMemo(() => ({ show, setShow }), [show]); //Memo-ised state for performance\n\n  return (\n    <ProfileState.Provider value={ctx}>\n      <ProfilePicture /> {show ? <ProfileDetails /> : null}\n    </ProfileState.Provider>\n  );\n}\n","import React, { useContext } from 'react';\nimport DarkState from 'components/contexts/DarkState';\nimport {\n  AppBar,\n  IconButton,\n  Toolbar,\n  Typography,\n  Switch,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Brightness4, Menu } from '@material-ui/icons';\nimport UserProfile from 'components/profile/UserProfile';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function AppHeader() {\n  const classes = useStyles();\n  const { darkState, setDarkState } = useContext(DarkState);\n  function handleThemeChange() {\n    setDarkState(!darkState);\n  }\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Toolbar>\n          <IconButton\n            edge='start'\n            className={classes.menuButton}\n            color='inherit'\n            aria-label='menu'>\n            <Menu />\n          </IconButton>\n          <Typography component={'span'} variant='h6' className={classes.title}>\n            Dungeon World Character Sheet (by Godmar02)\n          </Typography>\n          <Brightness4 />\n          <Switch checked={darkState} onChange={handleThemeChange} />\n          <UserProfile />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { createContext } from 'react';\n\nconst CharacterState = createContext();\n\nexport default CharacterState;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { Breadcrumbs } from '@material-ui/core';\nimport CharacterState from 'components/contexts/CharacterState';\n\nexport default function CharacterSheetHeader() {\n  const { campaignURL, characterURL } = useParams();\n  const { character } = useContext(CharacterState);\n\n  return (\n    <>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <Link to='/dw-react'>Home</Link>\n        <Link to={'/dw-react/' + campaignURL}>{campaignURL}</Link>\n        <p>{characterURL}</p>\n      </Breadcrumbs>\n      <h1>{characterURL}</h1>\n      <p>\n        {character.dw_class} - Level {character.level}\n      </p>\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  smallTextField: {\n    width: 120,\n  },\n});\n\nexport default function CharacterBasicDetails() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const dwc = character.dw_class;\n  const alig = character.alignment;\n  function alignmentAttribute() {\n    if (character.dw_class && character.alignment) {\n      return class_details[dwc].alignments.find((x) => x.alignment === alig)\n        .attribute;\n    } else {\n      return '';\n    }\n  }\n\n  function handleCharacterChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  }\n\n  function suggestedLook() {\n    if (character.dw_class) {\n      let dwc = character.dw_class;\n      return class_details[dwc].suggested_look;\n    } else {\n      return '';\n    }\n  }\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} size='small' aria-label='simple table'>\n          <TableBody>\n            <TableRow>\n              <TableCell style={{ width: 110, fontWeight: 'bold' }}>\n                FULL NAME\n              </TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  variant='outlined'\n                  placeholder=\"Your character's full name, titles and all\"\n                  value={character.full_name}\n                  name='full_name'\n                  onChange={handleCharacterChange}\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell style={{ fontWeight: 'bold' }}>BACKSTORY</TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  variant='outlined'\n                  placeholder=\"Describe your character's backstory and anything else about your characters identity here\"\n                  value={character.backstory}\n                  name='backstory'\n                  onChange={handleCharacterChange}\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell style={{ fontWeight: 'bold' }}>LOOK</TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  variant='outlined'\n                  placeholder={suggestedLook()}\n                  name='look'\n                  value={character.look}\n                  onChange={handleCharacterChange}\n                />\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <br />\n      <TableContainer component={Paper}>\n        <Table className={classes.table} size='small' aria-label='simple table'>\n          <TableBody>\n            <TableRow>\n              <TableCell style={{ fontWeight: 'bold' }}>CLASS</TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  readOnly\n                  variant='outlined'\n                  name='dwClass'\n                  value={character.dw_class}\n                />\n              </TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell style={{ width: 110, fontWeight: 'bold' }}>\n                RACE\n              </TableCell>\n              <TableCell style={{ width: 110 }}>\n                <TextField\n                  multiline\n                  fullWidth\n                  readOnly\n                  variant='outlined'\n                  name='race'\n                  value={character.race}\n                />\n              </TableCell>\n              <TableCell>\n                <p>{character.race_move}</p>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell style={{ fontWeight: 'bold' }}>ALIGNMENT</TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  readOnly\n                  variant='outlined'\n                  name='alignment'\n                  value={character.alignment}\n                />\n              </TableCell>\n              <TableCell>\n                <p>{alignmentAttribute()}</p>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n}));\n\nexport default function CharacterDamage() {\n  const { character } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  const classes = useStyles();\n\n  function damage() {\n    if (character.dw_class) {\n      return class_details[dwc].damage;\n    } else {\n      return '';\n    }\n  }\n\n  return (\n    <TextField\n      variant='outlined'\n      size='small'\n      className={classes.textField}\n      name='damage'\n      label='Damage'\n      InputProps={{\n        readOnly: true,\n      }}\n      value={damage()}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n  },\n}));\n\nexport default function CharacterArmour() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TextField\n      type='number'\n      variant='outlined'\n      size='small'\n      label='Armour'\n      inputProps={{\n        style: { textAlign: 'center' },\n        min: 0,\n      }}\n      name='armour'\n      className={classes.textField}\n      value={character.armour || ''}\n      onChange={handleCharacterChange}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n  },\n}));\n\nexport default function CharacterFunds() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TextField\n      type='number'\n      variant='outlined'\n      size='small'\n      className={classes.textField}\n      name='funds'\n      label='Funds'\n      inputProps={{\n        style: { textAlign: 'center' },\n        min: 0,\n      }}\n      value={character.funds || ''}\n      onChange={handleCharacterChange}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\nimport { InputAdornment, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 100,\n  },\n}));\n\nexport default function CharacterHP() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  const classes = useStyles();\n\n  function maxHp() {\n    if (character.dw_class && character.abilities) {\n      return (\n        class_details[dwc].base_hp +\n        parseInt(\n          character.abilities.find((x) => x.category === 'CON').score,\n          10\n        )\n      );\n    } else {\n      return '';\n    }\n  }\n\n  // Validate XP\n  function validateHp() {\n    if (parseInt(character.hp, 10) > maxHp()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <>\n      <TextField\n        type='number'\n        variant='outlined'\n        label='HP'\n        error={validateHp()}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>{' / ' + maxHp()}</InputAdornment>\n          ),\n          className: classes.input,\n        }}\n        size='small'\n        className={classes.textField}\n        inputProps={{\n          style: { textAlign: 'center' },\n          min: 0,\n        }}\n        name='hp'\n        value={character.hp || ''}\n        onChange={handleCharacterChange}\n      />\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n  },\n}));\n\nexport default function CharacterLevel() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TextField\n      type='number'\n      variant='outlined'\n      size='small'\n      label='Level'\n      className={classes.textField}\n      inputProps={{\n        style: { textAlign: 'center' },\n        min: 1,\n      }}\n      name='level'\n      value={character.level || ''}\n      onChange={handleCharacterChange}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { InputAdornment, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 100,\n  },\n}));\n\nexport default function CharacterXP() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  // Total Load\n  function maxXp() {\n    if (character.level) {\n      return parseInt(character.level, 10) + 7;\n    } else {\n      return '';\n    }\n  }\n\n  // Validate XP\n  function validateXp() {\n    if (parseInt(character.xp, 10) > maxXp()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <>\n      <TextField\n        type='number'\n        variant='outlined'\n        label='XP'\n        error={validateXp()}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>{' / ' + maxXp()}</InputAdornment>\n          ),\n          className: classes.input,\n        }}\n        size='small'\n        className={classes.textField}\n        inputProps={{\n          style: { textAlign: 'center' },\n          min: 0,\n        }}\n        name='xp'\n        value={character.xp || ''}\n        onChange={handleCharacterChange}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CharacterDamage from 'components/character/CharacterDamage';\nimport CharacterArmour from 'components/character/CharacterArmour';\nimport CharacterFunds from 'components/character/CharacterFunds';\nimport CharacterHP from 'components/character/CharacterHP';\nimport CharacterLevel from 'components/character/CharacterLevel';\nimport CharacterXP from 'components/character/CharacterXP';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n}));\n\nexport default function CharacterBasicStats() {\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.root}>\n      <Grid item xs={12}>\n        <Grid container justify='center' spacing={1}>\n          <Grid item>\n            <CharacterLevel />\n          </Grid>\n          <Grid item>\n            <CharacterHP />\n          </Grid>\n          <Grid item>\n            <CharacterXP />\n          </Grid>\n          <Grid item>\n            <CharacterDamage />\n          </Grid>\n          <Grid item>\n            <CharacterArmour />\n          </Grid>\n          <Grid item>\n            <CharacterFunds />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { ability_afflictions } from 'data/abilityAfflictions';\nimport { Button, Card, CardContent, Grid, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  cardContent: {\n    paddingTop: 5,\n    '&:last-child': {\n      paddingBottom: 0,\n    },\n  },\n  title: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  textField: {\n    width: 85,\n  },\n  button: {\n    width: 85,\n    fontSize: 11,\n    fontWeight: 'bold',\n  },\n}));\n\nexport default function CharacterAbilities() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n\n  const updateAbilityScore = (index) => (e) => {\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {\n      ...character.abilities[index],\n      score: e.target.value,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      abilities: newAbilities,\n    })); // set array back\n  };\n\n  const updateAbilityAfflicted = (index) => {\n    const newAffliction = !character.abilities[index].afflicted; //switching boolean\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {\n      ...character.abilities[index],\n      afflicted: newAffliction,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      abilities: newAbilities,\n    })); // set array back\n  };\n\n  const afflictedValue = (ability, afflicted) => {\n    if (afflicted) {\n      return ability_afflictions[ability];\n    } else {\n      return 'Unafflicted';\n    }\n  };\n\n  const abilityModifier = (abilityScore, abilityAffliction) => {\n    if (abilityScore) {\n      let baseModifier;\n      let afflicted;\n\n      abilityScore = parseInt(abilityScore, 10);\n\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\n        baseModifier = -3;\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\n        baseModifier = -2;\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n        baseModifier = -1;\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n        baseModifier = 0;\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n        baseModifier = 1;\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\n        baseModifier = 2;\n      } else if (abilityScore === 18) {\n        baseModifier = 3;\n      }\n\n      /* -1 if afflicted */\n      if (abilityAffliction) {\n        afflicted = 1;\n      } else {\n        afflicted = 0;\n      }\n\n      let modifier = baseModifier - afflicted;\n\n      if (modifier > 0) {\n        return '+' + modifier;\n      } else {\n        return modifier;\n      }\n    } else {\n      return '';\n    }\n  };\n\n  function validateScore() {\n    const totalScore = character.abilities.reduce(\n      (totalScore, data) => totalScore + parseInt(data.score || 0, 10),\n      0\n    );\n    if (totalScore !== 73) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return (\n    <Grid className={classes.root}>\n      <Grid item xs={12}>\n        <Grid container justify='center' spacing={1}>\n          {character.abilities &&\n            character.abilities.map((abilities, index) => {\n              return (\n                <Grid item key={index}>\n                  <Card>\n                    <CardContent className={classes.cardContent}>\n                      <p className={classes.title}>{abilities.category}</p>\n                      <TextField\n                        type='number'\n                        variant='outlined'\n                        error={validateScore()}\n                        size='small'\n                        margin='none'\n                        name={abilities.category + 'Score'}\n                        value={abilities.score}\n                        className={classes.textField}\n                        inputProps={{\n                          style: { textAlign: 'center' },\n                          min: 1,\n                          max: 18,\n                        }}\n                        onChange={updateAbilityScore(index)}\n                      />\n                      <br />\n                      <TextField\n                        variant='outlined'\n                        name={abilities.category + 'Modifier'}\n                        value={abilityModifier(\n                          abilities.score,\n                          abilities.afflicted\n                        )}\n                        InputProps={{ readOnly: true }}\n                        inputProps={{\n                          style: {\n                            textAlign: 'center',\n                            fontWeight: 'bold',\n                            fontSize: 25,\n                          },\n                        }}\n                        className={classes.textField}\n                      />\n                      <br />\n                      <Button\n                        onClick={() => updateAbilityAfflicted(index)}\n                        className={classes.button}>\n                        {afflictedValue(\n                          abilities.category,\n                          abilities.afflicted\n                        )}\n                      </Button>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              );\n            })}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { createContext } from 'react';\n\nconst AddBondState = createContext();\n\nexport default AddBondState;\n","import React, { useContext, useState } from 'react';\nimport AddBondState from 'components/contexts/AddBondState';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function AddBond() {\n  const classes = useStyles();\n  const { open, setOpen } = useContext(AddBondState);\n  const { character, setCharacter } = useContext(CharacterState);\n  const [bond, setBond] = useState('');\n  const dwc = character.dw_class;\n\n  function handleCancel() {\n    setBond('');\n    setOpen(false);\n  }\n\n  function handleSave() {\n    addBond();\n    setBond('');\n    setOpen(false);\n  }\n\n  function addBond() {\n    const newBonds = [...character.bonds, bond]; // copying the old array and adding new bond depending upon selection\n    setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleCancel}\n      aria-labelledby='form-dialog-title'>\n      <DialogTitle id='form-dialog-title'>Add new bond</DialogTitle>{' '}\n      <DialogContent>\n        <DialogContentText>\n          Choose a suggested bond to add. If you wish to create your own choose\n          'CUSTOM'.\n        </DialogContentText>\n        <FormControl component='fieldset' className={classes.formControl}>\n          <RadioGroup\n            aria-label='bond'\n            name='bond'\n            value={bond}\n            onChange={(event) => setBond(event.target.value)}>\n            <FormControlLabel value='' control={<Radio />} label='CUSTOM' />\n            {character.dw_class &&\n              class_details[dwc].suggested_bonds.map((data, index) => {\n                return (\n                  <FormControlLabel\n                    key={index}\n                    value={data}\n                    control={<Radio />}\n                    label={data}\n                  />\n                );\n              })}\n          </RadioGroup>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color='primary'>\n          Cancel\n        </Button>\n        <Button onClick={handleSave} color='primary'>\n          Add Bond\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useMemo, useState } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport AddBondState from 'components/contexts/AddBondState';\nimport AddBond from 'components/character/AddBond';\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TextField,\n  Tooltip,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Add, Delete } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function CharacterBonds() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n  const [open, setOpen] = useState(false);\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\n\n  const updateBond = (index) => (e) => {\n    let newBonds = [...character.bonds]; // copying the old array\n    newBonds[index] = e.target.value; // replace value\n    setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\n  };\n\n  const deleteBond = (index) => {\n    const newBonds = [...character.bonds]; // copying the old array\n    //don't delete last row\n    newBonds.splice(index, 1); // remove item from array\n    setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\n  };\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  return (\n    <>\n      <AddBondState.Provider value={ctx}>\n        <AddBond />\n      </AddBondState.Provider>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} size='small'>\n          <TableBody>\n            {character.bonds &&\n              character.bonds.map((bond, index) => {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>\n                      <TextField\n                        multiline\n                        fullWidth\n                        variant='outlined'\n                        aria-label='empty textarea'\n                        placeholder='Add bond detail here'\n                        value={bond}\n                        name={'bond' + index}\n                        onChange={updateBond(index)}\n                      />\n                    </TableCell>\n                    <TableCell style={{ width: 40 }}>\n                      <Tooltip title='Delete'>\n                        <IconButton\n                          aria-label='delete'\n                          onClick={() => deleteBond(index)}>\n                          <Delete />\n                        </IconButton>\n                      </Tooltip>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            <TableRow>\n              <TableCell align='center' colSpan='2'>\n                <Tooltip title='Add Bond'>\n                  <IconButton aria-label='add' onClick={handleClickOpen}>\n                    <Add />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import { createContext } from 'react';\n\nconst AddItemState = createContext();\n\nexport default AddItemState;\n","import React, { useContext, useState } from 'react';\nimport AddItemState from 'components/contexts/AddItemState';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { items } from 'data/items';\n\nexport default function AddItem() {\n  const { open, setOpen } = useContext(AddItemState);\n  const { character, setCharacter } = useContext(CharacterState);\n  const [item, setItem] = useState('');\n\n  function handleCancel() {\n    setItem('');\n    setOpen(false);\n  }\n\n  function handleSave() {\n    addItem();\n    setItem('');\n    setOpen(false);\n  }\n\n  function addItem() {\n    let newItem = items.find((x) => x.name === item);\n    if (newItem) {\n      newItem = Object.assign({}, newItem, { checkbox: false }); //Adding blank checkbox\n      const newItems = [...character.items, newItem]; // copying the old array and adding new item depending upon selection\n      setCharacter((character) => ({ ...character, items: newItems })); // set array back\n    }\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleCancel}\n      aria-labelledby='form-dialog-title'>\n      <DialogTitle id='form-dialog-title'>Add new item</DialogTitle>{' '}\n      <DialogContent>\n        <DialogContentText>\n          Search for an item to add. If you wish to create your own choose\n          'CUSTOM'.\n        </DialogContentText>\n        <Autocomplete\n          freeSolo\n          onChange={(event, value) => setItem(value)}\n          options={items.map((option) => option.name)}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label='Items'\n              margin='normal'\n              variant='outlined'\n            />\n          )}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color='primary'>\n          Cancel\n        </Button>\n        <Button onClick={handleSave} color='primary'>\n          Add Item\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useMemo, useState } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport AddItemState from 'components/contexts/AddItemState';\nimport AddItem from 'components/character/AddItem';\nimport { class_details } from 'data/classDetails';\nimport { itemTypes } from 'data/itemTypes';\nimport { itemTags } from 'data/itemTags';\nimport {\n  Box,\n  Chip,\n  Checkbox,\n  Collapse,\n  FormControl,\n  IconButton,\n  Input,\n  Paper,\n  Select,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Tooltip,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Add,\n  Delete,\n  KeyboardArrowDown,\n  KeyboardArrowUp,\n} from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 250,\n  },\n  table: {\n    minWidth: 650,\n  },\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction Row(props) {\n  const { item } = props;\n  const { index } = props;\n  const classes = useStyles();\n  const [openRow, setOpenRow] = useState(false);\n  const { character, setCharacter } = useContext(CharacterState);\n\n  const updateItem = (event, index) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = { ...character.items[index], [name]: value }; // replace value\n    setCharacter((character) => ({ ...character, items: newItems })); // set array back\n  };\n\n  const updateItemCheckbox = (index) => (e) => {\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = {\n      ...character.items[index],\n      checkbox: e.target.checked,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      items: newItems,\n    })); // set array back\n  };\n\n  const deleteItem = (index) => {\n    const newItems = [...character.items]; // copying the old array\n    newItems.splice(index, 1); // remove item from array\n    setCharacter((character) => ({ ...character, items: newItems })); // set array back\n  };\n\n  return (\n    <>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton\n            aria-label='expand row'\n            size='small'\n            onClick={() => setOpenRow(!openRow)}>\n            {openRow ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n          </IconButton>\n        </TableCell>\n        <TableCell align='center'>\n          <Checkbox\n            name={'item_checkbox' + index}\n            checked={!!item.checkbox}\n            onChange={updateItemCheckbox(index)}\n            color='primary'\n          />\n        </TableCell>\n        <TableCell>\n          <TextField\n            fullWidth\n            size='small'\n            variant='outlined'\n            aria-label='empty textarea'\n            value={item.name}\n            name='name'\n            onChange={(event) => updateItem(event, index)}\n          />\n        </TableCell>\n        <TableCell align='center'>\n          <TextField\n            type='number'\n            fullWidth\n            size='small'\n            variant='outlined'\n            inputProps={{\n              style: { textAlign: 'center' },\n              min: 0,\n            }}\n            name='uses'\n            value={item.uses}\n            onChange={(event) => updateItem(event, index)}\n          />\n        </TableCell>\n        <TableCell>\n          <FormControl className={classes.formControl} fullWidth>\n            <Select\n              multiple\n              value={item.tags}\n              name='tags'\n              onChange={(event) => updateItem(event, index)}\n              input={<Input />}\n              renderValue={(selected) => (\n                <div className={classes.chips}>\n                  {selected.map((value, index) => (\n                    <Chip key={index} label={value} className={classes.chip} />\n                  ))}\n                </div>\n              )}\n              MenuProps={MenuProps}>\n              {itemTags.map((name, index) => (\n                <MenuItem key={index} value={name}>\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </TableCell>\n        <TableCell>\n          <TextField\n            type='number'\n            fullWidth\n            size='small'\n            variant='outlined'\n            inputProps={{\n              style: { textAlign: 'center' },\n              min: 0,\n            }}\n            value={item.weight}\n            name='weight'\n            onChange={(event) => updateItem(event, index)}\n          />\n        </TableCell>\n        <TableCell>\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete' onClick={() => deleteItem(index)}>\n              <Delete />\n            </IconButton>\n          </Tooltip>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={openRow} timeout='auto' unmountOnExit>\n            <Box margin={1}>\n              <Table size='small' aria-label='purchases'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell align='center' style={{ width: 40 }}>\n                      TYPE\n                    </TableCell>\n                    <TableCell>DESCRIPTION</TableCell>\n                    <TableCell align='center' style={{ width: 65 }}>\n                      COST\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableCell align='center'>\n                    <FormControl\n                      variant='outlined'\n                      size='small'\n                      className={classes.formControl}>\n                      <Select\n                        tabIndex={-1}\n                        value={item.type}\n                        name='type'\n                        onChange={(event) => updateItem(event, index)}>\n                        {itemTypes.map((type, index) => (\n                          <MenuItem key={index} value={type}>\n                            {type}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      multiline\n                      fullWidth\n                      size='small'\n                      variant='outlined'\n                      aria-label='empty textarea'\n                      value={item.description}\n                      name='description'\n                      onChange={(event) => updateItem(event, index)}\n                    />\n                  </TableCell>\n                  <TableCell align='center'>\n                    <TextField\n                      type='number'\n                      fullWidth\n                      size='small'\n                      variant='outlined'\n                      inputProps={{\n                        style: { textAlign: 'center' },\n                        min: 0,\n                      }}\n                      name='cost'\n                      value={item.cost}\n                      onChange={(event) => updateItem(event, index)}\n                    />\n                  </TableCell>\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\n\nexport default function CharacterGear() {\n  const classes = useStyles();\n  const { character } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  const [open, setOpen] = useState(false);\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\n\n  function totalLoad() {\n    if (character.items) {\n      return character.items.reduce(\n        (totalLoad, data) => totalLoad + parseInt(data.weight || 0, 10),\n        0\n      );\n    } else {\n      return '';\n    }\n  }\n\n  function maxLoad() {\n    if (\n      character.dw_class &&\n      character.abilities.find((x) => x.category === 'STR').score\n    ) {\n      let str = character.abilities.find((x) => x.category === 'STR');\n      let baseModifier;\n      let strAfflicted = str.afflicted;\n      let strScore = parseInt(str.score, 10);\n      let afflicted;\n\n      if ([1, 2, 3].indexOf(strScore) > -1) {\n        baseModifier = -3;\n      } else if ([4, 5].indexOf(strScore) > -1) {\n        baseModifier = -2;\n      } else if ([6, 7, 8].indexOf(strScore) > -1) {\n        baseModifier = -1;\n      } else if ([9, 10, 11, 12].indexOf(strScore) > -1) {\n        baseModifier = 0;\n      } else if ([13, 14, 15].indexOf(strScore) > -1) {\n        baseModifier = 1;\n      } else if ([16, 17].indexOf(strScore) > -1) {\n        baseModifier = 2;\n      } else if (strScore === 18) {\n        baseModifier = 3;\n      }\n\n      /*-1 if afflicted*/\n      if (strAfflicted === false) {\n        afflicted = 0;\n      } else {\n        afflicted = 1;\n      }\n\n      let modifier = baseModifier - afflicted;\n\n      return class_details[dwc].base_load + modifier;\n    } else {\n      return '';\n    }\n  }\n\n  function validateLoad() {\n    if (totalLoad() > maxLoad()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  return (\n    <>\n      <AddItemState.Provider value={ctx}>\n        <AddItem />\n      </AddItemState.Provider>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell style={{ width: 20 }}></TableCell>\n              <TableCell align='center' style={{ width: 40 }}>\n                EQUIPPED\n              </TableCell>\n              <TableCell align='center'>NAME</TableCell>\n              <TableCell align='center' style={{ width: 65 }}>\n                USES\n              </TableCell>\n              <TableCell align='center' style={{ width: 180 }}>\n                TAGS\n              </TableCell>\n              <TableCell align='center' style={{ width: 80 }}>\n                WEIGHT\n              </TableCell>\n              <TableCell style={{ width: 40 }}>\n                <Tooltip title='Add Gear'>\n                  <IconButton aria-label='add' onClick={handleClickOpen}>\n                    <Add />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {character.items &&\n              character.items.map((item, index) => (\n                <Row key={index} index={index} item={item} />\n              ))}\n            <TableRow>\n              <TableCell align='right' colSpan='5'>\n                LOAD\n              </TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  error={validateLoad()}\n                  size='small'\n                  variant='outlined'\n                  name='totalLoad'\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  inputProps={{\n                    style: { textAlign: 'center' },\n                  }}\n                  value={totalLoad() + ' / ' + maxLoad()}\n                />\n              </TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import { createContext } from 'react';\n\nconst AddSpellState = createContext();\n\nexport default AddSpellState;\n","import React, { useContext, useState } from 'react';\nimport AddSpellState from 'components/contexts/AddSpellState';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  MenuItem,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactMarkdown from 'react-markdown';\nimport { class_details } from 'data/classDetails';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginTop: 5,\n    marginBottom: 5,\n    minWidth: '100%',\n  },\n}));\n\nexport default function AddSpell() {\n  const classes = useStyles();\n  const { open, setOpen } = useContext(AddSpellState);\n  const { character, setCharacter } = useContext(CharacterState);\n  const [charaClass, setCharaClass] = useState(character.dw_class);\n  const [levelZero, setLevelZero] = useState(true);\n  const [levelOne, setLevelOne] = useState(true);\n  const [levelThree, setLevelThree] = useState(false);\n  const [levelFive, setLevelFive] = useState(false);\n  const [levelSeven, setLevelSeven] = useState(false);\n  const [levelNine, setLevelNine] = useState(false);\n\n  function handleCancel() {\n    setLevelZero(false);\n    setLevelOne(false);\n    setLevelThree(false);\n    setLevelFive(false);\n    setLevelSeven(false);\n    setLevelNine(false);\n    setCharaClass('');\n    setOpen(false);\n  }\n\n  function handleSave(spell) {\n    addSpell(spell);\n    handleCancel();\n  }\n\n  //TODO PREPARED = FALSE\n  const addSpell = (spell) => {\n    const newSpell = class_details[charaClass].spells.find(\n      (x) => x.name === spell\n    );\n    if (newSpell) {\n      const newSpells = [...character.spells, newSpell]; // copying the old array and adding new spell depending upon selection\n      setCharacter((character) => ({ ...character, spells: newSpells })); // set array back\n    }\n  };\n\n  function level(input) {\n    if (input === 0 && levelZero) {\n      return input;\n    } else if (input === 1 && levelOne) {\n      return input;\n    } else if (input === 3 && levelThree) {\n      return input;\n    } else if (input === 5 && levelFive) {\n      return input;\n    } else if (input === 7 && levelSeven) {\n      return input;\n    } else if (input === 9 && levelNine) {\n      return input;\n    } else {\n      return null;\n    }\n  }\n\n  function isChosen(spell) {\n    if (character.spells.filter((x) => x.name === spell).length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleCancel}>\n      <DialogTitle id='form-dialog-title'>Add new spell</DialogTitle>{' '}\n      <DialogContent>\n        <div>\n          <FormControl variant='outlined' className={classes.formControl}>\n            <InputLabel>Class</InputLabel>\n            <Select\n              label='Class'\n              value={charaClass}\n              name='class'\n              onChange={(event) => {\n                setCharaClass(event.target.value);\n              }}>\n              <MenuItem value='Cleric'>Cleric</MenuItem>\n              <MenuItem value='Wizard'>Wizard</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <br />\n        <div>\n          <FormControl component='fieldset'>\n            <FormLabel component='legend'>Filter by level:</FormLabel>\n            <FormGroup row>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color='primary'\n                    name='One'\n                    checked={!!levelZero}\n                    onChange={() => setLevelZero(!levelZero)}\n                  />\n                }\n                label='0'\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color='primary'\n                    name='One'\n                    checked={!!levelOne}\n                    onChange={() => setLevelOne(!levelOne)}\n                  />\n                }\n                label='1'\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color='primary'\n                    name='Three'\n                    checked={!!levelThree}\n                    onChange={() => setLevelThree(!levelThree)}\n                  />\n                }\n                label='3'\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color='primary'\n                    name='Five'\n                    checked={!!levelFive}\n                    onChange={() => setLevelFive(!levelFive)}\n                  />\n                }\n                label='5'\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color='primary'\n                    name='Seven'\n                    checked={!!levelSeven}\n                    onChange={() => setLevelSeven(!levelSeven)}\n                  />\n                }\n                label='7'\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color='primary'\n                    name='Nine'\n                    checked={!!levelNine}\n                    onChange={() => setLevelNine(!levelNine)}\n                  />\n                }\n                label='9'\n              />\n            </FormGroup>\n          </FormControl>\n        </div>\n        <br />\n        <div>\n          {charaClass &&\n            class_details[charaClass].spells\n              .filter(\n                (x) =>\n                  (x.level === level(0) ||\n                    x.level === level(1) ||\n                    x.level === level(3) ||\n                    x.level === level(5) ||\n                    x.level === level(7) ||\n                    x.level === level(9)) &&\n                  isChosen(x.name) !== true\n              )\n              .map((data, index) => {\n                return (\n                  <Typography component={'span'} key={index}>\n                    <Accordion>\n                      <AccordionSummary expandIcon={<ExpandMore />}>\n                        {data.name + ' (lvl ' + data.level + ')'}{' '}\n                        {data.ongoing ? ' (Ongoing)' : null}\n                        {data.school ? ' (' + data.school + ')' : null}\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        <div>\n                          <ReactMarkdown source={data.description} />\n                        </div>\n                        <br />\n                        <div>\n                          <Button\n                            onClick={() => handleSave(data.name)}\n                            color='primary'>\n                            Add Spell\n                          </Button>\n                        </div>\n                      </AccordionDetails>\n                    </Accordion>\n                  </Typography>\n                );\n              })}\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color='primary'>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useMemo, useState } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { Add, Delete } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Checkbox,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Tooltip,\n} from '@material-ui/core';\nimport AddSpellState from 'components/contexts/AddSpellState';\nimport AddSpell from 'components/character/AddSpell';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function CharacterSpells() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n  const [open, setOpen] = useState(false);\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\n  const dwc = character.dw_class;\n\n  // State manipulation\n  const updateSpellCheckbox = (event, index) => {\n    const target = event.target;\n    const name = target.name;\n    const checked = target.checked;\n    let newSpells = [...character.spells]; // copying the old array\n    newSpells[index] = {\n      ...character.spells[index],\n      [name]: checked,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      spells: newSpells,\n    })); // set array back\n  };\n\n  const updateSpell = (event, index) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let newSpells = [...character.spells]; // copying the old array\n    newSpells[index] = { ...character.spells[index], [name]: value }; // replace value\n    setCharacter((character) => ({ ...character, spells: newSpells })); // set array back\n  };\n\n  // Delete rows in the table\n  const deleteSpellRow = (index) => {\n    const newSpells = [...character.spells]; // copying the old array\n    newSpells.splice(index, 1); // remove item from array\n    setCharacter((character) => ({\n      ...character,\n      spells: newSpells,\n    })); // set array back\n  };\n\n  function totalPreparedSpells() {\n    if (character.spells) {\n      if (dwc === 'Cleric') {\n        return character.spells.reduce(\n          (totalSpells, data) => totalSpells + parseInt(data.level || 0, 10),\n          0\n        );\n      } else if (dwc === 'Wizard') {\n        return character.spells\n          .filter((x) => x.prepared === true)\n          .reduce(\n            (totalSpells, data) => totalSpells + parseInt(data.level || 0, 10),\n            0\n          );\n      }\n    } else {\n      return '';\n    }\n  }\n\n  function maxSpells() {\n    return parseInt(character.level, 10) + 1;\n  }\n\n  function validatePreparedSpells() {\n    if (totalPreparedSpells() > maxSpells()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function commune() {\n    //Deletes any non-rotes moves, and resets forgotten for all moves\n    let newSpells = [...character.spells]; // copying the old array\n    newSpells = newSpells.filter((x) => parseInt(x.level, 10) === 0);\n    newSpells = newSpells.map((x) => {\n      x.forgotten = false;\n      return x;\n    });\n    setCharacter((character) => ({\n      ...character,\n      spells: newSpells,\n    })); // set array back\n  }\n\n  function prepareSpells() {\n    //Unprepares any non-cantrips, and resets forgotten for all moves\n    let newSpells = [...character.spells]; // copying the old array\n    newSpells = newSpells.map((x) => {\n      if (parseInt(x.level, 10) !== 0) {\n        x.prepared = false;\n      }\n      x.forgotten = false;\n      return x;\n    });\n    setCharacter((character) => ({\n      ...character,\n      spells: newSpells,\n    })); // set array back\n  }\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  //TODO ADD SCHOOL / ONGOING\n  return (\n    <>\n      {dwc === 'Cleric' || dwc === 'Wizard' ? (\n        <>\n          <AddSpellState.Provider value={ctx}>\n            <AddSpell />\n          </AddSpellState.Provider>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} size='small'>\n              <TableHead>\n                <TableRow>\n                  {dwc === 'Wizard' ? (\n                    <TableCell align='center' style={{ width: 40 }}>\n                      PREPARED\n                    </TableCell>\n                  ) : null}\n                  <TableCell align='center' style={{ width: 40 }}>\n                    FORGOTTEN\n                  </TableCell>\n                  <TableCell align='center' style={{ width: 140 }}>\n                    NAME\n                  </TableCell>\n                  <TableCell align='center'>DESCRIPTION</TableCell>\n                  <TableCell align='center' style={{ width: 65 }}>\n                    LEVEL\n                  </TableCell>\n                  <TableCell align='center'>\n                    <Tooltip title='Add Spell'>\n                      <IconButton aria-label='add' onClick={handleClickOpen}>\n                        <Add />\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {character.spells &&\n                  character.spells.map((spell, index) => {\n                    return (\n                      <TableRow key={index}>\n                        {dwc === 'Wizard' ? (\n                          <TableCell align='center' style={{ width: 20 }}>\n                            <Checkbox\n                              name='prepared'\n                              checked={!!spell.prepared}\n                              onChange={(event) =>\n                                updateSpellCheckbox(event, index)\n                              }\n                              color='primary'\n                              disabled={spell.level == 0}\n                            />\n                          </TableCell>\n                        ) : null}\n                        <TableCell align='center' style={{ width: 20 }}>\n                          <Checkbox\n                            name='forgotten'\n                            checked={!!spell.forgotten}\n                            onChange={(event) =>\n                              updateSpellCheckbox(event, index)\n                            }\n                            color='primary'\n                          />\n                        </TableCell>\n                        <TableCell align='center'>\n                          <p>{spell.name}</p>\n                        </TableCell>\n                        <TableCell>\n                          <p>{spell.description}</p>\n                        </TableCell>\n                        <TableCell>\n                          <TextField\n                            fullWidth\n                            type='number'\n                            size='small'\n                            variant='outlined'\n                            inputProps={{\n                              style: { textAlign: 'center' },\n                              min: 0,\n                            }}\n                            value={spell.level}\n                            name='level'\n                            onChange={(event) => updateSpell(event, index)}\n                          />\n                        </TableCell>\n                        <TableCell style={{ width: 40 }}>\n                          {spell.level === 1000 ? (\n                            <Tooltip title='Delete'>\n                              <IconButton\n                                aria-label='delete'\n                                onClick={() => deleteSpellRow(index)}>\n                                <Delete />\n                              </IconButton>\n                            </Tooltip>\n                          ) : null}\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                <TableRow>\n                  {dwc === 'Wizard' ? (\n                    <TableCell align='right' colSpan='4'>\n                      PREPARED SPELLS\n                    </TableCell>\n                  ) : (\n                    <TableCell align='right' colSpan='3'>\n                      PREPARED SPELLS\n                    </TableCell>\n                  )}\n                  <TableCell>\n                    <TextField\n                      fullWidth\n                      error={validatePreparedSpells()}\n                      size='small'\n                      variant='outlined'\n                      name='totalLoad'\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                      inputProps={{\n                        style: { textAlign: 'center' },\n                      }}\n                      value={totalPreparedSpells() + ' / ' + maxSpells()}\n                    />\n                  </TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n            {dwc === 'Cleric' ? (\n              <Button\n                className={classes.button}\n                variant='contained'\n                color='primary'\n                onClick={() => commune()}>\n                COMMUNE\n              </Button>\n            ) : (\n              <Button\n                className={classes.button}\n                variant='contained'\n                color='primary'\n                onClick={() => prepareSpells()}>\n                PREPARE SPELLS\n              </Button>\n            )}\n          </TableContainer>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { standard_moves } from 'data/standardMoves';\nimport ReactMarkdown from 'react-markdown';\n\nexport default function CharacterStandardMoves() {\n  return (\n    <>\n      {standard_moves.map((data, index) => {\n        return (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              {data.name}\n            </AccordionSummary>\n            <AccordionDetails>\n              <div>\n                <ReactMarkdown escapeHtml={false} source={data.description} />\n              </div>\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { advanced_moves } from 'data/advancedMoves';\nimport ReactMarkdown from 'react-markdown';\n\nexport default function CharacterAdvancedMoves() {\n  return (\n    <>\n      {advanced_moves.map((data, index) => {\n        return (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              {data.name}\n            </AccordionSummary>\n            <AccordionDetails>\n              <div>\n                <ReactMarkdown escapeHtml={false} source={data.description} />\n              </div>\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n    </>\n  );\n}\n","import { createContext } from 'react';\n\nconst AddMoveState = createContext();\n\nexport default AddMoveState;\n","import React, { useContext, useState } from 'react';\nimport AddMoveState from 'components/contexts/AddMoveState';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  MenuItem,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactMarkdown from 'react-markdown';\nimport { class_details } from 'data/classDetails';\nimport { dw_classes } from 'data/dwClasses';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginTop: 5,\n    marginBottom: 5,\n    minWidth: '100%',\n  },\n}));\n\nexport default function AddMove() {\n  const classes = useStyles();\n  const { open, setOpen } = useContext(AddMoveState);\n  const { character, setCharacter } = useContext(CharacterState);\n  const [charaClass, setCharaClass] = useState(character.dw_class);\n  const [twoToFive, setTwoToFive] = useState(false);\n  const [sixToTen, setSixToTen] = useState(false);\n\n  function handleCancel() {\n    setTwoToFive(false);\n    setSixToTen(false);\n    setCharaClass('');\n    setOpen(false);\n  }\n\n  function handleSave(move) {\n    addMove(move);\n    handleCancel();\n  }\n\n  const addMove = (move) => {\n    const newMove = class_details[charaClass].moves.find(\n      (x) => x.name === move\n    );\n    if (newMove) {\n      const newMoves = [...character.moves, newMove]; // copying the old array and adding new move depending upon selection\n      setCharacter((character) => ({ ...character, moves: newMoves })); // set array back\n    }\n  };\n\n  function level(input) {\n    if (input === '2to5' && twoToFive) {\n      return input;\n    } else if (input === '6to10' && sixToTen) {\n      return input;\n    } else {\n      return null;\n    }\n  }\n\n  function isChosen(move) {\n    if (character.moves.filter((x) => x.name === move).length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleCancel}>\n      <DialogTitle id='form-dialog-title'>Add new move</DialogTitle>{' '}\n      <DialogContent>\n        <div>\n          <FormControl variant='outlined' className={classes.formControl}>\n            <InputLabel>Class</InputLabel>\n            <Select\n              label='Class'\n              value={charaClass}\n              name='class'\n              onChange={(event) => {\n                setCharaClass(event.target.value);\n              }}>\n              {dw_classes.map((data, index) => {\n                return (\n                  <MenuItem value={data} key={index}>\n                    {data}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n        <br />\n        <div>\n          <FormControl component='fieldset'>\n            <FormLabel component='legend'>Filter by level:</FormLabel>\n            <FormGroup row>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color='primary'\n                    name='2to5'\n                    checked={!!twoToFive}\n                    onChange={() => setTwoToFive(!twoToFive)}\n                  />\n                }\n                label='2-5'\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color='primary'\n                    name='6to10'\n                    checked={!!sixToTen}\n                    onChange={() => setSixToTen(!sixToTen)}\n                  />\n                }\n                label='6-10'\n              />\n            </FormGroup>\n          </FormControl>\n        </div>\n        <br />\n        <div>\n          {charaClass &&\n            class_details[charaClass].moves\n              .filter(\n                (x) =>\n                  (x.level === level('2to5') || x.level === level('6to10')) &&\n                  isChosen(x.name) !== true\n              )\n              .map((data, index) => {\n                return (\n                  <Typography component={'span'} key={index}>\n                    <Accordion>\n                      <AccordionSummary expandIcon={<ExpandMore />}>\n                        {data.name}\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        <div>\n                          <ReactMarkdown source={data.description} />\n                        </div>\n                        <br />\n                        <div>\n                          <Button\n                            onClick={() => handleSave(data.name)}\n                            color='primary'>\n                            Add Move\n                          </Button>\n                        </div>\n                      </AccordionDetails>\n                    </Accordion>\n                  </Typography>\n                );\n              })}\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color='primary'>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useMemo, useState } from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  IconButton,\n  TextField,\n  Tooltip,\n} from '@material-ui/core';\nimport {\n  Add,\n  Delete,\n  Edit,\n  ExpandMore,\n  Save,\n  Refresh,\n} from '@material-ui/icons';\nimport ReactMarkdown from 'react-markdown';\nimport CharacterState from 'components/contexts/CharacterState';\nimport AddMoveState from 'components/contexts/AddMoveState';\nimport AddMove from 'components/character/AddMove';\nimport { class_details } from 'data/classDetails';\n\nexport default function CharacterClassMoves() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const [open, setOpen] = useState(false);\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\n  const [editing, setEditing] = useState([]);\n  const [moves, setMoves] = useState(character.moves);\n  const dwc = character.dw_class;\n\n  function deleteMove(index) {\n    const newMoves = [...character.moves]; // copying the old array\n    if (character.moves[index].level !== 'starting') {\n      newMoves.splice(index, 1); // remove item from array\n      setCharacter((character) => ({ ...character, moves: newMoves })); // set array back\n    } else {\n      alert('Cannot delete starting move');\n    }\n  }\n\n  function editMove(index) {\n    const newEdit = [...editing];\n    newEdit[index] = !editing[index];\n    setEditing(newEdit);\n  }\n\n  function refreshMove(index) {\n    const newMoves = [...moves];\n    newMoves[index].description = class_details[dwc].moves.find(\n      (move) => move.name === character.moves[index].name\n    ).description;\n    setMoves(newMoves, saveMove(index));\n    editMove(index);\n  }\n\n  function handleDescChange(event, index) {\n    const newMoves = [...moves];\n    newMoves[index].description = event.target.value;\n    setMoves(newMoves);\n  }\n\n  function saveMove(index) {\n    const newMoves = [...moves];\n    newMoves[index].description = moves[index].description;\n    setCharacter((character) => ({ ...character, moves: newMoves }));\n    editMove(index);\n  }\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  return (\n    <>\n      <AddMoveState.Provider value={ctx}>\n        <AddMove />\n      </AddMoveState.Provider>\n      {moves.map((data, index) => {\n        return (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              {data.name} ({data.level})\n              {data.level === 'starting' ? null : (\n                <Tooltip title='Delete'>\n                  <IconButton\n                    aria-label='delete'\n                    onClick={() => deleteMove(index)}>\n                    <Delete />\n                  </IconButton>\n                </Tooltip>\n              )}\n            </AccordionSummary>\n            <AccordionDetails>\n              {editing[index] ? (\n                <>\n                  <TextField\n                    multiline\n                    fullWidth\n                    variant='outlined'\n                    defaultValue={data.description}\n                    onChange={(event) => handleDescChange(event, index)}\n                  />\n                  <div>\n                    <Tooltip title='Refresh Description'>\n                      <IconButton onClick={() => refreshMove(index)}>\n                        <Refresh />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title='Save Description'>\n                      <IconButton onClick={() => saveMove(index)}>\n                        <Save />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </>\n              ) : (\n                <>\n                  <div>\n                    <ReactMarkdown\n                      escapeHtml={false}\n                      source={data.description}\n                    />\n                  </div>\n                  <br />\n                  <div>\n                    <Tooltip title='Edit Description'>\n                      <IconButton onClick={() => editMove(index)}>\n                        <Edit />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </>\n              )}\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n      <Tooltip title='Add Move'>\n        <IconButton onClick={handleClickOpen}>\n          <Add />\n        </IconButton>\n      </Tooltip>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Box, Tab, Tabs } from '@material-ui/core';\nimport CharacterStandardMoves from 'components/character/CharacterStandardMoves';\nimport CharacterAdvancedMoves from 'components/character/CharacterAdvancedMoves';\nimport CharacterClassMoves from 'components/character/CharacterClassMoves';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}>\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function CharacterMoves() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleTabChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Tabs\n          value={value}\n          onChange={handleTabChange}\n          variant='scrollable'\n          scrollButtons='auto'>\n          <Tab label='Standard' {...a11yProps(0)} />\n          <Tab label='Advanced' {...a11yProps(1)} />\n          <Tab label='Class' {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <CharacterStandardMoves />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <CharacterAdvancedMoves />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <CharacterClassMoves />\n      </TabPanel>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: 126,\n    textAlign: 'center',\n  },\n  textField: {\n    width: 126,\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n}));\n\nexport default function DiceRoller() {\n  const [dice, setDice] = useState();\n  const [diceNum, setDiceNum] = useState();\n  const [rollResult, setRollResult] = useState(0);\n  const classes = useStyles();\n\n  function singleRoll(sides) {\n    const roll = Math.floor(Math.random() * sides) + 1;\n    return roll;\n  }\n\n  function rollDice(sides, diceNum) {\n    sides = parseInt(sides, 10);\n    diceNum = parseInt(diceNum, 10);\n    let total = 0;\n    for (let i = 0; i < diceNum; i++) {\n      total = total + singleRoll(sides);\n    }\n    return setRollResult(total);\n  }\n\n  return (\n    <>\n      <FormControl\n        variant='outlined'\n        size='small'\n        className={classes.formControl}>\n        <InputLabel>Dice</InputLabel>\n        <Select\n          tabIndex={-1}\n          defaultValue='null'\n          label='dice'\n          onChange={(event) => {\n            setDice(event.target.value);\n          }}>\n          <MenuItem disabled='disabled' value='null' hidden='hidden' />\n          <MenuItem value='6'>d6</MenuItem>\n          <MenuItem value='8'>d8</MenuItem>\n          <MenuItem value='10'>d10</MenuItem>\n        </Select>\n      </FormControl>\n      <br />\n      <FormControl\n        variant='outlined'\n        size='small'\n        className={classes.formControl}>\n        <InputLabel>Number</InputLabel>\n        <Select\n          tabIndex={-1}\n          defaultValue='null'\n          label='Number'\n          onChange={(event) => {\n            setDiceNum(event.target.value);\n          }}>\n          <MenuItem disabled='disabled' value='null' hidden='hidden' />\n          <MenuItem value='1'>1</MenuItem>\n          <MenuItem value='2'>2</MenuItem>\n          <MenuItem value='3'>3</MenuItem>\n        </Select>\n      </FormControl>\n      <Button onClick={() => rollDice(dice, diceNum)}>Roll</Button>\n      <TextField\n        variant='outlined'\n        size='small'\n        label='Result'\n        className={classes.textField}\n        value={rollResult}\n      />\n    </>\n  );\n}\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useContext,\n  useMemo,\n} from 'react';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport PropTypes from 'prop-types';\nimport CharacterState from 'components/contexts/CharacterState';\nimport AuthState from 'components/contexts/AuthState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Box, Tab, Tabs } from '@material-ui/core';\nimport CharacterSheetHeader from 'components/character/CharacterSheetHeader';\nimport CharacterBasicDetails from 'components/character/CharacterBasicDetails';\nimport CharacterBasicStats from 'components/character/CharacterBasicStats';\nimport CharacterAbilities from 'components/character/CharacterAbilities';\nimport CharacterBonds from 'components/character/CharacterBonds';\nimport CharacterGear from 'components/character/CharacterGear';\nimport CharacterSpells from 'components/character/CharacterSpells';\nimport CharacterMoves from 'components/character/CharacterMoves';\nimport DiceRoller from 'components/other/DiceRoller';\n\n// Tab functions\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}>\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\n// Debounce function\nconst debounce = (callback, delay) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => callback(...args), delay);\n  };\n};\n\nexport default function CharacterSheet() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [character, setCharacter] = useState({});\n  const { campaignURL, characterURL } = useParams();\n  const { currentUser } = useContext(AuthState);\n\n  const handleTabChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  // Subscribe to Character Data\n  useEffect(() => {\n    if (campaignURL && characterURL) {\n      const unsubscribe = FirebaseService.streamCharacter(\n        campaignURL,\n        characterURL,\n        {\n          next: (documentSnapshot) => {\n            setCharacter(documentSnapshot.data());\n          },\n          error: (error) => {\n            alert('Failed to load character data correctly, see console error');\n            console.error('Error loading document:', error);\n          },\n        }\n      );\n      return unsubscribe;\n    }\n  }, [campaignURL, characterURL, setCharacter]);\n\n  // Debounced Save\n  const debouncedSave = useCallback(\n    debounce(\n      (character) =>\n        FirebaseService.saveCharacter(campaignURL, characterURL, character)\n          .then(() => {\n            console.info('Saved Character:', character);\n          })\n          .catch((error) => {\n            alert('Failed to save character data correctly, see console error');\n            console.error('Error saving document:', error);\n          }),\n      5000\n    ),\n    []\n  );\n\n  // Save changes to character\n  useEffect(() => {\n    if (\n      character &&\n      Object.keys(character).length >= 1 &&\n      currentUser.email === character.owner\n    ) {\n      console.info('CharacterState:', character);\n      debouncedSave(character);\n    }\n  }, [character]); //Only trigger effect on change of character\n\n  const ctx = useMemo(() => ({ character, setCharacter }), [character]); //Memo-ised state for performance\n\n  return (\n    <CharacterState.Provider value={ctx}>\n      <CharacterSheetHeader />\n      <br />\n      <div className={classes.root}>\n        <CharacterBasicStats />\n        <br />\n        <CharacterAbilities />\n        <br />\n        <AppBar position='static'>\n          <Tabs\n            value={value}\n            onChange={handleTabChange}\n            variant='scrollable'\n            scrollButtons='auto'>\n            <Tab label='About' {...a11yProps(0)} />\n            <Tab label='Bonds' {...a11yProps(1)} />\n            <Tab label='Spells' {...a11yProps(2)} />\n            <Tab label='Gear' {...a11yProps(3)} />\n            <Tab label='Moves' {...a11yProps(4)} />\n            <Tab label='Dice Roller' {...a11yProps(5)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <CharacterBasicDetails />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <CharacterBonds />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <CharacterSpells />\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          <CharacterGear />\n        </TabPanel>\n        <TabPanel value={value} index={4}>\n          <CharacterMoves />\n        </TabPanel>\n        <TabPanel value={value} index={5}>\n          <DiceRoller />\n        </TabPanel>\n      </div>\n    </CharacterState.Provider>\n  );\n}\n","import { createContext } from 'react';\n\nconst CampaignState = createContext();\n\nexport default CampaignState;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { Breadcrumbs } from '@material-ui/core';\n\nexport default function CampaignHeader() {\n  const { campaignURL } = useParams();\n\n  return (\n    <div>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <Link to='/dw-react'>Home</Link>\n        <p>{campaignURL}</p>\n      </Breadcrumbs>\n      <h1>Campaign: {campaignURL}</h1>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CampaignState from 'components/contexts/CampaignState';\nimport { Add, Delete } from '@material-ui/icons';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n});\n\nexport default function CampaignDetails() {\n  const classes = useStyles();\n  const { campaign } = useContext(CampaignState);\n  const { campaignURL } = useParams();\n\n  // Delete Character\n  const deleteCharacter = (campaign, character) => {\n    if (campaign && character) {\n      //don't save unless details present\n      FirebaseService.deleteCharacter(campaign, character)\n        .then(() => {\n          console.info('Deleted Character:', character);\n        })\n        .catch((error) => {\n          alert('Failed to delete character, see console error');\n          console.error('Error deleting document:', error);\n        });\n    } else {\n      alert('Cannot delete blank character');\n    }\n  };\n\n  return (\n    <Grid className={classes.root}>\n      <Grid item xs={12}>\n        <Grid container justify='center' spacing={1}>\n          {campaign.campaign &&\n            campaign.campaign.map((campaign, index) => {\n              return (\n                <Grid item key={index}>\n                  <Card className={classes.root}>\n                    <CardHeader\n                      action={\n                        <Tooltip title='Delete'>\n                          <IconButton\n                            aria-label='delete'\n                            onClick={() =>\n                              deleteCharacter(campaignURL, campaign.character)\n                            }>\n                            <Delete />\n                          </IconButton>\n                        </Tooltip>\n                      }\n                      title={\n                        <Link\n                          to={\n                            '/dw-react/' +\n                            campaignURL +\n                            '/' +\n                            campaign.character\n                          }>\n                          {campaign.character}\n                        </Link>\n                      }\n                      subheader={campaign.characterData.owner}\n                    />\n                    <CardContent>\n                      <Typography variant='body1' component='p'>\n                        Level: {campaign.characterData.level}\n                      </Typography>\n                      <Typography variant='body1' component='p'>\n                        Class: {campaign.characterData.dw_class}\n                      </Typography>\n                      <Typography variant='body1' component='p'>\n                        Race: {campaign.characterData.race}\n                      </Typography>\n                      <Typography variant='body1' component='p'>\n                        Alignment: {campaign.characterData.alignment}\n                      </Typography>\n                      <br />\n                      <Typography variant='body2' component='p'>\n                        HP: {campaign.characterData.hp}\n                      </Typography>\n                      <Typography variant='body2' component='p'>\n                        XP: {campaign.characterData.xp}\n                      </Typography>\n                      <Typography variant='body2' component='p'>\n                        Funds: {campaign.characterData.funds}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              );\n            })}\n          <Grid item>\n            <Card className={classes.root}>\n              <CardHeader title='Add Character' />\n              <CardContent>\n                <Link to={'/dw-react/' + campaignURL + '/create-character'}>\n                  <Tooltip title='Add Character'>\n                    <IconButton aria-label='add'>\n                      <Add />\n                    </IconButton>\n                  </Tooltip>\n                </Link>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CampaignState from 'components/contexts/CampaignState';\nimport CampaignHeader from 'components/campaign/CampaignHeader';\nimport CampaignDetails from 'components/campaign/CampaignDetails';\n\nexport default function CampaignSheet() {\n  const [campaign, setCampaign] = useState({});\n  const { campaignURL } = useParams();\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    if (campaignURL) {\n      const unsubscribe = FirebaseService.streamCharacters(campaignURL, {\n        next: (querySnapshot) => {\n          const updatedCharacterList = querySnapshot.docs.map((docSnapshot) => {\n            return {\n              character: docSnapshot.id,\n              characterData: docSnapshot.data(),\n            };\n          });\n          setCampaign((campaign) => ({ campaign: updatedCharacterList }));\n        },\n        error: (error) => {\n          alert('Failed to load campaign data correctly, see console error');\n          console.error('Error loading document:', error);\n        },\n      });\n      return unsubscribe;\n    }\n  }, [campaignURL, setCampaign]);\n\n  useEffect(() => {\n    console.info('Campaign State:', campaign);\n  }, [campaign]); //Only log to console if state actually changes\n\n  const ctx = useMemo(() => ({ campaign, setCampaign }), [campaign]); //Memo-ised state for performance\n\n  return (\n    <CampaignState.Provider value={ctx}>\n      <CampaignHeader />\n      <br />\n      <CampaignDetails />\n    </CampaignState.Provider>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as FirebaseService from 'services/firebase';\nimport AuthState from 'components/contexts/AuthState';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Breadcrumbs,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormLabel,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  Step,\n  Stepper,\n  StepLabel,\n  TextField,\n} from '@material-ui/core';\nimport { ExpandMore, Save } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactMarkdown from 'react-markdown';\nimport { class_details } from 'data/classDetails';\nimport { dw_classes } from 'data/dwClasses';\nimport { items } from 'data/items';\nimport { ability_afflictions } from 'data/abilityAfflictions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  card: {\n    minWidth: 275,\n    maxWidth: 700,\n  },\n  abCard: {\n    minWidth: 275,\n    maxWidth: 800,\n  },\n  cardHeader: {\n    paddingBottom: 0,\n  },\n  cardContent: {\n    '&:last-child': {\n      paddingBottom: 5,\n    },\n  },\n  formControl: {\n    marginTop: 5,\n    marginBottom: 5,\n    minWidth: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  abCardContent: {\n    paddingTop: 5,\n    '&:last-child': {\n      paddingBottom: 0,\n    },\n  },\n  abTitle: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  abTextField: {\n    width: 85,\n  },\n  abButton: {\n    width: 85,\n    fontSize: 11,\n    fontWeight: 'bold',\n  },\n}));\n\nfunction getSteps() {\n  return [\n    'Set Basic Details',\n    'Select Gear',\n    'Select Moves/Spells',\n    'Choose Abilities',\n    'Add Bonds',\n  ];\n}\n\nexport default function CampaignDetails() {\n  const classes = useStyles();\n  const history = useHistory();\n  const { currentUser } = useContext(AuthState);\n  const { campaignURL } = useParams();\n  const [charaName, setCharaName] = useState('');\n  const [charaFullName, setCharaFullName] = useState('');\n  const [charaClass, setCharaClass] = useState('');\n  const [charaRace, setCharaRace] = useState('');\n  const [charaAlignment, setCharaAlignment] = useState('');\n  const [charaRaceMove, setCharaRaceMove] = useState('');\n  const [charaMoveOption, setCharaMoveOption] = useState('');\n  const [charaSpellOptions, setCharaSpellOptions] = useState([]);\n  const [charaAbilities, setCharaAbilities] = useState([\n    { category: 'STR', score: '8', afflicted: false },\n    { category: 'DEX', score: '8', afflicted: false },\n    { category: 'CON', score: '8', afflicted: false },\n    { category: 'INT', score: '8', afflicted: false },\n    { category: 'WIS', score: '8', afflicted: false },\n    { category: 'CHA', score: '8', afflicted: false },\n  ]);\n  const [charaGearOptions, setCharaGearOptions] = useState([]);\n  const [charaBonds, setCharaBonds] = useState([]);\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = getSteps();\n\n  function handleNext() {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  }\n\n  function handleBondChange(event) {\n    let target = event.target;\n    if (target.checked) {\n      // Add to array\n      // Copying the old array and adding item\n      const newBonds = [...charaBonds, target.name];\n      // Set array back\n      setCharaBonds(newBonds);\n    } else {\n      // Remove from array\n      // Copying the old array\n      let newBonds = charaBonds.filter((bond) => bond !== target.name);\n      // Set array back\n      setCharaBonds(newBonds);\n    }\n  }\n\n  function clearAttributes() {\n    setCharaName('');\n    setCharaClass('');\n    setCharaRace('');\n    setCharaAlignment('');\n    setCharaRaceMove('');\n    setCharaBonds([]);\n    setCharaMoveOption('');\n    setCharaGearOptions([]);\n    setCharaSpellOptions([]);\n    setCharaAbilities([\n      { category: 'STR', score: '8', afflicted: false },\n      { category: 'DEX', score: '8', afflicted: false },\n      { category: 'CON', score: '8', afflicted: false },\n      { category: 'INT', score: '8', afflicted: false },\n      { category: 'WIS', score: '8', afflicted: false },\n      { category: 'CHA', score: '8', afflicted: false },\n    ]);\n    setCharaFullName('');\n    setActiveStep(0);\n  }\n\n  function handleReset() {\n    clearAttributes();\n  }\n\n  function handleCancel() {\n    history.push('/dw-react/' + campaignURL);\n  }\n\n  function handleSave() {\n    saveCharacter();\n  }\n\n  function alignmentAttribute() {\n    if (charaClass && charaAlignment) {\n      return class_details[charaClass].alignments.find(\n        (x) => x.alignment === charaAlignment\n      ).attribute;\n    } else {\n      return '';\n    }\n  }\n\n  function classIntro() {\n    if (charaClass) {\n      return class_details[charaClass].intro;\n    } else {\n      return '';\n    }\n  }\n\n  function suggestedNames() {\n    return class_details[charaClass].suggested_names;\n  }\n\n  function gearDescription(gear) {\n    let description = '';\n    let count = 0;\n\n    gear.map((input) => {\n      let weight = '';\n      let uses = '';\n      let tags = '';\n      let attributes = '';\n      let item_description = '';\n      // Stripping leading number and spaces\n      const singleInput = input.replace(/^\\d*x /, '');\n\n      const item = items.find((x) => x.name === singleInput);\n      if (item) {\n        if (Number.isFinite(item.weight)) {\n          weight = item.weight + ' weight';\n        }\n        if (Number.isFinite(item.uses)) {\n          uses = item.uses + ' uses';\n        }\n        if (item.tags) {\n          tags = item.tags.join(', ');\n        }\n        attributes = [uses, tags, weight].filter(Boolean).join(', ');\n        if (attributes) {\n          item_description = input + ' (' + attributes + ')';\n        } else {\n          item_description = input;\n        }\n      } else if (singleInput === 'Coins') {\n        item_description = input;\n      } else {\n        item_description = input + ' (NON STANDARD ITEM - NEEDS TO BE FIXED)';\n      }\n\n      if (count === 0) {\n        description = item_description;\n      } else {\n        description = description + ' and ' + item_description;\n      }\n      count = count + 1;\n\n      return description;\n    });\n    return description;\n  }\n\n  function addCharaGearOptions(option, index) {\n    const newGear = [...charaGearOptions];\n    newGear[index] = option;\n    setCharaGearOptions(newGear);\n  }\n\n  function addCharaGearMultiOptions(event, index) {\n    let newArr = [...charaGearOptions];\n\n    if (!newArr[index]) {\n      newArr[index] = [];\n    }\n\n    if (event.currentTarget.checked) {\n      newArr[index] = [...newArr[index], event.target.name];\n    } else {\n      newArr[index] = newArr[index].filter(\n        (item) => item !== event.target.name\n      );\n    }\n\n    setCharaGearOptions(\n      newArr,\n      console.log('charaGearOptions', charaGearOptions)\n    );\n  }\n\n  function gearOptions() {\n    const gearChoices = class_details[charaClass].starting_gear_options;\n    if (gearChoices.length > 0) {\n      const output = gearChoices.map((gearChoice, index) => {\n        const choiceGroup = index;\n        if (gearChoice.multiplicity === 1) {\n          return (\n            <React.Fragment key={choiceGroup}>\n              <FormControl\n                key={'gearChoiceGroup' + choiceGroup}\n                component='fieldset'\n                className={classes.formControl}>\n                <FormLabel component='legend'>Choose from:</FormLabel>\n                <RadioGroup\n                  aria-label='starting gear choice'\n                  name='starting gear choice'\n                  value={charaGearOptions[choiceGroup] || null}\n                  onChange={(event) => {\n                    addCharaGearOptions(event.target.value, choiceGroup);\n                  }}>\n                  {gearChoice.options.map((gear, index) => {\n                    const option = index;\n                    return (\n                      <FormControlLabel\n                        key={'option' + option}\n                        value={option.toString()}\n                        control={<Radio color='primary' />}\n                        label={gearDescription(gear)}\n                      />\n                    );\n                  })}\n                </RadioGroup>\n              </FormControl>\n              <br />\n              <br />\n            </React.Fragment>\n          );\n        } else {\n          return (\n            <React.Fragment key={choiceGroup}>\n              <FormControl\n                key={'gearChoiceGroup' + choiceGroup}\n                component='fieldset'\n                className={classes.formControl}>\n                <FormLabel component='legend'>\n                  Choose {gearChoice.multiplicity}:\n                </FormLabel>\n                <FormGroup>\n                  {gearChoice.options.map((gear, index) => {\n                    const option = index;\n                    return (\n                      <FormControlLabel\n                        key={'checkbox' + option}\n                        control={\n                          <Checkbox\n                            color='primary'\n                            name={option}\n                            onChange={(event) => {\n                              addCharaGearMultiOptions(event, choiceGroup);\n                            }}\n                          />\n                        }\n                        label={gearDescription(gear)}\n                      />\n                    );\n                  })}\n                </FormGroup>\n              </FormControl>\n              <br />\n              <br />\n            </React.Fragment>\n          );\n        }\n      });\n      return output;\n    } else {\n      return <p>No move choices to make</p>;\n    }\n  }\n\n  function gearNext() {\n    if (\n      charaGearOptions &&\n      (charaGearOptions.length ===\n        class_details[charaClass].starting_gear_options.length ||\n        (charaClass === 'Fighter' && charaGearOptions[1].length === 2))\n    ) {\n      return (\n        <Button\n          className={classes.button}\n          variant='contained'\n          color='primary'\n          onClick={handleNext}>\n          Next\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          disabled\n          className={classes.button}\n          variant='contained'\n          color='primary'>\n          Next\n        </Button>\n      );\n    }\n  }\n\n  function moveOptions() {\n    const moveChoices = class_details[charaClass].moves.filter(\n      (x) => x.level === 'starting' && x.selected === false\n    );\n    if (moveChoices.length > 0) {\n      return (\n        <>\n          <br />\n          <FormControl component='fieldset' className={classes.formControl}>\n            <FormLabel component='legend'>Choose an additional move:</FormLabel>\n            <RadioGroup\n              aria-label='starting move choice'\n              name='starting move choice'\n              value={charaMoveOption}\n              onChange={(event) => setCharaMoveOption(event.target.value)}>\n              {moveChoices.map((move, index) => {\n                return (\n                  <FormControlLabel\n                    key={index}\n                    value={move.name}\n                    control={<Radio color='primary' />}\n                    label={move.name + ' - ' + move.description}\n                  />\n                );\n              })}\n            </RadioGroup>\n          </FormControl>\n        </>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  function moveNext() {\n    const moveChoice = charaMoveOption.length;\n    const spellChoices = charaSpellOptions.filter((v) => v === true).length;\n    if (\n      (charaClass === 'Barbarian' && moveChoice > 0) ||\n      //(charaClass === 'Cleric' && spellChoices === 2) ||\n      (charaClass === 'Wizard' && spellChoices === 3) ||\n      !['Barbarian', 'Wizard'].includes(charaClass)\n    ) {\n      return (\n        <Button\n          className={classes.button}\n          variant='contained'\n          color='primary'\n          onClick={handleNext}>\n          Next\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          disabled\n          className={classes.button}\n          variant='contained'\n          color='primary'>\n          Next\n        </Button>\n      );\n    }\n  }\n\n  function addCharaSpellOptions(event) {\n    let newArr = [];\n    if (event.currentTarget.checked) {\n      newArr = [...charaSpellOptions, event.target.name];\n    } else {\n      newArr = charaSpellOptions.filter((spell) => spell !== event.target.name);\n    }\n    setCharaSpellOptions(\n      newArr,\n      console.log('charaSpellOptions', charaSpellOptions)\n    );\n  }\n\n  function spellOptions() {\n    if (charaClass === 'Wizard') {\n      const spellChoices = class_details[charaClass].spells.filter(\n        (x) => x.level === 1\n      );\n      return (\n        <>\n          <br />\n          <FormControl component='fieldset' className={classes.formControl}>\n            <FormLabel component='legend'>\n              Choose three first level spells to add to your spellbook:\n            </FormLabel>\n            <br />\n            <FormGroup>\n              {spellChoices.map((spell, index) => {\n                let spellOngoing = '';\n                if (spell.ongoing) {\n                  spellOngoing = ' (Ongoing)';\n                }\n                let spellSchool = '';\n                if (spell.school) {\n                  spellSchool = ' (' + spell.school + ')';\n                }\n                const spellDescr =\n                  spell.name +\n                  spellOngoing +\n                  spellSchool +\n                  ' - ' +\n                  spell.description;\n                return (\n                  <FormControlLabel\n                    key={'checkbox' + index}\n                    control={\n                      <Checkbox\n                        color='primary'\n                        name={spell.name}\n                        onChange={(event) => {\n                          addCharaSpellOptions(event);\n                        }}\n                      />\n                    }\n                    label={spellDescr}\n                  />\n                );\n              })}\n            </FormGroup>\n          </FormControl>\n        </>\n      );\n      /*} else if (charaClass === 'Cleric') {\n      const spellChoices = class_details[charaClass].spells.filter(\n        (x) => x.level === 1\n      );\n      return (\n        <>\n          <br />\n          <FormControl component='fieldset' className={classes.formControl}>\n            <FormLabel component='legend'>\n              Choose two first level spells to additionally prepare:\n            </FormLabel>\n            <br />\n            <FormGroup>\n              {spellChoices.map((spell, index) => {\n                let spellOngoing = '';\n                if (spell.ongoing) {\n                  spellOngoing = ' (Ongoing)';\n                }\n                const spellDescr =\n                  spell.name + spellOngoing + ' - ' + spell.description;\n                return (\n                  <FormControlLabel\n                    key={'checkbox' + index}\n                    control={\n                      <Checkbox\n                        color='primary'\n                        checked={\n                          charaSpellOptions[index]\n                            ? !!charaSpellOptions[index]\n                            : false\n                        }\n                        onChange={(event) => {\n                          addCharaSpellOptions(event.target.checked, index);\n                        }}\n                      />\n                    }\n                    label={spellDescr}\n                  />\n                );\n              })}\n            </FormGroup>\n          </FormControl>\n        </>\n      );*/\n    } else {\n      return null;\n    }\n  }\n\n  function updateAbilityScore(index, abScore) {\n    let newAbilities = [...charaAbilities]; // copying the old array\n    newAbilities[index] = {\n      ...charaAbilities[index],\n      score: abScore,\n    }; // replace value\n    setCharaAbilities(newAbilities); // set array back\n  }\n\n  function updateAbilityAfflicted(index) {\n    const newAffliction = !charaAbilities[index].afflicted; //switching boolean\n    let newAbilities = [...charaAbilities]; // copying the old array\n    newAbilities[index] = {\n      ...charaAbilities[index],\n      afflicted: newAffliction,\n    }; // replace value\n    setCharaAbilities(newAbilities); // set array back\n  }\n\n  function afflictedValue(ability, afflicted) {\n    if (afflicted) {\n      return ability_afflictions[ability];\n    } else {\n      return 'Unafflicted';\n    }\n  }\n\n  function maxHp() {\n    return (\n      class_details[charaClass].base_hp +\n      parseInt(charaAbilities.find((x) => x.category === 'CON').score, 10)\n    );\n  }\n\n  function abilityModifier(abilityScore, abilityAffliction) {\n    if (abilityScore) {\n      let baseModifier;\n      let afflicted;\n\n      abilityScore = parseInt(abilityScore, 10);\n\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\n        baseModifier = -3;\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\n        baseModifier = -2;\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n        baseModifier = -1;\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n        baseModifier = 0;\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n        baseModifier = 1;\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\n        baseModifier = 2;\n      } else if (abilityScore === 18) {\n        baseModifier = 3;\n      }\n\n      /* -1 if afflicted */\n      if (abilityAffliction) {\n        afflicted = 1;\n      } else {\n        afflicted = 0;\n      }\n\n      let modifier = baseModifier - afflicted;\n\n      if (modifier > 0) {\n        return '+' + modifier;\n      } else {\n        return modifier;\n      }\n    } else {\n      return '';\n    }\n  }\n\n  function validateScore() {\n    const totalScore = charaAbilities.reduce(\n      (totalScore, data) => totalScore + parseInt(data.score || 0, 10),\n      0\n    );\n    if (totalScore !== 73) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function processMoves() {\n    // STARTING MOVES\n    let startingMoves = class_details[charaClass].moves.filter(\n      (x) => x.level === 'starting' && x.selected === true\n    );\n    if (charaMoveOption.length > 0) {\n      const newMoves = class_details[charaClass].moves.filter(\n        (x) => x.name === charaMoveOption\n      );\n      startingMoves = startingMoves.concat(newMoves);\n    }\n    return startingMoves;\n  }\n\n  function processSpells() {\n    // STARTING SPELLS\n    let startingSpells = [];\n    if (charaClass === 'Cleric' || charaClass === 'Wizard') {\n      // You start with all level 0 spells\n      startingSpells = class_details[charaClass].spells.filter(\n        (x) => x.level === 0\n      );\n      if (\n        charaRaceMove ===\n        'You are one with stone. When you commune you are also granted a special version of Words of the Unspeaking as a rote which only works on stone.'\n      ) {\n        const raceSpell = [\n          {\n            name: 'Words of the Unspeaking (Stone)',\n            description:\n              'With a touch you speak to the spirits within stone. The stone you touch answers three questions you pose, as best it can.',\n            level: 0,\n          },\n        ];\n        startingSpells = startingSpells.concat(raceSpell);\n      }\n      if (\n        charaRaceMove ===\n        'Magic is as natural as breath to you. Detect Magic is a cantrip for you.'\n      ) {\n        const raceSpell = [\n          {\n            name: 'Detect Magic',\n            description:\n              'One of your senses is briefly attuned to magic. The GM will tell you what here is magical.',\n            level: 0,\n            school: 'Divination',\n            ongoing: true,\n          },\n        ];\n        startingSpells = startingSpells.concat(raceSpell);\n      }\n      const spellOptions = class_details[charaClass].spells.filter(\n        (x) => x.level === 1\n      );\n      let chosenSpell = '';\n      const newSpells = charaSpellOptions\n        .map((option, index) => {\n          if (option) {\n            chosenSpell = spellOptions[index];\n          } else {\n            chosenSpell = null;\n          }\n          return chosenSpell;\n        })\n        .filter((x) => x !== null);\n      startingSpells = startingSpells.concat(newSpells);\n    }\n\n    if (charaClass === 'Cleric') {\n      //Adding forgotten\n      startingSpells = startingSpells.map((x) => {\n        return Object.assign({}, x, { forgotten: false });\n      });\n    } else if (charaClass === 'Wizard') {\n      //Adding prepared and forgotten\n      startingSpells = startingSpells.map((x) => {\n        if (x.level === 0) {\n          return Object.assign({}, x, { prepared: true, forgotten: false });\n        } else {\n          return Object.assign({}, x, { prepared: false, forgotten: false });\n        }\n      });\n    }\n    return startingSpells;\n  }\n\n  function saveCharacter() {\n    if (campaignURL && charaName) {\n      const startingMoves = processMoves();\n      const startingSpells = processSpells();\n      const maxHP = maxHp();\n\n      // STARTING FUNDS\n      let startingFunds = String(class_details[charaClass].starting_funds);\n      // STARTING GEAR\n      let startingGear = class_details[charaClass].starting_gear;\n      let gearChoices = charaGearOptions\n        .map((choice, index) => {\n          const choiceGroup = index;\n          let item = '';\n          // Lookup gear choices\n          if (Array.isArray(choice)) {\n            // For multi-choice options cycle through and for true vals pick option\n            choice.map((option, index) => {\n              if (option) {\n                item =\n                  class_details[charaClass].starting_gear_options[choiceGroup]\n                    .options[index];\n              } else {\n                item = null;\n              }\n              return item;\n            });\n          } else {\n            item =\n              class_details[charaClass].starting_gear_options[choiceGroup]\n                .options[choice];\n          }\n          return item;\n        })\n        .filter((x) => x !== null);\n      // Flatten array of choices and add to starting Gear\n      startingGear = startingGear.concat(gearChoices.flat());\n      // Converting gear into actual items and adding checkboxes\n      startingGear = startingGear.map((item) => {\n        // Stripping leading number and spaces for multiple items\n        const singleItem = item.replace(/^\\d*x /, '');\n\n        if (singleItem === 'Coins') {\n          // If item is a coin then add it to starting funds\n          const coins = item.replace(/x Coins/, '');\n          startingFunds = String(\n            parseInt(startingFunds, 10) + parseInt(coins, 10)\n          );\n          return null;\n        } else {\n          if (singleItem === item) {\n            // If item is a single item\n            return Object.assign(\n              {},\n              items.find((x) => x.name === item),\n              { checkbox: false }\n            );\n          } else {\n            // If item is a multiple\n            const ammount = item.match(/^\\d*/);\n            let singleObject = Object.assign(\n              {},\n              items.find((x) => x.name === singleItem),\n              { checkbox: false }\n            );\n            singleObject.uses = singleObject.uses * ammount;\n            singleObject.cost = singleObject.cost * ammount;\n            singleObject.weight = singleObject.weight * ammount;\n            return singleObject;\n          }\n        }\n      });\n\n      // SAVE FUNCTION\n      FirebaseService.saveCharacter(campaignURL, charaName, {\n        abilities: charaAbilities,\n        alignment: charaAlignment,\n        armour: '0',\n        backstory: '',\n        bonds: charaBonds,\n        dw_class: charaClass,\n        full_name: charaFullName,\n        funds: startingFunds,\n        hp: maxHP,\n        items: startingGear,\n        level: '1',\n        look: '',\n        moves: startingMoves,\n        owner: currentUser.email,\n        race: charaRace,\n        race_move: charaRaceMove,\n        spells: startingSpells,\n        xp: '0',\n      })\n        .then(() => {\n          console.info('Created Character:', charaName);\n          history.push('/dw-react/' + campaignURL + '/' + charaName);\n        })\n        .catch((error) => {\n          alert('Failed to create character, see console error');\n          console.error('Error creating document:', error);\n        });\n    } else {\n      alert('Cannot save blank character');\n    }\n  }\n\n  function getStepContent(stepIndex) {\n    switch (stepIndex) {\n      case 0:\n        //BASIC DETAILS\n        return (\n          <>\n            <Card className={classes.card}>\n              <CardHeader\n                className={classes.cardHeader}\n                title='Class & Alignment'\n              />\n              <CardContent className={classes.cardContent}>\n                <FormControl variant='outlined' className={classes.formControl}>\n                  <InputLabel>Class</InputLabel>\n                  <Select\n                    label='Class'\n                    value={charaClass}\n                    name='class'\n                    onChange={(event) => {\n                      setCharaAlignment('');\n                      setCharaMoveOption([]);\n                      setCharaBonds([]);\n                      setCharaGearOptions([]);\n                      setCharaRaceMove('');\n                      setCharaClass(event.target.value);\n                    }}>\n                    {dw_classes.map((data, index) => {\n                      return (\n                        <MenuItem value={data} key={index}>\n                          {data}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                  <ReactMarkdown source={classIntro()} />\n                </FormControl>\n                <br />\n                <FormControl variant='outlined' className={classes.formControl}>\n                  <InputLabel>Alignment</InputLabel>\n                  <Select\n                    label='Alignment'\n                    value={charaAlignment}\n                    name='alignment'\n                    onChange={(event) => setCharaAlignment(event.target.value)}>\n                    {charaClass &&\n                      class_details[charaClass].alignments.map(\n                        (data, index) => {\n                          return (\n                            <MenuItem value={data.alignment} key={index}>\n                              {data.alignment}\n                            </MenuItem>\n                          );\n                        }\n                      )}\n                  </Select>\n                  <ReactMarkdown source={alignmentAttribute()} />\n                </FormControl>\n              </CardContent>\n            </Card>\n            {charaClass ? (\n              <>\n                <br />\n                <Card className={classes.card}>\n                  <CardHeader\n                    className={classes.cardHeader}\n                    title='Race & Race Move'\n                  />\n                  <CardContent>\n                    <TextField\n                      autoFocus={true}\n                      margin='dense'\n                      id='race'\n                      label='Race'\n                      value={charaRace}\n                      placeholder='e.g. Dwarf, Elf, Goblin, Halfling, Human'\n                      fullWidth\n                      onChange={(event) => setCharaRace(event.target.value)}\n                    />\n                    <br />\n                    <br />\n                    <FormControl\n                      component='fieldset'\n                      className={classes.formControl}>\n                      <RadioGroup\n                        aria-label='race move'\n                        name='race move'\n                        value={charaRaceMove}\n                        onChange={(event) =>\n                          setCharaRaceMove(event.target.value)\n                        }>\n                        {charaClass &&\n                          class_details[charaClass].race_moves.map(\n                            (data, index) => {\n                              return (\n                                <FormControlLabel\n                                  key={index}\n                                  value={data.move}\n                                  control={<Radio color='primary' />}\n                                  label={\n                                    data.move +\n                                    '\\n(usually used with ' +\n                                    data.race +\n                                    ')'\n                                  }\n                                />\n                              );\n                            }\n                          )}\n                      </RadioGroup>\n                    </FormControl>\n                  </CardContent>\n                </Card>\n                <br />\n                <Card className={classes.card}>\n                  <CardHeader className={classes.cardHeader} title='Name' />\n                  <CardContent>\n                    <TextField\n                      autoFocus={true}\n                      margin='dense'\n                      id='full name'\n                      label='Character Name'\n                      placeholder=\"Your character's full name, titles and all\"\n                      value={charaFullName}\n                      fullWidth\n                      onChange={(event) => setCharaFullName(event.target.value)}\n                    />\n                    <TextField\n                      autoFocus={false}\n                      margin='dense'\n                      id='name'\n                      label='Short Character Name'\n                      placeholder=\"Your character's preferred name\"\n                      value={charaName}\n                      fullWidth\n                      onChange={(event) => setCharaName(event.target.value)}\n                    />\n                    <p>Suggested Names: </p>\n                    <ReactMarkdown source={suggestedNames()} />\n                  </CardContent>\n                </Card>\n              </>\n            ) : null}\n            <br />\n            <Button\n              onClick={handleCancel}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Cancel\n            </Button>\n            <Button\n              onClick={handleReset}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Reset\n            </Button>\n            <Button\n              disabled\n              onClick={handleBack}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Back\n            </Button>\n            {charaRace &&\n            charaAlignment &&\n            charaRaceMove &&\n            charaName &&\n            charaFullName ? (\n              <Button\n                className={classes.button}\n                variant='contained'\n                color='primary'\n                onClick={handleNext}>\n                Next\n              </Button>\n            ) : (\n              <Button\n                disabled\n                className={classes.button}\n                variant='contained'\n                color='primary'>\n                Next\n              </Button>\n            )}\n          </>\n        );\n      case 1:\n        // GEAR\n        return (\n          <>\n            <Card className={classes.card}>\n              <CardHeader className={classes.cardHeader} title='Gear' />\n              <CardContent>\n                <ReactMarkdown\n                  source={class_details[charaClass].starting_gear_details}\n                />\n                {gearOptions()}\n              </CardContent>\n            </Card>\n            <br />\n            <Button\n              onClick={handleCancel}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Cancel\n            </Button>\n            <Button\n              onClick={handleReset}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Reset\n            </Button>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Back\n            </Button>\n            {gearNext()}\n          </>\n        );\n      case 2:\n        //MOVES AND SPELLS\n        return (\n          <>\n            <Card className={classes.card}>\n              <CardHeader className={classes.cardHeader} title='Moves' />\n              <CardContent>\n                You start with the following moves:\n                {class_details[charaClass].moves\n                  .filter((x) => x.level === 'starting')\n                  .map((move, index) => {\n                    return (\n                      <Accordion key={index}>\n                        <AccordionSummary expandIcon={<ExpandMore />}>\n                          {move.name}\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          <div>\n                            <ReactMarkdown source={move.description} />\n                          </div>\n                        </AccordionDetails>\n                      </Accordion>\n                    );\n                  })}\n                {moveOptions()}\n              </CardContent>\n            </Card>\n            <br />\n            {charaClass === 'Cleric' || charaClass === 'Wizard' ? (\n              <>\n                <Card className={classes.card}>\n                  <CardHeader className={classes.cardHeader} title='Spells' />\n                  <CardContent>\n                    You start with the following spells:\n                    {class_details[charaClass].spells\n                      .filter((x) => x.level === 0)\n                      .map((spell, index) => {\n                        let spellOngoing = '';\n                        if (spell.ongoing) {\n                          spellOngoing = ' (Ongoing)';\n                        }\n                        let spellSchool = '';\n                        if (spell.school) {\n                          spellSchool = ' (' + spell.school + ')';\n                        }\n                        return (\n                          <Accordion key={index}>\n                            <AccordionSummary expandIcon={<ExpandMore />}>\n                              {spell.name}\n                              {spellOngoing}\n                              {spellSchool}\n                            </AccordionSummary>\n                            <AccordionDetails>\n                              <div>\n                                <ReactMarkdown source={spell.description} />\n                              </div>\n                            </AccordionDetails>\n                          </Accordion>\n                        );\n                      })}\n                    {charaRaceMove ===\n                    'You are one with stone. When you commune you are also granted a special version of Words of the Unspeaking as a rote which only works on stone.' ? (\n                      <Accordion>\n                        <AccordionSummary expandIcon={<ExpandMore />}>\n                          Words of the Unspeaking (Stone)\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          With a touch you speak to the spirits within stone.\n                          The stone you touch answers three questions you pose,\n                          as best it can.\n                        </AccordionDetails>\n                      </Accordion>\n                    ) : null}\n                    {charaRaceMove ===\n                    'Magic is as natural as breath to you. Detect Magic is a cantrip for you.' ? (\n                      <Accordion>\n                        <AccordionSummary expandIcon={<ExpandMore />}>\n                          Detect Magic (Cantrip) (Ongoing) (Divination)\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          One of your senses is briefly attuned to magic. The GM\n                          will tell you what here is magical.\n                        </AccordionDetails>\n                      </Accordion>\n                    ) : null}\n                    {spellOptions()}\n                  </CardContent>\n                </Card>\n                <br />\n              </>\n            ) : null}\n            <Button\n              onClick={handleCancel}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Cancel\n            </Button>\n            <Button\n              onClick={handleReset}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Reset\n            </Button>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Back\n            </Button>\n            {moveNext()}\n          </>\n        );\n      case 3:\n        //ABILITIES\n        return (\n          <>\n            <Card className={classes.abCard}>\n              <CardHeader\n                className={classes.cardHeader}\n                title='Character Abilities'\n              />\n              <CardContent>\n                <p>Assign ability scores: 16, 15, 13, 12, 9, 8</p>\n                <Grid className={classes.root}>\n                  <Grid item xs={12}>\n                    <Grid container justify='center' spacing={1}>\n                      {charaAbilities.map((ability, index) => {\n                        return (\n                          <Grid item key={index}>\n                            <Card>\n                              <CardContent className={classes.abCardContent}>\n                                <p className={classes.abTitle}>\n                                  {ability.category}\n                                </p>\n                                <TextField\n                                  type='number'\n                                  variant='outlined'\n                                  error={validateScore()}\n                                  size='small'\n                                  margin='none'\n                                  name={ability.category + 'Score'}\n                                  value={ability.score}\n                                  className={classes.abTextField}\n                                  inputProps={{\n                                    style: { textAlign: 'center' },\n                                    min: 1,\n                                    max: 18,\n                                  }}\n                                  onChange={(e) =>\n                                    updateAbilityScore(index, e.target.value)\n                                  }\n                                />\n                                <br />\n                                <TextField\n                                  variant='outlined'\n                                  name={ability.category + 'Modifier'}\n                                  value={abilityModifier(\n                                    ability.score,\n                                    ability.afflicted\n                                  )}\n                                  InputProps={{ readOnly: true }}\n                                  inputProps={{\n                                    style: {\n                                      textAlign: 'center',\n                                      fontWeight: 'bold',\n                                      fontSize: 25,\n                                    },\n                                  }}\n                                  className={classes.abTextField}\n                                />\n                                <br />\n                                <Button\n                                  onClick={() => {\n                                    updateAbilityAfflicted(index);\n                                  }}\n                                  className={classes.abButton}>\n                                  {afflictedValue(\n                                    ability.category,\n                                    ability.afflicted\n                                  )}\n                                </Button>\n                              </CardContent>\n                            </Card>\n                          </Grid>\n                        );\n                      })}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n            <br />\n            <Button\n              onClick={handleCancel}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Cancel\n            </Button>\n            <Button\n              onClick={handleReset}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Reset\n            </Button>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Back\n            </Button>\n            <Button\n              disabled={validateScore()}\n              className={classes.button}\n              variant='contained'\n              onClick={handleNext}\n              color='primary'>\n              Next\n            </Button>\n          </>\n        );\n      case 4:\n        //BONDS\n        return (\n          <>\n            <Card className={classes.card}>\n              <CardHeader className={classes.cardHeader} title='Bonds' />\n              <CardContent>\n                <FormControl\n                  component='fieldset'\n                  className={classes.formControl}>\n                  <FormLabel component='legend'>\n                    Choose some optionally suggested bonds or you can create\n                    your own!\n                  </FormLabel>\n                  <br />\n                  <FormGroup>\n                    {charaClass &&\n                      class_details[charaClass].suggested_bonds.map(\n                        (data, index) => {\n                          return (\n                            <FormControlLabel\n                              key={index}\n                              control={\n                                <Checkbox\n                                  key={index}\n                                  onChange={handleBondChange}\n                                  color='primary'\n                                  name={data}\n                                />\n                              }\n                              label={data}\n                            />\n                          );\n                        }\n                      )}\n                  </FormGroup>\n                </FormControl>\n              </CardContent>\n            </Card>\n            <br />\n            <Button\n              onClick={handleCancel}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Cancel\n            </Button>\n            <Button\n              onClick={handleReset}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Reset\n            </Button>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Back\n            </Button>\n            {campaignURL ? (\n              <Button\n                className={classes.button}\n                variant='contained'\n                color='primary'\n                onClick={handleSave}\n                startIcon={<Save />}>\n                Create Character\n              </Button>\n            ) : (\n              <Button\n                disabled\n                variant='contained'\n                color='primary'\n                onClick={handleSave}\n                startIcon={<Save />}>\n                Create Character\n              </Button>\n            )}\n          </>\n        );\n      default:\n        return 'Unknown stepIndex';\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Breadcrumbs aria-label='breadcrumb'>\n          <Link to='/dw-react'>Home</Link>\n          <Link to={'/dw-react/' + campaignURL}>{campaignURL}</Link>\n          <p>Create Character</p>\n        </Breadcrumbs>\n      </div>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <Grid\n        container\n        spacing={0}\n        direction='column'\n        alignItems='center'\n        justify='center'>\n        <Grid item xs={12}>\n          {getStepContent(activeStep)}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport DarkState from 'components/contexts/DarkState';\nimport { Container, Typography } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport ErrorPage from 'components/ErrorPage';\nimport Homepage from 'components/homepage/Homepage';\nimport AppHeader from 'components/AppHeader';\nimport CharacterSheet from 'components/character/CharacterSheet';\nimport Campaign from 'components/campaign/Campaign';\nimport CreateCharacter from 'components/character/CreateCharacter';\nimport '@fontsource/roboto';\n\nexport default function App() {\n  const [darkState, setDarkState] = useState(false);\n  const palletType = darkState ? 'dark' : 'light';\n  //const mainPrimaryColor = darkState ? orange[500] : lightBlue[500];\n  //const mainSecondaryColor = darkState ? deepOrange[900] : deepPurple[500];\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      //primary: {\n      //  main: mainPrimaryColor,\n      //},\n      //secondary: {\n      //  main: mainSecondaryColor,\n      //},\n    },\n  });\n\n  const ctx = useMemo(() => ({ darkState, setDarkState }), [darkState]); //Memo-ised state for performance\n\n  return (\n    <DarkState.Provider value={ctx}>\n      <ThemeProvider theme={darkTheme}>\n        <Typography component={'span'}>\n          <AppHeader />\n          <Container>\n            <Router>\n              <Switch>\n                <Route exact={true} path='/dw-react' component={Homepage} />\n                <Route\n                  exact={true}\n                  path='/dw-react/:campaignURL'\n                  component={Campaign}\n                />\n                <Route\n                  exact={true}\n                  path='/dw-react/:campaignURL/create-character'\n                  component={CreateCharacter}\n                />\n                <Route\n                  exact={true}\n                  path='/dw-react/:campaignURL/:characterURL'\n                  component={CharacterSheet}\n                />\n                <Route component={ErrorPage} />\n              </Switch>\n            </Router>\n          </Container>\n        </Typography>\n      </ThemeProvider>\n    </DarkState.Provider>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport * as FirebaseService from 'services/firebase';\nimport AuthState from 'components/contexts/AuthState';\nimport { Button } from '@material-ui/core';\n\nfunction Index() {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const ctx = useMemo(() => ({ currentUser }), [currentUser]);\n\n  useEffect(() => {\n    const unsubscribe = FirebaseService.auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n\n  return (\n    <AuthState.Provider value={ctx}>\n      {currentUser ? (\n        <App />\n      ) : (\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={FirebaseService.SignInWithGoogle}>\n          SIGN IN WITH GOOGLE\n        </Button>\n      )}\n    </AuthState.Provider>\n  );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Index />, rootElement);\n"],"sourceRoot":""}