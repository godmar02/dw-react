{"version":3,"sources":["services/firestore.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","firestore","provider","auth","GoogleAuthProvider","App","useState","setUserId","setError","useEffect","signInWithPopup","then","result","user","console","info","uid","email","catch","error","userCredential","ReactDOM","render","document","getElementById"],"mappings":"sMAgBAA,IAASC,cAZc,CACrBC,OAAQC,0CACRC,WAAYD,sCACZE,UAAWF,sBACXG,YAAaH,6EACbI,cAAeJ,kCACfK,kBAAmBL,eACnBM,MAAON,4CACPO,cAAeP,iBAONH,IAASW,YAApB,IAGMC,EAAW,IAAIZ,IAASa,KAAKC,mB,OCApBC,MAnBf,WAAgB,IAAD,EAEWC,qBAFX,gCAGeA,sBAHf,mBAGEC,GAHF,aAIaD,qBAJb,mBAICE,GAJD,WAcb,OAPAC,qBAAU,WDgBHnB,IAASa,OACbO,gBAAgBR,GAChBS,MAAK,SAACC,GAOL,IAAIC,EAAOD,EAAOC,KAOlBC,QAAQC,KAAK,0BAA2BF,EAAKG,KAC7CF,QAAQC,KAAK,4BAA6BF,EAAKI,UAI9CC,OAAM,SAACC,OCpC4BR,MAAK,SAAAS,GACzCb,EAAUa,EAAeP,KAAKG,QAE/BE,OAAM,kBAAMV,EAAS,+BAItB,qCCbJa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1af47a5c.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n};\r\n\r\n// Initialise Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Set up firestore db const\r\nconst db = firebase.firestore();\r\n\r\n// Set up firebase auth with google\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n//Authenticate with Firebase using the Google provider object.\r\nexport const authenticateGoogle = () => {\r\n  return firebase.auth()\r\n    .signInWithPopup(provider)\r\n    .then((result) => {\r\n      /** @type {firebase.auth.OAuthCredential} */\r\n      //var credential = result.credential;\r\n\r\n      // This gives you a Google Access Token. You can use it to access the Google API.\r\n      //var token = credential.accessToken;\r\n      // The signed-in user info.\r\n      var user = result.user;\r\n\r\n      // Set username and profile picture\r\n      //$(\"#userPicture\").attr(\"src\", user.photoURL);\r\n      //$(\"#userName\").text(user.displayName);\r\n      //$(\"#userEmail\").text(user.email);\r\n\r\n      console.info(\"Authenticated user UID:\", user.uid);\r\n      console.info(\"Authenticated user email:\", user.email);\r\n\r\n      //userEmail = user.email;\r\n\r\n    }).catch((error) => {\r\n      // Handle Errors here.\r\n      //var errorCode = error.code;\r\n      //var errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      //var email = error.email;\r\n      // The firebase.auth.AuthCredential type that was used.\r\n      //var credential = error.credential;\r\n    });\r\n\r\n}\r\n\r\nexport const createGroceryList = (userName, userId) => {\r\n  return db.collection('groceryLists')\r\n    .add({\r\n      created: firebase.firestore.FieldValue.serverTimestamp(),\r\n      createdBy: userId,\r\n      users: [{\r\n        userId: userId,\r\n        name: userName\r\n      }]\r\n    });\r\n};\r\n\r\nexport const getGroceryList = groceryListId => {\r\n  return db.collection('groceryLists')\r\n    .doc(groceryListId)\r\n    .get();\r\n};\r\n\r\nexport const getGroceryListItems = groceryListId => {\r\n  return db.collection('groceryLists')\r\n    .doc(groceryListId)\r\n    .collection('items')\r\n    .get();\r\n}\r\n\r\nexport const streamGroceryListItems = (groceryListId, observer) => {\r\n  return db.collection('groceryLists')\r\n    .doc(groceryListId)\r\n    .collection('items')\r\n    .orderBy('created')\r\n    .onSnapshot(observer);\r\n};\r\n\r\nexport const addUserToGroceryList = (userName, groceryListId, userId) => {\r\n  return db.collection('groceryLists')\r\n    .doc(groceryListId)\r\n    .update({\r\n      users: firebase.firestore.FieldValue.arrayUnion({\r\n        userId: userId,\r\n        name: userName\r\n      })\r\n    });\r\n};\r\n\r\nexport const addGroceryListItem = (item, groceryListId, userId) => {\r\n  return getGroceryListItems(groceryListId)\r\n    .then(querySnapshot => querySnapshot.docs)\r\n    .then(groceryListItems => groceryListItems.find(groceryListItem => groceryListItem.data().name.toLowerCase() === item.toLowerCase()))\r\n    .then(matchingItem => {\r\n      if (!matchingItem) {\r\n        return db.collection('groceryLists')\r\n          .doc(groceryListId)\r\n          .collection('items')\r\n          .add({\r\n            name: item,\r\n            created: firebase.firestore.FieldValue.serverTimestamp(),\r\n            createdBy: userId\r\n          });\r\n      }\r\n      throw new Error('duplicate-item-error');\r\n    });\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as FirestoreService from './services/firestore';\r\n\r\nfunction App() {\r\n\r\n  const [user, setUser] = useState();\r\n  const [userId, setUserId] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  // Use an effect to authenticate user\r\n  useEffect(() => {\r\n    FirestoreService.authenticateGoogle().then(userCredential => {\r\n      setUserId(userCredential.user.uid);\r\n    })\r\n    .catch(() => setError('anonymous-auth-failed'));\r\n  });\r\n\r\n  return (\r\n    <div> </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}