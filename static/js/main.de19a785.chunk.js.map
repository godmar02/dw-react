{"version":3,"sources":["components/ErrorPage.js","services/firebase.js","components/homepage/HomepageHeader.js","components/contexts/HomepageState.js","components/contexts/AuthState.js","components/homepage/HomepageDetails.js","components/homepage/Homepage.js","components/NavSidebar.js","components/contexts/ProfileState.js","components/profile/ProfilePicture.js","components/profile/ProfileDetails.js","components/profile/UserProfile.js","components/AppHeader.js","components/contexts/CharacterState.js","components/character/CharacterSheetHeader.js","components/character/CharacterBasicDetails.js","components/character/CharacterType.js","components/character/CharacterDamage.js","components/character/CharacterArmour.js","components/character/CharacterFunds.js","components/character/CharacterHP.js","components/character/CharacterLevel.js","components/character/CharacterXP.js","components/character/CharacterBasicStats.js","components/character/CharacterAbilities.js","components/character/CharacterBonds.js","components/character/CharacterGear.js","components/character/CharacterClassFeatures.js","components/character/CharacterStandardMoves.js","components/character/CharacterAdvancedMoves.js","components/character/CharacterClassMoves.js","components/character/CharacterMoves.js","components/character/CharacterSheet.js","components/contexts/CampaignState.js","components/campaign/CampaignHeader.js","components/campaign/CampaignDetails.js","components/campaign/Campaign.js","components/App.js","index.js"],"names":["ErrorPage","firebase","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","provider","GoogleAuthProvider","SignInWithGoogle","signInWithPopup","setCustomParameters","prompt","HomepageHeader","Breadcrumbs","aria-label","HomepageState","React","createContext","AuthState","useStyles","makeStyles","table","minWidth","HomepageDetails","useContext","currentUser","useState","open","setOpen","campaignName","setCampaignName","classes","campaigns","handleCancel","saveCampaign","campaign","owner","email","collection","doc","set","then","console","info","catch","error","alert","deleteCampaign","delete","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","IconButton","Add","onClick","TableBody","map","index","to","id","Delete","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","onChange","event","target","value","DialogActions","Button","color","Homepage","setCampaigns","useEffect","observer","next","querySnapshot","updatedCampaignList","docs","docSnapshot","data","onSnapshot","log","Provider","NavSidebar","ProfileState","ProfilePicture","show","setShow","Avatar","src","photoURL","alt","ProfileDetails","style","displayName","variant","FirebaseService","signOut","UserProfile","theme","root","flexGrow","menuButton","marginRight","spacing","title","AppHeader","AppBar","position","Toolbar","edge","Menu","Typography","CharacterState","CharacterSheetHeader","useParams","campaignURL","characterURL","CharacterBasicDetails","character","setCharacter","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","htmlFor","multiline","placeholder","fullName","name","backstory","look","formControl","selectEmpty","marginTop","CharacterType","dwc","dwClass","alig","alignment","race","FormControl","Select","tabIndex","MenuItem","disabled","hidden","dwClasses","key","races","InputProps","readOnly","classDetails","raceAttributes","alignments","alignmentAttributes","CharacterDamage","damage","CharacterArmour","type","min","armour","CharacterFunds","funds","CharacterHP","hp","abilities","baseHp","parseInt","find","x","category","score","CharacterLevel","level","CharacterXP","xp","CharacterBasicStats","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","CharacterAbilities","updateAbilityScore","e","newAbilities","updateAbilityAffliction","affliction","abilityModifier","abilityScore","abilityAffliction","baseModifier","indexOf","modifier","max","ab","abilityAfflictions","CharacterBonds","updateBond","newBonds","bonds","bond","align","addBondsRow","length","splice","deleteBondRow","CharacterGear","updateItem","newItems","items","item","updateItemWeight","weight","colSpan","addItemRow","deleteItemRow","reduce","totalLoad","str","baseLoad","maxLoad","CharacterClassFeatures","updateFeatureCheckbox","newFeatures","classFeatures","checkbox","checked","updateFeature","feature","addFeatureRow","Checkbox","deleteFeatureRow","CharacterStandardMoves","standardMoves","dangerouslySetInnerHTML","__html","description","CharacterAdvancedMoves","advancedMoves","CharacterClassMoves","classMoves","startingMoves","TabPanel","props","children","other","role","Box","p","a11yProps","backgroundColor","palette","background","paper","CharacterMoves","setValue","Tabs","newValue","Tab","CharacterSheet","isSaving","setIsSaving","documentSnapshot","debouncedSave","useCallback","callback","delay","timer","args","clearTimeout","setTimeout","debounce","DEBOUNCE_SAVE_DELAY_MS","Object","keys","CampaignState","CampaignHeader","CampaignDetails","charaName","setCharaName","saveCharacter","deleteCharacter","characterData","CampaignSheet","setCampaign","updatedCharacterList","App","Container","exact","path","Campaign","Index","setCurrentUser","onAuthStateChanged","user","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.de19a785.chunk.js","sourcesContent":["import React from 'react';\n\nfunction ErrorPage() {\n  return (\n      <h1>Oops! Page not found!</h1>\n    );\n}\n\nexport default ErrorPage;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Initialise Firebase and setting up firestore and auth for use later\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\n\n// Authenticate with Firebase-auth using the Google provider object\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport function SignInWithGoogle() {\n  auth.signInWithPopup(provider)\n};\n\n// Firestore operations\n\n// Create new blank campaign\nexport function createCampaign(campaign,owner) {\n  return db.collection(\"campaigns\")\n    .doc(campaign).set({owner: owner})\n};\n\n// Create new blank character\nexport function createCharacter(campaign,charaName,owner) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .doc(charaName)\n    .set({\n      abilities: [\n        {category: \"STR\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"DEX\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"CON\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"INT\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"WIS\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"CHA\", score: \"1\", affliction: \"Unafflicted\"}\n      ],\n      alignment: \"\",\n      armour: \"\",\n      backstory: \"\",\n      bonds: [\n        {bond: \"\"},\n      ],\n      classFeatures: [\n        {feature: \"\", checkbox: false}\n      ],\n      dwClass: \"\",\n      fullName: \"\",\n      funds: \"\",\n      hp: \"\",\n      items: [\n        {item: \"\", weight: \"\"},\n      ],\n      level: \"\",\n      look: \"\",\n      owner: owner,\n      race: \"\",\n      xp: \"\"\n    });\n};\n// Save Character\nexport function saveCharacter(campaign, character, data) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .doc(character)\n    .set(data);\n};\n\n// Stream Campaign Data (all Campaigns)\nexport function streamCampaigns(observer) {\n  return db.collection(\"campaigns\")\n    .onSnapshot(observer);\n};\n// Stream Character Data (all Characters)\nexport function streamCharacters(campaign, observer) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .onSnapshot(observer);\n};\n// Stream Character Data (selected Characters)\nexport function streamCharacter(campaign, character, observer) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .doc(character)\n    .onSnapshot(observer);\n};\n// Delete Campaign\nexport function deleteCampaign(campaign) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .delete()\n};\n// Delete Characters\nexport function deleteCharacter(campaign, character) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .doc(character)\n    .delete()\n};\n\n// Default Export\nexport default firebase;\n","import React from 'react';\nimport {Breadcrumbs} from '@material-ui/core';\n\nfunction HomepageHeader() {\n\n  return (\n  <div>\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <p>Home</p>\n    </Breadcrumbs>\n    <h1>Campaigns Homepage</h1>\n  </div>);\n}\n\nexport default HomepageHeader;\n","import React from 'react';\n\nconst HomepageState = React.createContext([{}, () => {}]);\n\nexport default HomepageState;\n","import React from 'react';\n\nconst AuthState = React.createContext(null);\n\nexport default AuthState;\n","import React, {useContext, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport * as FirebaseService from 'services/firebase';\nimport HomepageState from 'components/contexts/HomepageState';\nimport AuthState from 'components/contexts/AuthState';\nimport {Add, Delete} from '@material-ui/icons';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField\n} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nfunction HomepageDetails() {\n\n  const [currentUser] = useContext(AuthState);\n  const [open, setOpen] = useState(false);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const classes = useStyles();\n  const [campaigns] = useContext(HomepageState);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    setOpen(false);\n    saveCampaign();\n  }\n\n  // Create New Campaign\n  const saveCampaign = () => {\n    if (campaignName) { //don't save unless details present\n      FirebaseService.createCampaign(campaignName, currentUser.email).then(() => {\n        console.info('Created Campaign:', campaignName);\n      }).catch((error) => {\n        alert(\"Failed to create campaign, see console error\");\n        console.error(\"Error creating document:\", error);\n      });\n    } else {\n      alert('Cannot save blank campaign');\n    }\n  }\n\n  // Delete Campaign\n  const deleteCampaign = (campaignName) => {\n    if (campaignName) { //don't save unless details present\n      FirebaseService.deleteCampaign(campaignName).then(() => {\n        console.info('Deleted Campaign:', campaignName);\n      }).catch((error) => {\n        alert(\"Failed to delete campaign, see console error\");\n        console.error(\"Error deleting document:\", error);\n      });\n    } else {\n      alert('Cannot delete blank campaign');\n    }\n  }\n\n  return (<> < TableContainer component = {\n    Paper\n  } > <Table className={classes.table} aria-label=\"simple table\">\n    <TableHead>\n      <TableRow>\n        <TableCell>Campaign</TableCell>\n        <TableCell>Owner</TableCell>\n        <TableCell>\n          <IconButton aria-label=\"add\">\n            <Add onClick={handleClickOpen}/>\n          </IconButton>\n        </TableCell>\n      </TableRow>\n    </TableHead>\n    <TableBody>\n      {\n        campaigns.campaigns && campaigns.campaigns.map((campaign, index) => {\n          return (<TableRow key={index}>\n            <TableCell>\n              <Link to={\"/dw-react/\" + campaign.id}>{campaign.id}</Link>\n            </TableCell>\n            <TableCell>\n              {campaign.owner}\n            </TableCell>\n            <TableCell>\n              <IconButton aria-label=\"delete\"><Delete onClick={() => deleteCampaign(campaign.id)}/>\n              </IconButton>\n            </TableCell>\n          </TableRow>)\n        })\n      }\n    </TableBody>\n  </Table> < /TableContainer>\n<Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Create new campaign</DialogTitle > <DialogContent>\n    <DialogContentText>\n      To create a campaign, please enter the new campaign name here. You will not be able to change this once saved.\n    </DialogContentText>\n    <TextField autoFocus=\"autoFocus\" margin=\"dense\" id=\"name\" label=\"Campaign Name\" fullWidth=\"fullWidth\" onChange={event => setCampaignName(event.target.value)}/>\n  </DialogContent>\n  <DialogActions>\n    <Button onClick={handleCancel} color=\"primary\">\n      Cancel\n    </Button>\n    <Button onClick={handleSave} color=\"primary\">\n      Create Campaign\n    </Button>\n  </DialogActions> < /Dialog>\n</ >);\n}\n\nexport default HomepageDetails;\n","import React, {useState, useEffect} from 'react';\nimport * as FirebaseService from 'services/firebase';\nimport HomepageHeader from 'components/homepage/HomepageHeader';\nimport HomepageDetails from 'components/homepage/HomepageDetails';\nimport HomepageState from 'components/contexts/HomepageState';\n\nfunction Homepage() {\n\n  // Definitions for state\n  const [campaigns, setCampaigns] = useState({});\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    const unsubscribe = FirebaseService.streamCampaigns({\n      next: querySnapshot => {\n        const updatedCampaignList = querySnapshot.docs.map((docSnapshot) => {\n          return ({id: docSnapshot.id, owner: docSnapshot.data().owner})\n        });\n        setCampaigns(campaign => ({campaigns: updatedCampaignList}));\n      },\n      error: (error) => {\n        alert(\"Failed to load data correctly, see console error\");\n        console.error(\"Error loading data:\", error);\n      }\n    });\n    return unsubscribe;\n  }, [setCampaigns]);\n\n  console.log(\"Campaigns State:\", campaigns)\n\n  return (\n  <HomepageState.Provider value={[campaigns, setCampaigns]}>\n    <HomepageHeader/>\n    <br/>\n    <HomepageDetails/>\n  </HomepageState.Provider>);\n}\n\nexport default Homepage;\n","import React from 'react';\n\nfunction NavSidebar() {\n  return (\n    <div>\n    </div>);\n}\n\nexport default NavSidebar\n","import React from 'react';\n\nconst ProfileState = React.createContext();\n\nexport default ProfileState;\n","import React, {useContext} from 'react';\nimport AuthState from 'components/contexts/AuthState';\nimport ProfileState from 'components/contexts/ProfileState';\nimport Avatar from '@material-ui/core/Avatar';\n\nfunction ProfilePicture() {\n\n  const [currentUser] = useContext(AuthState);\n  const [show,setShow] = useContext(ProfileState);\n  const toggleSetShow = () => setShow(!show);\n\n  return (<Avatar\n    src={currentUser.photoURL}\n    alt=\"Google Profile\"\n    onClick={() => toggleSetShow()}\n    />);\n}\n\nexport default ProfilePicture;\n","import React, {useContext} from 'react';\nimport AuthState from 'components/contexts/AuthState';\nimport * as FirebaseService from 'services/firebase';\nimport ProfileState from 'components/contexts/ProfileState';\nimport {Button} from '@material-ui/core';\n\n\nfunction ProfileDetails() {\n\n  const [currentUser] = useContext(AuthState);\n  const [show,setShow] = useContext(ProfileState);\n  const toggleSetShow = () => setShow(!show);\n\n    return (\n      <div style={{\"border\": \"0\",\n      \"-webkit-border-radius\": \"50%\",\n      \"border-radius\": \"5px\",\n      \"display\": \"inline-block\",\n      \"margin\": \"0\",\n      \"position\": \"absolute\",\n      \"top\": \"50px\",\n      \"right\": \"20px\",\n      \"color\": \"#bdc1c6\",\n      \"background-color\": \"rgba(60, 64, 67, 0.9)\",\n      \"text-align\": \"left\",\n      \"font\": \"500 12px 'Roboto', arial, sans-serif\",\n      \"letter-spacing\": \"0.8px\",\n      \"line-height\": \"16px\",\n      \"font-weight\": \"bold\",\n      \"padding\": \"8px 8px\"}}>\n        <div style={{\"color\": \"white\"}}>Google Account</div>\n        <div>{currentUser.displayName}</div>\n        <div>{currentUser.email}</div>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => FirebaseService.auth.signOut()}>LOG OUT</Button>\n      </div>\n    );\n}\n\nexport default ProfileDetails;\n","import React, {useContext,useState} from 'react';\nimport ProfilePicture from 'components/profile/ProfilePicture';\nimport ProfileDetails from 'components/profile/ProfileDetails';\nimport ProfileState from 'components/contexts/ProfileState';\n\nfunction UserProfile() {\n\n  const [show, setShow] = useState(false);\n\n  return (\n<ProfileState.Provider value={[show, setShow]}>\n    <div>\n    <ProfilePicture/>\n    {\n      show\n        ? <ProfileDetails/>\n        : null\n    }\n  </div>\n</ProfileState.Provider>);\n}\n\nexport default UserProfile;\n","import React from 'react';\nimport {AppBar,IconButton,Toolbar,Typography} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Menu} from '@material-ui/icons';\nimport UserProfile from 'components/profile/UserProfile';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction AppHeader() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Dungeon World Character Sheet (v0.10.0 by Godmar02)\n          </Typography>\n          <UserProfile/>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default AppHeader;\n","import React from 'react';\n\nconst CharacterState = React.createContext([{}, () => {}]);\n\nexport default CharacterState;\n","import React, {useContext} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useParams} from 'react-router';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {Breadcrumbs} from '@material-ui/core';\n\nfunction CharacterSheetHeader() {\n\n  // Definitions for state\n  const [character] = useContext(CharacterState);\n\n  // retrieve URL parameters for usage\n  const {campaignURL, characterURL} = useParams();\n\n  return (\n  <>\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <Link to=\"/dw-react\">Home</Link>\n      <Link to={\"/dw-react/\" + campaignURL}>{campaignURL}</Link>\n      <p>\n        {characterURL}</p>\n    </Breadcrumbs>\n      <h1>Character: {characterURL}</h1>\n    </>);\n}\n\nexport default CharacterSheetHeader;\n","import React, {useContext} from 'react';\nimport {Accordion,AccordionSummary,AccordionDetails,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TextField} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CharacterState from 'components/contexts/CharacterState';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction CharacterBasicDetails() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  const classes = useStyles();\n\n  return (\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMore />}>Basic Details\n      </AccordionSummary>\n      <AccordionDetails>\n        <TableContainer component={Paper}>\n    <Table className={classes.table} aria-label=\"simple table\">\n    <TableBody>\n      <TableRow>\n        <th style={{\"width\" : \"25%\"}}>\n          <label htmlFor=\"fullName\">FULL NAME</label>\n        </th>\n        <TableCell>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            placeholder=\"Add your characters full name here\"\n            value={character.fullName}\n            name=\"fullName\"\n            onChange={event => setCharacter(character => ({...character,fullName: event.target.value}))}/>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <th style={{\"width\" : \"25%\"}}>\n          <label htmlFor=\"backstory\">BACKSTORY</label>\n        </th>\n        <TableCell>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            placeholder=\"Describe your character's backstory and anything else about your characters identity here\"\n            value={character.backstory}\n            name=\"backstory\"\n            onChange={event => setCharacter(character => ({...character,backstory: event.target.value}))}/>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <th style={{\"width\" : \"25%\"}}>\n          <label htmlFor=\"look\">LOOK</label>\n        </th>\n        <TableCell>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            placeholder=\"Describe your character's appearance here\"\n            name=\"look\"\n            value={character.look}\n            onChange={event => setCharacter(character => ({...character,look: event.target.value}))}/>\n        </TableCell>\n      </TableRow>\n    </TableBody>\n  </Table></TableContainer></AccordionDetails>\n</Accordion>\n          );\n}\n\nexport default CharacterBasicDetails;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {races} from 'data/raceList';\nimport {dwClasses} from 'data/classList';\nimport {alignments} from 'data/classAlignments';\nimport {classDetails} from 'data/classDetails';\nimport {Accordion,AccordionSummary,AccordionDetails,FormControl,MenuItem,Paper,Select,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TextField} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nfunction CharacterType() {\n\n  const classes = useStyles();\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n  const dwc = character.dwClass;\n  const alig = character.alignment;\n  const race = character.race;\n\n  const raceAttributes = () => {\n    if (character.dwClass && character.race) {\n      return (classDetails.[dwc].raceAttributes.[race]);\n    } else {\n      return ('');\n    }\n  };\n\n  const alignmentAttributes = () => {\n    if (character.dwClass && character.alignment) {\n      return (classDetails.[dwc].alignmentAttributes.[alig]);\n    } else {\n      return ('');\n    }\n  };\n\n  return (\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMore />}>Character Type\n      </AccordionSummary>\n      <AccordionDetails>\n        <TableContainer component={Paper}>\n  <Table className={classes.table} aria-label=\"simple table\">\n    <TableBody>\n      <TableRow>\n        <th>CLASS\n        </th>\n        <TableCell style={{\"width\" : \"25%\"}}>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Select\n            tabIndex={-1}\n            value={character.dwClass || \"null\"}\n            onChange={event => {\n              setCharacter(character => ({...character,dwClass: event.target.value}));\n              setCharacter(character => ({...character,alignment: \"null\"}))}}>\n            <MenuItem disabled value=\"null\" hidden />\n            {\n              dwClasses.map((data, key) => {\n                return (\n                <MenuItem value={data} key={key}>\n                  {data}\n                </MenuItem>);\n              })\n            }\n          </Select>\n          </FormControl>\n        </TableCell>\n        <TableCell style={{\"width\" : \"50%\"}}/>\n      </TableRow>\n      <TableRow>\n        <th>\n          <label htmlFor=\"race\">RACE</label>\n        </th>\n        <TableCell>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Select\n            tabIndex={-1}\n            value={character.race || \"null\"}\n            name=\"race\"\n            onChange={event => setCharacter(character => ({...character,race: event.target.value}))}>\n            <MenuItem disabled value=\"null\" hidden />\n            {\n              races.map((data, key) => {\n                return (\n                <MenuItem value={data} key={key}>\n                  {data}\n                </MenuItem>);\n              })\n            }\n          </Select>\n          </FormControl>\n        </TableCell>\n        <TableCell>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n\n            name=\"raceAttributes\"\n            InputProps={{\n              readOnly: true,\n            }}\n            value={raceAttributes()}/>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <th>\n          <label htmlFor=\"alignment\">ALIGNMENT</label>\n        </th>\n        <TableCell>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Select\n            tabIndex={-1}\n            value={character.alignment || \"null\"}\n            name=\"alignment\"\n            onChange={event => setCharacter(character => ({...character,alignment: event.target.value}))}>\n            <MenuItem disabled value=\"null\" hidden />\n            {\n              character.dwClass && dwc && alignments.[dwc].map((data, key) => {\n              return (\n              <MenuItem value={data} key={key}>\n                {data}\n              </MenuItem>);})\n            }\n          </Select>\n        </FormControl>\n        </TableCell>\n        <TableCell>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n\n            name=\"alignmentAttribute\"\n            InputProps={{\n              readOnly: true,\n            }}\n            value={alignmentAttributes()}/>\n        </TableCell>\n      </TableRow>\n    </TableBody>\n  </Table></TableContainer>\n</AccordionDetails>\n</Accordion>\n          );\n}\n\nexport default CharacterType;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {classDetails} from 'data/classDetails';\nimport {TextField} from '@material-ui/core';\n\nfunction CharacterDamage() {\n\n  // State Variables\n  const [character] = useContext(CharacterState);\n  const dwc = character.dwClass;\n\n  const damage = () => {\n    if (character.dwClass) {\n      return (classDetails.[dwc].damage);\n    } else {\n      return ('');\n    }\n  };\n\n  return (\n            <TextField\n              variant=\"outlined\"\n              name=\"damage\"\n              label=\"Damage\"\n              InputProps={{\n                readOnly: true,\n              }}\n              value={damage()}/>\n  );\n}\nexport default CharacterDamage;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {TextField} from '@material-ui/core';\n\nfunction CharacterArmour() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  return (\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              label=\"Armour\"\n              min={0}\n              name=\"armour\" value={character.armour || ''} onChange={event => setCharacter(character => ({...character,armour: event.target.value}))}/>\n  );\n}\n\nexport default CharacterArmour;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {TextField} from '@material-ui/core';\n\nfunction CharacterFunds() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  return (\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              name=\"funds\"\n              label=\"Funds\"\n              min={0}\n              value={character.funds || ''}\n              onChange={event => setCharacter(character => ({...character,funds: event.target.value}))}/>\n  );\n}\n\nexport default CharacterFunds;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {classDetails} from 'data/classDetails';\nimport {TextField} from '@material-ui/core';\n\nfunction CharacterHP() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  const dwc = character.dwClass;\n  const maxHp = () => {\n    if (character.dwClass && character.abilities) {\n      return (\"/ \" + (classDetails.[dwc].baseHp + parseInt(character.abilities.find(x => x.category === 'CON').score ,10)));\n    } else {\n      return ('');\n    }\n  };\n\n  return (<>\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              label=\"HP\"\n              min={0}\n\n              name=\"hp\"\n              value={character.hp || ''}\n              onChange={event => setCharacter(character => ({...character,hp: event.target.value}))}/>\n            <TextField\n              variant=\"outlined\"\n\n              label=\"Max HP\"\n              name=\"maxHp\"\n              InputProps={{\n                readOnly: true,\n              }}\n              value={maxHp()} />\n            </>\n  );\n}\n\nexport default CharacterHP;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {TextField} from '@material-ui/core';\n\nfunction CharacterLevel() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  return (\n\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              label=\"Level\"\n              min={1}\n\n              name=\"level\"\n              value={character.level || ''}\n              onChange={event => setCharacter(character => ({...character,level: event.target.value}))}/>\n          );\n}\n\nexport default CharacterLevel;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {TextField} from '@material-ui/core';\n\nfunction CharacterXP() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  // Total Load\n  const calcMaxXp = () => {\n    if (character.level) {\n      return (\"/ \" + (parseInt(character.level,10) + 7));\n    } else {\n      return ('');\n    }\n  };\n\n  return (<>\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              label=\"XP\"\n              min={0}\n\n              name=\"xp\"\n              value={character.xp || ''}\n              onChange={event => setCharacter(character => ({...character,xp: event.target.value}))}/>\n            <TextField\n              variant=\"outlined\"\n\n              label=\"Max XP\"\n              name=\"maxXp\"\n              InputProps={{\n                readOnly: true,\n              }}\n              value={calcMaxXp()} />\n            </>);\n}\n\nexport default CharacterXP;\n","import React from 'react';\nimport {Accordion,AccordionSummary,AccordionDetails} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport CharacterDamage from 'components/character/CharacterDamage'\nimport CharacterArmour from 'components/character/CharacterArmour'\nimport CharacterFunds from 'components/character/CharacterFunds'\nimport CharacterHP from 'components/character/CharacterHP'\nimport CharacterLevel from 'components/character/CharacterLevel'\nimport CharacterXP from 'components/character/CharacterXP'\n\nfunction CharacterBasicStats() {\n\n  return (\n  <div>\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMore />}>Basic Stats\n      </AccordionSummary>\n      <AccordionDetails>\n    <CharacterLevel/>\n    <CharacterXP/>\n    <CharacterDamage/>\n    <CharacterArmour/>\n    <CharacterFunds/>\n    <CharacterHP/>\n    </AccordionDetails>\n  </Accordion>\n  </div>);\n}\n\nexport default CharacterBasicStats;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {abilityAfflictions} from 'data/abilityAfflictions';\nimport {Accordion,AccordionSummary,AccordionDetails,FormControl,MenuItem,Select,TextField} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction CharacterAbilities() {\n\n  const classes = useStyles();\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  const updateAbilityScore = index => e => {\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {...character.abilities[index], score: e.target.value}; // replace value\n    setCharacter(character => ({...character, abilities: newAbilities})); // set array back\n  }\n\n  const updateAbilityAffliction = index => e => {\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {...character.abilities[index], affliction: e.target.value}; // replace value\n    setCharacter(character => ({...character, abilities: newAbilities})); // set array back\n  }\n\n  const abilityModifier = (abilityScore, abilityAffliction) => {\n\n    if (abilityScore && abilityAffliction) {\n    let baseModifier;\n    let afflicted;\n\n    abilityScore = parseInt(abilityScore,10);\n\n    if ([1, 2, 3].indexOf(abilityScore) > -1) {\n      baseModifier = -3;\n    } else if ([4, 5].indexOf(abilityScore) > -1) {\n      baseModifier = -2;\n    } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n      baseModifier = -1;\n    } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n      baseModifier = 0;\n    } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n      baseModifier = 1;\n    } else if ([16, 17].indexOf(abilityScore) > -1) {\n      baseModifier = 2;\n    } else if (abilityScore === 18) {\n      baseModifier = 3;\n    }\n\n    /*-1 if afflicted*/\n    if (abilityAffliction === \"Unafflicted\") {\n      afflicted = 0;\n    } else {\n      afflicted = 1;\n    }\n\n    let modifier = (baseModifier - afflicted);\n\n    if (modifier > 0) {\n      return(\"[+\" + modifier+ \"]\");\n    } else {\n      return (\"[\" + modifier + \"]\");\n    }\n  } else {\n    return ('')\n  }\n  }\n\n  return (\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMore />}>Abilities\n      </AccordionSummary>\n      <AccordionDetails>\n     <table style={{\"width\":\"100%\"}}>\n       <thead>\n         <tr>\n           {\n            character.abilities && character.abilities.map((abilities, index) => {\n            return (\n              <th key={index}>\n                <label\n                  htmlFor={abilities.category}\n                  value={abilities.category}\n                  name={abilities.category}>\n                  {abilities.category}\n                </label>\n              </th>)\n           })\n         }\n         </tr>\n       </thead>\n       <tbody>\n         <tr>\n           {\n            character.abilities && character.abilities.map((abilities, index) => {\n            return (\n              <td key={index}>\n                <TextField\n                  type=\"number\"\n                  variant=\"outlined\"\n                  min={1} max={18}\n                  name={abilities.category + \"Score\"}\n                  value={abilities.score}\n                  onChange={updateAbilityScore(index)} />\n            </td>)\n           })\n         }\n         </tr>\n         <tr>\n           {\n            character.abilities && character.abilities.map((abilities, index) => {\n            return (\n              <td key={index}>\n                <TextField\n                  variant=\"outlined\"\n                  name={abilities.category + \"Modifier\"}\n                  value={abilityModifier(abilities.score, abilities.affliction)}\n                  InputProps={{\n                    readOnly: true,\n                  }} />\n            </td>)\n           })\n         }\n         </tr>\n         <tr>\n           {\n            character.abilities && character.abilities.map((abilities,index) => {\n            const ab = abilities.category;\n            return (\n              <td key={index}>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classes.formControl}>\n                <Select\n                  tabIndex={-1}\n                  value={abilities.affliction || \"null\"}\n                  name={abilities.category + \"Affliction\"}\n                  onChange={updateAbilityAffliction(index)}>\n                  <MenuItem disabled value=\"null\" hidden />\n                    {\n                      abilityAfflictions.[ab].map((data, key) => {\n                        return (\n                        <MenuItem value={data} key={key}>\n                          {data}\n                        </MenuItem>);\n                      })\n                    }\n                </Select>\n              </FormControl>\n              </td>)\n           })\n         }\n         </tr>\n       </tbody>\n     </table>\n   </AccordionDetails>\n   </Accordion>\n    );\n}\n\nexport default CharacterAbilities;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {Add,Delete} from '@material-ui/icons';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {ExpandMore} from '@material-ui/icons';\nimport {Accordion,AccordionSummary,AccordionDetails,IconButton,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TextField} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nfunction CharacterBonds() {\n\n  const classes = useStyles();\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  // State manipulation\n  const updateBond = index => e => {\n    let newBonds = [...character.bonds]; // copying the old array\n    newBonds[index] = {...character.bonds[index], bond: e.target.value}; // replace value\n    setCharacter(character => ({...character, bonds: newBonds})); // set array back\n  }\n\n  // Delete rows in the table\n  const deleteBondRow = index => {\n    const newBonds = [...character.bonds]; // copying the old array\n    if (character.bonds.length !== 1) { //don't delete last row\n      newBonds.splice(index, 1); // remove item from array\n      setCharacter(character => ({...character, bonds: newBonds})); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  }\n\n  // Add rows in the table\n  const addBondsRow = () => {\n    const newBonds = [...character.bonds, {bond: \"\"}]; // copying the old array and adding blank item\n    setCharacter(character => ({...character, bonds: newBonds})); // set array back\n  }\n\n  return (<Accordion>\n    <AccordionSummary\n      expandIcon={<ExpandMore />}>Bonds\n    </AccordionSummary>\n    <AccordionDetails>\n      <TableContainer component={Paper}>\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>\n          <TableCell align=\"center\">Bond</TableCell>\n          <TableCell>\n            <IconButton aria-label=\"add\">\n            <Add onClick={() => addBondsRow()}/>\n            </IconButton>\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {\n         character.bonds && character.bonds.map((bonds,index) => {\n         return (\n           <TableRow key={index}>\n               <TableCell>\n                 <TextField\n                   multiline\n                   fullWidth\n                   variant=\"outlined\"\n                   aria-label=\"empty textarea\"\n                   placeholder=\"Add 2-3 bonds here\"\n                   value={bonds.bond}\n                   name={\"bond\" + index}\n                   onChange={updateBond(index)}\n                   />\n               </TableCell>\n               <TableCell>\n                 <IconButton aria-label=\"delete\">\n                   <Delete\n                   onClick={() => deleteBondRow(index)}/>\n                 </IconButton>\n               </TableCell>\n           </TableRow>)\n        })\n      }\n      </TableBody>\n      <tfoot/>\n    </Table>\n    </TableContainer>\n  </AccordionDetails>\n  </Accordion>\n    );\n}\n\nexport default CharacterBonds;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {classDetails} from 'data/classDetails';\nimport {Add,Delete} from '@material-ui/icons';\nimport {IconButton,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TextField} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction CharacterGear() {\n\n  const classes = useStyles();\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n  const dwc = character.dwClass;\n\n  // Total Load\n  const totalLoad = () => {\n    if (character.items) {\n      return (character.items.reduce((totalLoad,data) => totalLoad + parseInt((data.weight || 0),10) ,0));\n    } else {\n      return ('');\n    }\n  };\n\n  // Max Load\n  const maxLoad = () => {\n\n    if (character.dwClass && character.abilities.find(x => x.category === 'STR').score && character.abilities.find(x => x.category === 'STR').affliction) {\n      let str = character.abilities.find(x => x.category === 'STR');\n      let baseModifier;\n      let abilityAffliction = str.affliction;\n      let abilityScore = parseInt(str.score,10);\n      let afflicted;\n\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\n        baseModifier = -3;\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\n        baseModifier = -2;\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n        baseModifier = -1;\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n        baseModifier = 0;\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n        baseModifier = 1;\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\n        baseModifier = 2;\n      } else if (abilityScore === 18) {\n        baseModifier = 3;\n      }\n\n      /*-1 if afflicted*/\n      if (abilityAffliction === \"Unafflicted\") {\n        afflicted = 0;\n      } else {\n        afflicted = 1;\n      }\n\n      let modifier = (baseModifier - afflicted);\n\n      return (\"/ \" + (classDetails.[dwc].baseLoad + modifier));\n    } else {\n      return ('');\n    }\n  };\n\n  // State manipulation\n  const updateItem = index => e => {\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = {...character.items[index], item: e.target.value}; // replace value\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n\n  const updateItemWeight = index => e => {\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = {...character.items[index], weight: e.target.value}; // replace value\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n\n  // Delete rows in the table\n  const deleteItemRow = index => {\n    const newItems = [...character.items]; // copying the old array\n    if (character.items.length !== 1) { //don't delete last row\n      newItems.splice(index, 1); // remove item from array\n      setCharacter(character => ({...character, items: newItems})); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  }\n\n  // Add rows in the table\n  const addItemRow = () => {\n    const newItems = [...character.items, {item: \"\", weight: \"\"}]; // copying the old array and adding blank item\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n  //,\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n        <TableRow>\n          <TableCell align=\"center\" colSpan=\"4\">ITEM</TableCell>\n          <TableCell align=\"center\" colSpan=\"2\">WEIGHT</TableCell>\n          <TableCell>\n            <IconButton aria-label=\"add\">\n            <Add\n              onClick={() => addItemRow()}\n            />\n        </IconButton>\n        </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {\n         character.items && character.items.map((items,index) => {\n         return (\n           <TableRow key={index}>\n               <TableCell colSpan=\"4\">\n                 <TextField\n                   multiline\n                   fullWidth\n                   variant=\"outlined\"\n                   aria-label=\"empty textarea\"\n                   placeholder=\"Add any items and descriptions here\"\n                   value={items.item}\n                   name={\"item\" + index}\n                   onChange={updateItem(index)}/>\n               </TableCell>\n               <TableCell colSpan=\"2\">\n                 <TextField\n                   type=\"number\"\n                   fullWidth\n                   variant=\"outlined\"\n                   min={0}\n                   value={items.weight}\n                   name={\"itemWeight\" + index}\n                   onChange={updateItemWeight(index)}/>\n               </TableCell>\n               <TableCell>\n                 <IconButton aria-label=\"delete\">\n                     <Delete\n                   onClick={() => deleteItemRow(index)}/>\n                  </IconButton>\n               </TableCell>\n           </TableRow>)\n        })\n      }\n      <TableRow>\n        <TableCell align=\"right\" colSpan=\"4\">LOAD</TableCell>\n        <TableCell>\n          <TextField\n            type=\"number\"\n            fullWidth\n            variant=\"outlined\"\n            name=\"totalLoad\"\n            InputProps={{\n              readOnly: true,\n            }}\n            value={totalLoad()} />\n        </TableCell>\n        <TableCell>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            name=\"maxLoad\"\n            InputProps={{\n              readOnly: true,\n            }}\n            value={maxLoad()} />\n        </TableCell>\n        <td />\n      </TableRow>\n    </TableBody>\n    </Table>\n  </TableContainer>\n    );\n}\n\nexport default CharacterGear;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {Add,Delete} from '@material-ui/icons';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {ExpandMore} from '@material-ui/icons';\nimport {Accordion,AccordionSummary,AccordionDetails,Checkbox,IconButton,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TextField} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nfunction CharacterClassFeatures() {\n\n  const classes = useStyles();\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  // State manipulation\n  const updateFeatureCheckbox = index => e => {\n    let newFeatures = [...character.classFeatures]; // copying the old array\n    newFeatures[index] = {...character.classFeatures[index], checkbox: e.target.checked}; // replace value\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\n  }\n\n  const updateFeature = index => e => {\n    let newFeatures = [...character.classFeatures]; // copying the old array\n    newFeatures[index] = {...character.classFeatures[index], feature: e.target.value}; // replace value\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\n  }\n\n  // Delete rows in the table\n  const deleteFeatureRow = index => {\n    const newFeatures = [...character.classFeatures]; // copying the old array\n    if (character.classFeatures.length !== 1) { //don't delete last row\n      newFeatures.splice(index, 1); // remove item from array\n      setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  }\n\n  // Add rows in the table\n  const addFeatureRow = () => {\n    const newFeatures = [...character.classFeatures, {feature: \"\", checkbox: false}]; // copying the old array and adding blank item\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\n  }\n\n  return (\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMore />}>Class Features\n      </AccordionSummary>\n      <AccordionDetails>\n        <TableContainer component={Paper}>\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>\n          <TableCell colSpan=\"2\" align=\"center\">Feature</TableCell>\n          <TableCell>\n            <IconButton aria-label=\"add\">\n            <Add\n              onClick={() => addFeatureRow()}\n            />\n          </IconButton>\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n          {\n           character.classFeatures && character.classFeatures.map((classFeatures,index) => {\n           return (\n             <TableRow key={index}>\n               <TableCell>\n                 <Checkbox\n                   name={\"classFeatureCheckbox\" + index}\n                   checked={!!classFeatures.checkbox}\n                   onChange={updateFeatureCheckbox(index)}\n                   color=\"primary\"\n                   />\n               </TableCell>\n                 <TableCell>\n                   <TextField\n                    multiline\n                    fullWidth\n                    variant=\"outlined\"\n                     aria-label=\"empty textarea\"\n                     placeholder=\"Add any Class Features here (e.g. Spell Lists, Poison Recipes, Druid Balance, Paladin Quests or anything else!)\"\n                     value={classFeatures.feature}\n                     name={\"classFeature\" + index}\n                     onChange={updateFeature(index)}/>\n                 </TableCell>\n                 <TableCell>\n                   <IconButton aria-label=\"delete\">\n                     <Delete\n                     onClick={() => deleteFeatureRow(index)}/>\n                   </IconButton>\n                 </TableCell>\n             </TableRow>)\n          })\n        }\n      </TableBody>\n      <tfoot/>\n    </Table>\n    </TableContainer>\n  </AccordionDetails>\n  </Accordion>\n    );\n}\n\nexport default CharacterClassFeatures;\n","import React from 'react';\nimport {Accordion,AccordionSummary,AccordionDetails} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {standardMoves} from 'data/movesList';\n\nfunction CharacterStandardMoves() {\n\n  return (\n  <>\n        {\n          standardMoves.map((data) => {\n            return (\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMore />}>{data.name}\n                </AccordionSummary>\n                <AccordionDetails>\n                      <p dangerouslySetInnerHTML={{__html: data.description }}></p>\n                </AccordionDetails>\n              </Accordion>\n              );\n          })\n        }\n    </>);\n}\n\nexport default CharacterStandardMoves;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Accordion,AccordionSummary,AccordionDetails} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {advancedMoves} from 'data/movesList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction CharacterAdvancedMoves() {\n  const classes = useStyles();\n  return (\n  <>\n        {\n          advancedMoves.map((data) => {\n            return (\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMore />}>{data.name}\n                </AccordionSummary>\n                <AccordionDetails>\n                      <p dangerouslySetInnerHTML={{__html: data.description }}></p>\n                </AccordionDetails>\n              </Accordion>\n              );\n        })\n      }\n    </>);\n}\n\nexport default CharacterAdvancedMoves;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Accordion,AccordionSummary,AccordionDetails} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {classMoves} from 'data/movesList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction CharacterClassMoves() {\n  const classes = useStyles();\n\n  // State Variables\n  const [character] = useContext(CharacterState);\n  const dwc = character.dwClass;\n\n  return (\n  <>\n        { dwc && classMoves.[dwc].startingMoves.map((data) => {\n          return (\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMore />}>\n                {data.name}\n              </AccordionSummary>\n              <AccordionDetails>\n                    <p dangerouslySetInnerHTML={{__html: data.description }}></p>\n              </AccordionDetails>\n            </Accordion>\n            );\n      })\n    }\n    </>);\n}\n\nexport default CharacterClassMoves;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {AppBar,Box,Tab,Tabs} from '@material-ui/core';\nimport CharacterStandardMoves from 'components/character/CharacterStandardMoves'\nimport CharacterAdvancedMoves from 'components/character/CharacterAdvancedMoves'\nimport CharacterClassMoves from 'components/character/CharacterClassMoves'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction CharacterMoves() {\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"Standard\" {...a11yProps(0)} />\n            <Tab label=\"Advanced\" {...a11yProps(1)} />\n            <Tab label=\"Class\" {...a11yProps(2)} />\n          </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <CharacterStandardMoves/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <CharacterAdvancedMoves/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <CharacterClassMoves/>\n      </TabPanel>\n    </div>);\n}\n\nexport default CharacterMoves;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {useParams} from \"react-router\";\nimport * as FirebaseService from 'services/firebase';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {AppBar,Box,Tab,Tabs} from '@material-ui/core';\nimport CharacterSheetHeader from 'components/character/CharacterSheetHeader'\nimport CharacterBasicDetails from 'components/character/CharacterBasicDetails'\nimport CharacterType from 'components/character/CharacterType'\nimport CharacterBasicStats from 'components/character/CharacterBasicStats'\nimport CharacterAbilities from 'components/character/CharacterAbilities'\nimport CharacterBonds from 'components/character/CharacterBonds'\nimport CharacterGear from 'components/character/CharacterGear'\nimport CharacterClassFeatures from 'components/character/CharacterClassFeatures'\nimport CharacterMoves from 'components/character/CharacterMoves'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\n// Debounce function\nconst debounce = (callback,delay) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => callback(...args),delay);\n  }\n}\n\nfunction CharacterSheet() {\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n\n  // Definitions for state\n  const [character, setCharacter] = useState({});\n  const [isSaving, setIsSaving] = useState(false);\n\n  // retrieve URL parameters for usage\n  const { campaignURL, characterURL } = useParams();\n\n  // Use an effect hook to subscribe to the character stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    if (campaignURL && characterURL) {\n      const unsubscribe = FirebaseService.streamCharacter(campaignURL, characterURL, {\n          next: documentSnapshot => {\n              setCharacter(documentSnapshot.data());\n          },\n          error: (error) => {\n            alert(\"Failed to load character data correctly, see console error\");\n            console.error(\"Error loading document:\", error);\n          }\n      });\n      return unsubscribe;\n    }\n  }, [campaignURL, characterURL, setCharacter]);\n\n  // Saving character\n  const debouncedSave = useCallback(\n    debounce(character =>\n      FirebaseService.saveCharacter(campaignURL, characterURL, character)\n        .then(() => {\n          setIsSaving(false);\n          console.info('Saved Character:', character );\n        })\n        .catch((error) => {\n          alert(\"Failed to save character data correctly, see console error\");\n          console.error(\"Error saving document:\", error);\n          //If saving fails then it will not retry until the error is rectified\n        })\n    , process.env.DEBOUNCE_SAVE_DELAY_MS),[]);\n\n  useEffect(\n    () => {\n      if (character && Object.keys(character).length >= 1) {\n        setIsSaving(true);\n        debouncedSave(character);\n      }\n    }, [character] //Only trigger effect on change of character\n  );\n\n  console.info(\"CharacterState:\",character);\n  console.info(\"isSaving\",isSaving);\n\n  return (\n  <CharacterState.Provider value={[character, setCharacter]}>\n    <CharacterSheetHeader/>\n    <br/>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n        <Tab label=\"Character\" {...a11yProps(0)} />\n        <Tab label=\"Gear\" {...a11yProps(1)} />\n        <Tab label=\"Moves\" {...a11yProps(2)} />\n        <Tab label=\"Dice Roller\" {...a11yProps(3)} />\n      </Tabs>\n      </AppBar>\n    <TabPanel value={value} index={0}>\n      <CharacterBasicDetails/>\n      <br/>\n      <CharacterType/>\n      <br/>\n      <CharacterBasicStats/>\n      <br/>\n      <CharacterAbilities/>\n      <br/>\n      <CharacterBonds/>\n      <br/>\n      <CharacterClassFeatures/>\n    </TabPanel>\n    <TabPanel value={value} index={1}>\n      <CharacterGear/>\n    </TabPanel>\n    <TabPanel value={value} index={2}>\n      <CharacterMoves/>\n    </TabPanel>\n    <TabPanel value={value} index={3}>\n    </TabPanel>\n  </div>\n  </CharacterState.Provider>);\n}\n\nexport default CharacterSheet;\n","import React from 'react';\n\nconst CampaignState = React.createContext([{}, () => {}]);\n\nexport default CampaignState;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useParams} from 'react-router';\nimport {Breadcrumbs} from '@material-ui/core';\n\nfunction CampaignHeader() {\n\n  // retrieve URL parameters for usage\n  const {campaignURL} = useParams();\n\n  return (\n  <div>\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <Link to=\"/dw-react\">Home</Link>\n      <p>{campaignURL}</p>\n    </Breadcrumbs>\n    <h1>Campaign: {campaignURL}</h1>\n  </div>);\n}\n\nexport default CampaignHeader;\n","import React, {useContext, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useParams} from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport AuthState from 'components/contexts/AuthState';\nimport CampaignState from 'components/contexts/CampaignState';\nimport {Add, Delete} from '@material-ui/icons';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField\n} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nfunction CampaignDetails() {\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [campaign] = useContext(CampaignState);\n  const [charaName, setCharaName] = useState(\"\");\n  const [currentUser] = useContext(AuthState);\n  const {campaignURL} = useParams();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    setOpen(false);\n    saveCharacter();\n  }\n\n  // Create New Character\n  const saveCharacter = () => {\n    if (campaignURL && charaName) { //don't save unless details present\n      FirebaseService.createCharacter(campaignURL, charaName, currentUser.email).then(() => {\n        console.info('Created Character:', charaName);\n      }).catch((error) => {\n        alert(\"Failed to create character, see console error\");\n        console.error(\"Error creating document:\", error);\n      });\n    } else {\n      alert('Cannot save blank character');\n    }\n  }\n\n  // Delete Character\n  const deleteCharacter = (campaign, character) => {\n    if (campaign && character) { //don't save unless details present\n      FirebaseService.deleteCharacter(campaign, character).then(() => {\n        console.info('Deleted Character:', character);\n      }).catch((error) => {\n        alert(\"Failed to delete character, see console error\");\n        console.error(\"Error deleting document:\", error);\n      });\n    } else {\n      alert('Cannot delete blank character');\n    }\n  }\n\n  return (<> < TableContainer component = {\n    Paper\n  } > <Table className={classes.table} aria-label=\"simple table\">\n    <TableHead>\n      <TableRow>\n        <TableCell>Character</TableCell>\n        <TableCell>Owner</TableCell>\n        <TableCell>HP</TableCell>\n        <TableCell>XP</TableCell>\n        <TableCell>\n          <IconButton aria-label=\"add\">\n            <Add onClick={handleClickOpen}/>\n          </IconButton>\n        </TableCell>\n      </TableRow>\n    </TableHead>\n    <TableBody>\n      {\n        campaign.campaign && campaign.campaign.map((campaign, index) => {\n          return (<TableRow key={index}>\n            <TableCell>\n              <Link to={\"/dw-react/\" + campaignURL + \"/\" + campaign.character}>{campaign.character}</Link>\n            </TableCell>\n            <TableCell>{campaign.characterData.owner}</TableCell>\n            <TableCell>{campaign.characterData.hp}</TableCell>\n            <TableCell>{campaign.characterData.xp}</TableCell>\n            <TableCell>\n              <IconButton aria-label=\"delete\">\n                <Delete onClick={() => deleteCharacter(campaignURL, campaign.character)}/>\n              </IconButton>\n            </TableCell>\n          </TableRow>)\n        })\n      }\n    </TableBody>\n  </Table> < /TableContainer>\n<Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Create new character</DialogTitle > <DialogContent>\n    <DialogContentText>\n      To create a character, please enter the new character name here. You will not be able to change this once saved.\n    </DialogContentText>\n    <TextField autoFocus=\"autoFocus\" margin=\"dense\" id=\"name\" label=\"Short Character Name\" fullWidth=\"fullWidth\" onChange={event => setCharaName(event.target.value)}/>\n  </DialogContent>\n  <DialogActions>\n    <Button onClick={handleCancel} color=\"primary\">\n      Cancel\n    </Button>\n    <Button onClick={handleSave} color=\"primary\">\n      Create Character\n    </Button>\n  </DialogActions> < /Dialog>\n</ >);\n}\n\nexport default CampaignDetails;\n","import React, {useState,useEffect} from 'react';\nimport {useParams} from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CampaignState from 'components/contexts/CampaignState';\nimport CampaignHeader from 'components/campaign/CampaignHeader';\nimport CampaignDetails from 'components/campaign/CampaignDetails';\n\nfunction CampaignSheet() {\n\n  // Definitions for state\n  const [campaign, setCampaign] = useState({});\n\n  // retrieve URL parameters for usage\n  const {campaignURL} = useParams();\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    if (campaignURL) {\n      const unsubscribe = FirebaseService.streamCharacters(campaignURL, {\n        next: querySnapshot => {\n          //const updatedCharacterList = querySnapshot.docs.map((docSnapshot) => { return(docSnapshot.data())});\n          const updatedCharacterList = querySnapshot.docs.map((docSnapshot) => { return({character: docSnapshot.id , characterData: docSnapshot.data()})});\n          setCampaign(campaign => ({campaign: updatedCharacterList}));\n        },\n        error: (error) => {\n          alert(\"Failed to load campaign data correctly, see console error\");\n          console.error(\"Error loading document:\", error);\n        }\n      });\n      return unsubscribe;\n    }\n  }, [campaignURL, setCampaign]);\n\n  console.info(\"Campaign State:\", campaign);\n\n  return (\n  <CampaignState.Provider value={[campaign, setCampaign]}>\n    <CampaignHeader/>\n    <br/>\n    <CampaignDetails/>\n  </CampaignState.Provider>);\n}\n\nexport default CampaignSheet;\n","import React from 'react';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\nimport ErrorPage from 'components/ErrorPage'\nimport Homepage from 'components/homepage/Homepage';\nimport NavSidebar from 'components/NavSidebar';\nimport AppHeader from 'components/AppHeader';\nimport CharacterSheet from 'components/character/CharacterSheet';\nimport Campaign from 'components/campaign/Campaign';\nimport {Container,Typography} from '@material-ui/core';\nimport \"@fontsource/roboto\"\n\nfunction App() {\n\n  return (<>\n    <Typography>\n    <Container>\n    <Router>\n      <AppHeader/>\n      <NavSidebar/>\n      <Switch>\n        <Route exact path=\"/dw-react/:campaignURL/:characterURL\" component={CharacterSheet} />\n        <Route exact path=\"/dw-react/:campaignURL\" component={Campaign} />\n        <Route exact path=\"/dw-react\" component={Homepage} />\n        <Route component={ErrorPage} />\n      </Switch>\n    </Router>\n    </Container>\n  </Typography>\n  </>)\n}\n\nexport default App;\n","import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\n//import 'index.css';\n//import 'custom.css';\nimport App from 'components/App';\nimport * as FirebaseService from 'services/firebase';\nimport AuthState from 'components/contexts/AuthState';\nimport {Button} from '@material-ui/core';\n\nfunction Index() {\n\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = FirebaseService.auth.onAuthStateChanged(user => {\n      setCurrentUser(user)\n    });\n    return unsubscribe;\n  }, [])\n\n  return (\n  <AuthState.Provider value={[currentUser]}>\n    {\n      currentUser\n        ? (<div>\n          <App />\n        </div>)\n        : <Button variant=\"contained\" color=\"primary\"  onClick={FirebaseService.SignInWithGoogle}>SIGN IN WITH GOOGLE</Button>\n    }\n  </AuthState.Provider>);\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Index/>, rootElement);\n"],"sourceRoot":""}