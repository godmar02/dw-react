{"version":3,"sources":["components/contexts/DarkState.js","components/ErrorPage.js","services/firebase.js","components/homepage/HomepageHeader.js","components/contexts/HomepageState.js","components/contexts/AuthState.js","components/homepage/HomepageDetails.js","components/homepage/Homepage.js","components/contexts/ProfileState.js","components/profile/ProfilePicture.js","components/profile/ProfileDetails.js","components/profile/UserProfile.js","components/AppHeader.js","components/contexts/CharacterState.js","components/character/CharacterSheetHeader.js","components/character/CharacterBasicDetails.js","components/character/CharacterDamage.js","components/character/CharacterArmour.js","components/character/CharacterFunds.js","components/character/CharacterHP.js","components/character/CharacterLevel.js","components/character/CharacterXP.js","components/character/CharacterBasicStats.js","components/character/CharacterAbilities.js","components/contexts/AddBondState.js","components/character/AddBond.js","components/character/CharacterBonds.js","components/contexts/AddItemState.js","components/character/AddItem.js","components/character/CharacterGear.js","components/character/CharacterClassFeatures.js","components/character/CharacterStandardMoves.js","components/character/CharacterAdvancedMoves.js","components/contexts/AddMoveState.js","components/character/AddMove.js","components/character/CharacterClassMoves.js","components/character/CharacterMoves.js","components/other/DiceRoller.js","components/character/CharacterSheet.js","components/contexts/CampaignState.js","components/campaign/CampaignHeader.js","components/campaign/CampaignDetails.js","components/campaign/Campaign.js","components/character/CreateCharacter.js","components/App.js","index.js"],"names":["DarkState","createContext","ErrorPage","firebase","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","provider","GoogleAuthProvider","SignInWithGoogle","signInWithPopup","saveCharacter","campaign","character","data","collection","doc","set","setCustomParameters","prompt","HomepageHeader","Breadcrumbs","aria-label","HomepageState","AuthState","useStyles","makeStyles","table","minWidth","HomepageDetails","classes","currentUser","useContext","useState","open","setOpen","campaignName","setCampaignName","campaigns","handleCancel","saveCampaign","owner","email","then","console","info","catch","error","alert","deleteCampaign","delete","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","IconButton","onClick","Add","TableBody","map","index","to","id","Delete","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","onChange","event","target","value","DialogActions","Button","color","Homepage","setCampaigns","useEffect","observer","next","querySnapshot","updatedCampaignList","docs","docSnapshot","onSnapshot","ctx","useMemo","Provider","ProfileState","ProfilePicture","show","setShow","Avatar","src","photoURL","alt","ProfileDetails","style","border","WebkitBorderRadius","borderRadius","display","position","top","right","backgroundColor","textAlign","font","letterSpacing","lineHeight","fontWeight","padding","displayName","variant","FirebaseService","signOut","UserProfile","theme","root","flexGrow","menuButton","marginRight","spacing","title","AppHeader","darkState","setDarkState","AppBar","Toolbar","edge","Menu","Typography","Brightness4","Switch","checked","CharacterState","CharacterSheetHeader","useParams","campaignURL","characterURL","dw_class","level","smallTextField","width","CharacterBasicDetails","setCharacter","dwc","alig","alignment","handleCharacterChange","name","size","multiline","placeholder","full_name","backstory","class_details","suggested_look","suggestedLook","look","readOnly","race","race_move","alignments","find","x","attribute","textField","CharacterDamage","InputProps","damage","CharacterArmour","type","inputProps","min","armour","CharacterFunds","funds","CharacterHP","maxHp","abilities","base_hp","parseInt","category","score","hp","endAdornment","InputAdornment","input","CharacterLevel","CharacterXP","maxXp","xp","CharacterBasicStats","Grid","item","xs","container","justify","cardContent","paddingTop","paddingBottom","button","fontSize","CharacterAbilities","updateAbilityScore","e","newAbilities","abilityModifier","abilityScore","abilityAffliction","baseModifier","indexOf","modifier","Card","CardContent","reduce","totalScore","max","afflicted","newAffliction","updateAbilityAfflicted","ability","ability_afflictions","AddBondState","formControl","AddBond","bond","setBond","addBond","newBonds","bonds","FormControl","RadioGroup","FormControlLabel","control","Radio","suggested_bonds","CharacterBonds","updateBond","splice","deleteBond","align","colSpan","AddItemState","AddItem","setItem","addItem","newItem","items","Object","assign","checkbox","newItems","Autocomplete","freeSolo","options","option","renderInput","params","chips","flexWrap","chip","maxWidth","borderBottom","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","Row","props","openRow","setOpenRow","updateItem","KeyboardArrowUp","KeyboardArrowDown","Checkbox","updateItemCheckbox","uses","Select","multiple","tags","Input","renderValue","selected","Chip","itemTags","MenuItem","weight","deleteItem","Collapse","in","timeout","unmountOnExit","Box","tabIndex","itemTypes","description","cost","CharacterGear","totalLoad","maxLoad","str","strAfflicted","strScore","base_load","CharacterClassFeatures","updateFeatureCheckbox","newFeatures","class_features","updateFeature","feature","deleteFeatureRow","addFeatureRow","CharacterStandardMoves","standard_moves","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","dangerouslySetInnerHTML","__html","CharacterAdvancedMoves","advanced_moves","AddMoveState","AddMove","twoToFive","setTwoToFive","sixToTen","setSixToTen","addMove","move","newMove","moves","newMoves","log","FormLabel","FormGroup","row","filter","length","source","CharacterClassStartingMoves","deleteMove","TabPanel","children","other","role","hidden","p","a11yProps","palette","background","paper","CharacterMoves","React","setValue","Tabs","newValue","Tab","DiceRoller","dice","setDice","diceNum","setDiceNum","rollResult","setRollResult","singleRoll","sides","Math","floor","random","InputLabel","defaultValue","disabled","total","i","rollDice","CharacterSheet","documentSnapshot","debouncedSave","useCallback","callback","delay","timer","args","clearTimeout","setTimeout","debounce","keys","CampaignState","CampaignHeader","CampaignDetails","deleteCharacter","CardHeader","action","subheader","characterData","CampaignSheet","setCampaign","updatedCharacterList","card","abCard","cardHeader","marginTop","marginBottom","abCardContent","abTitle","abTextField","abButton","history","useHistory","charaName","setCharaName","charaFullName","setCharaFullName","charaClass","setCharaClass","charaRace","setCharaRace","charaAlignment","setCharaAlignment","charaRaceMove","setCharaRaceMove","charaMoveOption","setCharaMoveOption","charaAbilities","setCharaAbilities","charaGearOptions","setCharaGearOptions","charaBonds","setCharaBonds","activeStep","setActiveStep","setError","steps","handleNext","prevActiveStep","handleBack","handleBondChange","handleReset","push","handleSave","gearDescription","gear","count","attributes","item_description","singleInput","replace","Number","isFinite","join","Boolean","gearOptions","gearChoices","starting_gear_options","gearChoice","choiceGroup","multiplicity","Fragment","newGear","addCharaGearOptions","toString","v","addCharaGearMultiOptions","moveOptions","moveChoices","moveNext","afflictedValue","validateScore","startingFunds","String","starting_funds","startingMoves","concat","startingGear","starting_gear","choice","Array","isArray","flat","singleItem","coins","ammount","match","singleObject","maxHP","Stepper","alternativeLabel","Step","StepLabel","direction","alignItems","stepIndex","dw_classes","intro","race_moves","suggested_names","starting_gear_details","includes","undefined","abScore","startIcon","Save","getStepContent","App","palletType","darkTheme","createMuiTheme","ThemeProvider","Container","exact","path","Campaign","CreateCharacter","Index","setCurrentUser","onAuthStateChanged","user","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e4cf263a.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst DarkState = createContext();\n\nexport default DarkState;\n","import React from 'react';\n\nexport default function ErrorPage() {\n  return <h1>Oops! Page not found!</h1>;\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialise Firebase and setting up firestore and auth for use later\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\n\n// Authenticate with Firebase-auth using the Google provider object\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account',\n});\nexport function SignInWithGoogle() {\n  auth.signInWithPopup(provider);\n}\n\n// Firestore operations\n\n// Create new campaign\nexport function createCampaign(campaign, owner) {\n  return db.collection('campaigns').doc(campaign).set({ owner: owner });\n}\n\n// Save/Create Character\nexport function saveCharacter(campaign, character, data) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .doc(character)\n    .set(data);\n}\n\n// Stream Campaign Data (all Campaigns)\nexport function streamCampaigns(observer) {\n  return db.collection('campaigns').onSnapshot(observer);\n}\n\n// Stream Character Data (all Characters)\nexport function streamCharacters(campaign, observer) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .onSnapshot(observer);\n}\n\n// Stream Character Data (selected Characters)\nexport function streamCharacter(campaign, character, observer) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .doc(character)\n    .onSnapshot(observer);\n}\n\n// Delete Campaign\nexport function deleteCampaign(campaign) {\n  return db.collection('campaigns').doc(campaign).delete();\n}\n\n// Delete Characters\nexport function deleteCharacter(campaign, character) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .doc(character)\n    .delete();\n}\n\n// Default Export\nexport default firebase;\n","import React from 'react';\nimport { Breadcrumbs } from '@material-ui/core';\n\nexport default function HomepageHeader() {\n  return (\n    <div>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <p>Home</p>\n      </Breadcrumbs>\n      <h1>Campaigns Homepage</h1>\n    </div>\n  );\n}\n","import { createContext } from 'react';\n\nconst HomepageState = createContext();\n\nexport default HomepageState;\n","import { createContext } from 'react';\n\nconst AuthState = createContext();\n\nexport default AuthState;\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as FirebaseService from 'services/firebase';\nimport HomepageState from 'components/contexts/HomepageState';\nimport AuthState from 'components/contexts/AuthState';\nimport { Add, Delete } from '@material-ui/icons';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function HomepageDetails() {\n  const classes = useStyles();\n  const { currentUser } = useContext(AuthState);\n  const [open, setOpen] = useState(false);\n  const [campaignName, setCampaignName] = useState('');\n  const { campaigns } = useContext(HomepageState);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    setOpen(false);\n    saveCampaign();\n  };\n\n  // Create New Campaign\n  const saveCampaign = () => {\n    if (campaignName) {\n      //don't save unless details present\n      FirebaseService.createCampaign(campaignName, currentUser.email)\n        .then(() => {\n          console.info('Created Campaign:', campaignName);\n        })\n        .catch((error) => {\n          alert('Failed to create campaign, see console error');\n          console.error('Error creating document:', error);\n        });\n    } else {\n      alert('Cannot save blank campaign');\n    }\n  };\n\n  // Delete Campaign\n  const deleteCampaign = (campaignName) => {\n    if (campaignName) {\n      //don't save unless details present\n      FirebaseService.deleteCampaign(campaignName)\n        .then(() => {\n          console.info('Deleted Campaign:', campaignName);\n        })\n        .catch((error) => {\n          alert('Failed to delete campaign, see console error');\n          console.error('Error deleting document:', error);\n        });\n    } else {\n      alert('Cannot delete blank campaign');\n    }\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Campaign</TableCell>\n              <TableCell>Owner</TableCell>\n              <TableCell>\n                <IconButton aria-label='add' onClick={handleClickOpen}>\n                  <Add />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {campaigns.campaigns &&\n              campaigns.campaigns.map((campaign, index) => {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>\n                      <Link to={'/dw-react/' + campaign.id}>{campaign.id}</Link>\n                    </TableCell>\n                    <TableCell>{campaign.owner}</TableCell>\n                    <TableCell>\n                      <IconButton\n                        aria-label='delete'\n                        onClick={() => deleteCampaign(campaign.id)}>\n                        <Delete />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Dialog\n        open={open}\n        onClose={handleCancel}\n        aria-labelledby='form-dialog-title'>\n        <DialogTitle id='form-dialog-title'>Create new campaign</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To create a campaign, please enter the new campaign name here. You\n            will not be able to change this once saved.\n          </DialogContentText>\n          <TextField\n            autoFocus={true}\n            margin='dense'\n            id='name'\n            label='Campaign Name'\n            fullWidth\n            onChange={(event) => setCampaignName(event.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={handleSave} color='primary'>\n            Create Campaign\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport * as FirebaseService from 'services/firebase';\nimport HomepageHeader from 'components/homepage/HomepageHeader';\nimport HomepageDetails from 'components/homepage/HomepageDetails';\nimport HomepageState from 'components/contexts/HomepageState';\n\nexport default function Homepage() {\n  const [campaigns, setCampaigns] = useState({});\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    const unsubscribe = FirebaseService.streamCampaigns({\n      next: (querySnapshot) => {\n        const updatedCampaignList = querySnapshot.docs.map((docSnapshot) => {\n          return { id: docSnapshot.id, owner: docSnapshot.data().owner };\n        });\n        setCampaigns((campaign) => ({ campaigns: updatedCampaignList }));\n      },\n      error: (error) => {\n        alert('Failed to load data correctly, see console error');\n        console.error('Error loading data:', error);\n      },\n    });\n    return unsubscribe;\n  }, [setCampaigns]);\n\n  useEffect(() => {\n    console.info('Campaigns State:', campaigns);\n  }, [campaigns]); //Only log to console if state actually changes\n\n  const ctx = useMemo(() => ({ campaigns }), [campaigns]); //Memo-ised state for performance\n\n  return (\n    <HomepageState.Provider value={ctx}>\n      <HomepageHeader />\n      <br />\n      <HomepageDetails />\n    </HomepageState.Provider>\n  );\n}\n","import { createContext } from 'react';\n\nconst ProfileState = createContext();\n\nexport default ProfileState;\n","import React, { useContext } from \"react\";\nimport AuthState from \"components/contexts/AuthState\";\nimport ProfileState from \"components/contexts/ProfileState\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nexport default function ProfilePicture() {\n  const { currentUser } = useContext(AuthState);\n  const { show, setShow } = useContext(ProfileState);\n  const toggleSetShow = () => setShow(!show);\n\n  return (\n    <Avatar\n      src={currentUser.photoURL}\n      alt=\"Google Profile\"\n      onClick={() => toggleSetShow()}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport AuthState from 'components/contexts/AuthState';\nimport * as FirebaseService from 'services/firebase';\nimport { Button } from '@material-ui/core';\n\nexport default function ProfileDetails() {\n  const { currentUser } = useContext(AuthState);\n\n  return (\n    <div\n      style={{\n        border: '0',\n        WebkitBorderRadius: '50%',\n        borderRadius: '5px',\n        display: 'inline-block',\n        margin: '0',\n        position: 'absolute',\n        top: '50px',\n        right: '20px',\n        color: '#bdc1c6',\n        backgroundColor: 'rgba(60, 64, 67, 0.9)',\n        textAlign: 'left',\n        font: \"500 12px 'Roboto', arial, sans-serif\",\n        letterSpacing: '0.8px',\n        lineHeight: '16px',\n        fontWeight: 'bold',\n        padding: '8px 8px',\n      }}>\n      <div\n        style={{\n          color: 'white',\n        }}>\n        Google Account\n      </div>\n      <div>{currentUser.displayName}</div>\n      <div>{currentUser.email}</div>\n      <Button\n        variant='contained'\n        color='primary'\n        onClick={() => FirebaseService.auth.signOut()}>\n        LOG OUT\n      </Button>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from 'react';\nimport ProfilePicture from 'components/profile/ProfilePicture';\nimport ProfileDetails from 'components/profile/ProfileDetails';\nimport ProfileState from 'components/contexts/ProfileState';\n\nexport default function UserProfile() {\n  const [show, setShow] = useState(false);\n  const ctx = useMemo(() => ({ show, setShow }), [show]); //Memo-ised state for performance\n\n  return (\n    <ProfileState.Provider value={ctx}>\n      <ProfilePicture /> {show ? <ProfileDetails /> : null}\n    </ProfileState.Provider>\n  );\n}\n","import React, { useContext } from 'react';\nimport DarkState from 'components/contexts/DarkState';\nimport {\n  AppBar,\n  IconButton,\n  Toolbar,\n  Typography,\n  Switch,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Brightness4, Menu } from '@material-ui/icons';\nimport UserProfile from 'components/profile/UserProfile';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function AppHeader() {\n  const classes = useStyles();\n  const { darkState, setDarkState } = useContext(DarkState);\n  const handleThemeChange = () => {\n    setDarkState(!darkState);\n  };\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Toolbar>\n          <IconButton\n            edge='start'\n            className={classes.menuButton}\n            color='inherit'\n            aria-label='menu'>\n            <Menu />\n          </IconButton>\n          <Typography component={'span'} variant='h6' className={classes.title}>\n            Dungeon World Character Sheet (by Godmar02)\n          </Typography>\n          <Brightness4 />\n          <Switch checked={darkState} onChange={handleThemeChange} />\n          <UserProfile />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { createContext } from 'react';\n\nconst CharacterState = createContext();\n\nexport default CharacterState;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { Breadcrumbs } from '@material-ui/core';\nimport CharacterState from 'components/contexts/CharacterState';\n\nexport default function CharacterSheetHeader() {\n  const { campaignURL, characterURL } = useParams();\n  const { character } = useContext(CharacterState);\n\n  return (\n    <>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <Link to='/dw-react'>Home</Link>\n        <Link to={'/dw-react/' + campaignURL}>{campaignURL}</Link>\n        <p>{characterURL}</p>\n      </Breadcrumbs>\n      <h1>{characterURL}</h1>\n      <p>\n        {character.dw_class} - Level {character.level}\n      </p>\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  smallTextField: {\n    width: 120,\n  },\n});\n\nexport default function CharacterBasicDetails() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const dwc = character.dw_class;\n  const alig = character.alignment;\n  const alignmentAttribute = () => {\n    if (character.dw_class && character.alignment) {\n      return class_details[dwc].alignments.find((x) => x.alignment === alig)\n        .attribute;\n    } else {\n      return '';\n    }\n  };\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  const suggestedLook = () => {\n    if (character.dw_class) {\n      let dwc = character.dw_class;\n      return class_details[dwc].suggested_look;\n    } else {\n      return '';\n    }\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} size='small' aria-label='simple table'>\n          <TableBody>\n            <TableRow>\n              <TableCell style={{ width: 110, fontWeight: 'bold' }}>\n                FULL NAME\n              </TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  variant='outlined'\n                  placeholder=\"Your character's full name, titles and all\"\n                  value={character.full_name}\n                  name='full_name'\n                  onChange={handleCharacterChange}\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell style={{ fontWeight: 'bold' }}>BACKSTORY</TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  variant='outlined'\n                  placeholder=\"Describe your character's backstory and anything else about your characters identity here\"\n                  value={character.backstory}\n                  name='backstory'\n                  onChange={handleCharacterChange}\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell style={{ fontWeight: 'bold' }}>LOOK</TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  variant='outlined'\n                  placeholder={suggestedLook()}\n                  name='look'\n                  value={character.look}\n                  onChange={handleCharacterChange}\n                />\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <br />\n      <TableContainer component={Paper}>\n        <Table className={classes.table} size='small' aria-label='simple table'>\n          <TableBody>\n            <TableRow>\n              <TableCell style={{ fontWeight: 'bold' }}>CLASS</TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  readOnly\n                  variant='outlined'\n                  name='dwClass'\n                  value={character.dw_class}\n                />\n              </TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell style={{ width: 110, fontWeight: 'bold' }}>\n                RACE\n              </TableCell>\n              <TableCell style={{ width: 110 }}>\n                <TextField\n                  multiline\n                  fullWidth\n                  readOnly\n                  variant='outlined'\n                  name='race'\n                  value={character.race}\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  readOnly\n                  variant='outlined'\n                  name='race_move'\n                  value={character.race_move}\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell style={{ fontWeight: 'bold' }}>ALIGNMENT</TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  readOnly\n                  variant='outlined'\n                  name='alignment'\n                  value={character.alignment}\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  readOnly\n                  variant='outlined'\n                  name='alignment_move'\n                  value={alignmentAttribute()}\n                />\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n}));\n\nexport default function CharacterDamage() {\n  const { character } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  const classes = useStyles();\n\n  const damage = () => {\n    if (character.dw_class) {\n      return class_details[dwc].damage;\n    } else {\n      return '';\n    }\n  };\n\n  return (\n    <TextField\n      variant='outlined'\n      size='small'\n      className={classes.textField}\n      name='damage'\n      label='Damage'\n      InputProps={{\n        readOnly: true,\n      }}\n      value={damage()}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n  },\n}));\n\nexport default function CharacterArmour() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TextField\n      type='number'\n      variant='outlined'\n      size='small'\n      label='Armour'\n      inputProps={{\n        style: { textAlign: 'center' },\n        min: 0,\n      }}\n      name='armour'\n      className={classes.textField}\n      value={character.armour || ''}\n      onChange={handleCharacterChange}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n  },\n}));\n\nexport default function CharacterFunds() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TextField\n      type='number'\n      variant='outlined'\n      size='small'\n      className={classes.textField}\n      name='funds'\n      label='Funds'\n      inputProps={{\n        style: { textAlign: 'center' },\n        min: 0,\n      }}\n      value={character.funds || ''}\n      onChange={handleCharacterChange}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\nimport { InputAdornment, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 100,\n  },\n}));\n\nexport default function CharacterHP() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  const classes = useStyles();\n\n  const maxHp = () => {\n    if (character.dw_class && character.abilities) {\n      return (\n        class_details[dwc].base_hp +\n        parseInt(\n          character.abilities.find((x) => x.category === 'CON').score,\n          10\n        )\n      );\n    } else {\n      return '';\n    }\n  };\n\n  // Validate XP\n  const validateHp = () => {\n    if (parseInt(character.hp, 10) > maxHp()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <>\n      <TextField\n        type='number'\n        variant='outlined'\n        label='HP'\n        error={validateHp()}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>{' / ' + maxHp()}</InputAdornment>\n          ),\n          className: classes.input,\n        }}\n        size='small'\n        className={classes.textField}\n        inputProps={{\n          style: { textAlign: 'center' },\n          min: 0,\n        }}\n        name='hp'\n        value={character.hp || ''}\n        onChange={handleCharacterChange}\n      />\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n  },\n}));\n\nexport default function CharacterLevel() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TextField\n      type='number'\n      variant='outlined'\n      size='small'\n      label='Level'\n      className={classes.textField}\n      inputProps={{\n        style: { textAlign: 'center' },\n        min: 1,\n      }}\n      name='level'\n      value={character.level || ''}\n      onChange={handleCharacterChange}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { InputAdornment, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 100,\n  },\n}));\n\nexport default function CharacterXP() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  // Total Load\n  const maxXp = () => {\n    if (character.level) {\n      return parseInt(character.level, 10) + 7;\n    } else {\n      return '';\n    }\n  };\n\n  // Validate XP\n  const validateXp = () => {\n    if (parseInt(character.xp, 10) > maxXp()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <>\n      <TextField\n        type='number'\n        variant='outlined'\n        label='XP'\n        error={validateXp()}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>{' / ' + maxXp()}</InputAdornment>\n          ),\n          className: classes.input,\n        }}\n        size='small'\n        className={classes.textField}\n        inputProps={{\n          style: { textAlign: 'center' },\n          min: 0,\n        }}\n        name='xp'\n        value={character.xp || ''}\n        onChange={handleCharacterChange}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CharacterDamage from 'components/character/CharacterDamage';\nimport CharacterArmour from 'components/character/CharacterArmour';\nimport CharacterFunds from 'components/character/CharacterFunds';\nimport CharacterHP from 'components/character/CharacterHP';\nimport CharacterLevel from 'components/character/CharacterLevel';\nimport CharacterXP from 'components/character/CharacterXP';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n}));\n\nexport default function CharacterBasicStats() {\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.root}>\n      <Grid item xs={12}>\n        <Grid container justify='center' spacing={1}>\n          <Grid item>\n            <CharacterLevel />\n          </Grid>\n          <Grid item>\n            <CharacterHP />\n          </Grid>\n          <Grid item>\n            <CharacterXP />\n          </Grid>\n          <Grid item>\n            <CharacterDamage />\n          </Grid>\n          <Grid item>\n            <CharacterArmour />\n          </Grid>\n          <Grid item>\n            <CharacterFunds />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { ability_afflictions } from 'data/abilityAfflictions';\nimport { Button, Card, CardContent, Grid, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  cardContent: {\n    paddingTop: 5,\n    '&:last-child': {\n      paddingBottom: 0,\n    },\n  },\n  title: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  textField: {\n    width: 85,\n  },\n  button: {\n    width: 85,\n    fontSize: 11,\n    fontWeight: 'bold',\n  },\n}));\n\nexport default function CharacterAbilities() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n\n  const updateAbilityScore = (index) => (e) => {\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {\n      ...character.abilities[index],\n      score: e.target.value,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      abilities: newAbilities,\n    })); // set array back\n  };\n\n  const updateAbilityAfflicted = (index) => {\n    const newAffliction = !character.abilities[index].afflicted; //switching boolean\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {\n      ...character.abilities[index],\n      afflicted: newAffliction,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      abilities: newAbilities,\n    })); // set array back\n  };\n\n  const afflictedValue = (ability, afflicted) => {\n    if (afflicted) {\n      return ability_afflictions[ability];\n    } else {\n      return 'Unafflicted';\n    }\n  };\n\n  const abilityModifier = (abilityScore, abilityAffliction) => {\n    if (abilityScore) {\n      let baseModifier;\n      let afflicted;\n\n      abilityScore = parseInt(abilityScore, 10);\n\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\n        baseModifier = -3;\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\n        baseModifier = -2;\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n        baseModifier = -1;\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n        baseModifier = 0;\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n        baseModifier = 1;\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\n        baseModifier = 2;\n      } else if (abilityScore === 18) {\n        baseModifier = 3;\n      }\n\n      /* -1 if afflicted */\n      if (abilityAffliction) {\n        afflicted = 1;\n      } else {\n        afflicted = 0;\n      }\n\n      let modifier = baseModifier - afflicted;\n\n      if (modifier > 0) {\n        return '+' + modifier;\n      } else {\n        return modifier;\n      }\n    } else {\n      return '';\n    }\n  };\n\n  const validateScore = () => {\n    const totalScore = character.abilities.reduce(\n      (totalScore, data) => totalScore + parseInt(data.score || 0, 10),\n      0\n    );\n    if (totalScore !== 73) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <Grid className={classes.root}>\n      <Grid item xs={12}>\n        <Grid container justify='center' spacing={1}>\n          {character.abilities &&\n            character.abilities.map((abilities, index) => {\n              return (\n                <Grid item key={index}>\n                  <Card>\n                    <CardContent className={classes.cardContent}>\n                      <p className={classes.title}>{abilities.category}</p>\n                      <TextField\n                        type='number'\n                        variant='outlined'\n                        error={validateScore()}\n                        size='small'\n                        margin='none'\n                        name={abilities.category + 'Score'}\n                        value={abilities.score}\n                        className={classes.textField}\n                        inputProps={{\n                          style: { textAlign: 'center' },\n                          min: 1,\n                          max: 18,\n                        }}\n                        onChange={updateAbilityScore(index)}\n                      />\n                      <br />\n                      <TextField\n                        variant='outlined'\n                        name={abilities.category + 'Modifier'}\n                        value={abilityModifier(\n                          abilities.score,\n                          abilities.afflicted\n                        )}\n                        InputProps={{ readOnly: true }}\n                        inputProps={{\n                          style: {\n                            textAlign: 'center',\n                            fontWeight: 'bold',\n                            fontSize: 25,\n                          },\n                        }}\n                        className={classes.textField}\n                      />\n                      <br />\n                      <Button\n                        onClick={() => updateAbilityAfflicted(index)}\n                        className={classes.button}>\n                        {afflictedValue(\n                          abilities.category,\n                          abilities.afflicted\n                        )}\n                      </Button>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              );\n            })}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { createContext } from 'react';\n\nconst AddBondState = createContext();\n\nexport default AddBondState;\n","import React, { useContext, useState } from 'react';\nimport AddBondState from 'components/contexts/AddBondState';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function AddBond() {\n  const classes = useStyles();\n  const { open, setOpen } = useContext(AddBondState);\n  const { character, setCharacter } = useContext(CharacterState);\n  const [bond, setBond] = useState('');\n  const dwc = character.dw_class;\n\n  const handleCancel = () => {\n    setBond('');\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    addBond();\n    setBond('');\n    setOpen(false);\n  };\n\n  const addBond = () => {\n    const newBonds = [...character.bonds, bond]; // copying the old array and adding new bond depending upon selection\n    setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleCancel}\n      aria-labelledby='form-dialog-title'>\n      <DialogTitle id='form-dialog-title'>Add new bond</DialogTitle>{' '}\n      <DialogContent>\n        <DialogContentText>\n          Choose a suggested bond to add. If you wish to create your own choose\n          'CUSTOM'.\n        </DialogContentText>\n        <FormControl component='fieldset' className={classes.formControl}>\n          <RadioGroup\n            aria-label='bond'\n            name='bond'\n            value={bond}\n            onChange={(event) => setBond(event.target.value)}>\n            <FormControlLabel value='' control={<Radio />} label='CUSTOM' />\n            {character.dw_class &&\n              class_details[dwc].suggested_bonds.map((data, index) => {\n                return (\n                  <FormControlLabel\n                    key={index}\n                    value={data}\n                    control={<Radio />}\n                    label={data}\n                  />\n                );\n              })}\n          </RadioGroup>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color='primary'>\n          Cancel\n        </Button>\n        <Button onClick={handleSave} color='primary'>\n          Add Bond\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useMemo, useState } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport AddBondState from 'components/contexts/AddBondState';\nimport AddBond from 'components/character/AddBond';\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Add, Delete } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function CharacterBonds() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n  const [open, setOpen] = useState(false);\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\n\n  const updateBond = (index) => (e) => {\n    let newBonds = [...character.bonds]; // copying the old array\n    newBonds[index] = e.target.value; // replace value\n    setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\n  };\n\n  const deleteBond = (index) => {\n    const newBonds = [...character.bonds]; // copying the old array\n    //don't delete last row\n    newBonds.splice(index, 1); // remove item from array\n    setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <AddBondState.Provider value={ctx}>\n        <AddBond />\n      </AddBondState.Provider>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} size='small'>\n          <TableBody>\n            {character.bonds &&\n              character.bonds.map((bond, index) => {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>\n                      <TextField\n                        multiline\n                        fullWidth\n                        variant='outlined'\n                        aria-label='empty textarea'\n                        placeholder='Add bond detail here'\n                        value={bond}\n                        name={'bond' + index}\n                        onChange={updateBond(index)}\n                      />\n                    </TableCell>\n                    <TableCell style={{ width: 40 }}>\n                      <IconButton\n                        aria-label='delete'\n                        onClick={() => deleteBond(index)}>\n                        <Delete />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            <TableRow>\n              <TableCell align='center' colSpan='2'>\n                <IconButton aria-label='add' onClick={handleClickOpen}>\n                  <Add />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import { createContext } from 'react';\n\nconst AddItemState = createContext();\n\nexport default AddItemState;\n","import React, { useContext, useState } from 'react';\nimport AddItemState from 'components/contexts/AddItemState';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { items } from 'data/items';\n\nexport default function AddItem() {\n  const { open, setOpen } = useContext(AddItemState);\n  const { character, setCharacter } = useContext(CharacterState);\n  const [item, setItem] = useState('');\n\n  const handleCancel = () => {\n    setItem('');\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    addItem();\n    setItem('');\n    setOpen(false);\n  };\n\n  const addItem = () => {\n    let newItem = items.find((x) => x.name === item);\n    if (newItem) {\n      newItem = Object.assign({}, newItem, { checkbox: false }); //Adding blank checkbox\n      const newItems = [...character.items, newItem]; // copying the old array and adding new item depending upon selection\n      setCharacter((character) => ({ ...character, items: newItems })); // set array back\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleCancel}\n      aria-labelledby='form-dialog-title'>\n      <DialogTitle id='form-dialog-title'>Add new item</DialogTitle>{' '}\n      <DialogContent>\n        <DialogContentText>\n          Search for an item to add. If you wish to create your own choose\n          'CUSTOM'.\n        </DialogContentText>\n        <Autocomplete\n          freeSolo\n          onChange={(event, value) => setItem(value)}\n          options={items.map((option) => option.name)}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label='Items'\n              margin='normal'\n              variant='outlined'\n            />\n          )}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color='primary'>\n          Cancel\n        </Button>\n        <Button onClick={handleSave} color='primary'>\n          Add Item\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useMemo, useState } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport AddItemState from 'components/contexts/AddItemState';\nimport AddItem from 'components/character/AddItem';\nimport { class_details } from 'data/classDetails';\nimport { itemTypes } from 'data/itemTypes';\nimport { itemTags } from 'data/itemTags';\nimport {\n  Box,\n  Chip,\n  Checkbox,\n  Collapse,\n  FormControl,\n  IconButton,\n  Input,\n  Paper,\n  Select,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Add,\n  Delete,\n  KeyboardArrowDown,\n  KeyboardArrowUp,\n} from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 250,\n  },\n  table: {\n    minWidth: 650,\n  },\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction Row(props) {\n  const { item } = props;\n  const { index } = props;\n  const classes = useStyles();\n  const [openRow, setOpenRow] = useState(false);\n  const { character, setCharacter } = useContext(CharacterState);\n\n  const updateItem = (event, index) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = { ...character.items[index], [name]: value }; // replace value\n    setCharacter((character) => ({ ...character, items: newItems })); // set array back\n  };\n\n  const updateItemCheckbox = (index) => (e) => {\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = {\n      ...character.items[index],\n      checkbox: e.target.checked,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      items: newItems,\n    })); // set array back\n  };\n\n  const deleteItem = (index) => {\n    const newItems = [...character.items]; // copying the old array\n    newItems.splice(index, 1); // remove item from array\n    setCharacter((character) => ({ ...character, items: newItems })); // set array back\n  };\n\n  return (\n    <>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton\n            aria-label='expand row'\n            size='small'\n            onClick={() => setOpenRow(!openRow)}>\n            {openRow ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n          </IconButton>\n        </TableCell>\n        <TableCell>\n          <Checkbox\n            name={'item_checkbox' + index}\n            checked={!!item.checkbox}\n            onChange={updateItemCheckbox(index)}\n            color='primary'\n          />\n        </TableCell>\n        <TableCell>\n          <TextField\n            fullWidth\n            size='small'\n            variant='outlined'\n            aria-label='empty textarea'\n            value={item.name}\n            name='name'\n            onChange={(event) => updateItem(event, index)}\n          />\n        </TableCell>\n        <TableCell align='center'>\n          <TextField\n            type='number'\n            fullWidth\n            size='small'\n            variant='outlined'\n            inputProps={{\n              style: { textAlign: 'center' },\n              min: 0,\n            }}\n            name='uses'\n            value={item.uses}\n            onChange={(event) => updateItem(event, index)}\n          />\n        </TableCell>\n        <TableCell>\n          <FormControl className={classes.formControl} fullWidth>\n            <Select\n              multiple\n              value={item.tags}\n              name='tags'\n              onChange={(event) => updateItem(event, index)}\n              input={<Input />}\n              renderValue={(selected) => (\n                <div className={classes.chips}>\n                  {selected.map((value, index) => (\n                    <Chip key={index} label={value} className={classes.chip} />\n                  ))}\n                </div>\n              )}\n              MenuProps={MenuProps}>\n              {itemTags.map((name, index) => (\n                <MenuItem key={index} value={name}>\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </TableCell>\n        <TableCell>\n          <TextField\n            type='number'\n            fullWidth\n            size='small'\n            variant='outlined'\n            inputProps={{\n              style: { textAlign: 'center' },\n              min: 0,\n            }}\n            value={item.weight}\n            name='weight'\n            onChange={(event) => updateItem(event, index)}\n          />\n        </TableCell>\n        <TableCell>\n          <IconButton aria-label='delete' onClick={() => deleteItem(index)}>\n            <Delete />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={openRow} timeout='auto' unmountOnExit>\n            <Box margin={1}>\n              <Table size='small' aria-label='purchases'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell align='center' style={{ width: 40 }}>\n                      TYPE\n                    </TableCell>\n                    <TableCell>DESCRIPTION</TableCell>\n                    <TableCell align='center' style={{ width: 65 }}>\n                      COST\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableCell align='center'>\n                    <FormControl\n                      variant='outlined'\n                      size='small'\n                      className={classes.formControl}>\n                      <Select\n                        tabIndex={-1}\n                        value={item.type}\n                        name='type'\n                        onChange={(event) => updateItem(event, index)}>\n                        {itemTypes.map((type, index) => (\n                          <MenuItem key={index} value={type}>\n                            {type}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      multiline\n                      fullWidth\n                      size='small'\n                      variant='outlined'\n                      aria-label='empty textarea'\n                      value={item.description}\n                      name='description'\n                      onChange={(event) => updateItem(event, index)}\n                    />\n                  </TableCell>\n                  <TableCell align='center'>\n                    <TextField\n                      type='number'\n                      fullWidth\n                      size='small'\n                      variant='outlined'\n                      inputProps={{\n                        style: { textAlign: 'center' },\n                        min: 0,\n                      }}\n                      name='cost'\n                      value={item.cost}\n                      onChange={(event) => updateItem(event, index)}\n                    />\n                  </TableCell>\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\n\nexport default function CharacterGear() {\n  const classes = useStyles();\n  const { character } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  const [open, setOpen] = useState(false);\n\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\n\n  const totalLoad = () => {\n    if (character.items) {\n      return character.items.reduce(\n        (totalLoad, data) => totalLoad + parseInt(data.weight || 0, 10),\n        0\n      );\n    } else {\n      return '';\n    }\n  };\n\n  const maxLoad = () => {\n    if (\n      character.dw_class &&\n      character.abilities.find((x) => x.category === 'STR').score\n    ) {\n      let str = character.abilities.find((x) => x.category === 'STR');\n      let baseModifier;\n      let strAfflicted = str.afflicted;\n      let strScore = parseInt(str.score, 10);\n      let afflicted;\n\n      if ([1, 2, 3].indexOf(strScore) > -1) {\n        baseModifier = -3;\n      } else if ([4, 5].indexOf(strScore) > -1) {\n        baseModifier = -2;\n      } else if ([6, 7, 8].indexOf(strScore) > -1) {\n        baseModifier = -1;\n      } else if ([9, 10, 11, 12].indexOf(strScore) > -1) {\n        baseModifier = 0;\n      } else if ([13, 14, 15].indexOf(strScore) > -1) {\n        baseModifier = 1;\n      } else if ([16, 17].indexOf(strScore) > -1) {\n        baseModifier = 2;\n      } else if (strScore === 18) {\n        baseModifier = 3;\n      }\n\n      /*-1 if afflicted*/\n      if (strAfflicted === false) {\n        afflicted = 0;\n      } else {\n        afflicted = 1;\n      }\n\n      let modifier = baseModifier - afflicted;\n\n      return class_details[dwc].base_load + modifier;\n    } else {\n      return '';\n    }\n  };\n\n  const validateLoad = () => {\n    if (totalLoad() > maxLoad()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <AddItemState.Provider value={ctx}>\n        <AddItem />\n      </AddItemState.Provider>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell style={{ width: 20 }}></TableCell>\n              <TableCell align='center' style={{ width: 40 }}>\n                EQUIPPED\n              </TableCell>\n              <TableCell align='center'>NAME</TableCell>\n              <TableCell align='center' style={{ width: 65 }}>\n                USES\n              </TableCell>\n              <TableCell align='center' style={{ width: 180 }}>\n                TAGS\n              </TableCell>\n              <TableCell align='center' style={{ width: 80 }}>\n                WEIGHT\n              </TableCell>\n              <TableCell style={{ width: 40 }}>\n                <IconButton aria-label='add' onClick={handleClickOpen}>\n                  <Add />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {character.items &&\n              character.items.map((item, index) => (\n                <Row key={index} index={index} item={item} />\n              ))}\n            <TableRow>\n              <TableCell align='right' colSpan='5'>\n                LOAD\n              </TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  error={validateLoad()}\n                  size='small'\n                  variant='outlined'\n                  name='totalLoad'\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  inputProps={{\n                    style: { textAlign: 'center' },\n                  }}\n                  value={totalLoad() + ' / ' + maxLoad()}\n                />\n              </TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { Add, Delete } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ExpandMore } from '@material-ui/icons';\nimport {\n  Checkbox,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function CharacterClassFeatures() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n\n  // State manipulation\n  const updateFeatureCheckbox = (index) => (e) => {\n    let newFeatures = [...character.class_features]; // copying the old array\n    newFeatures[index] = {\n      ...character.class_features[index],\n      checkbox: e.target.checked,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      class_features: newFeatures,\n    })); // set array back\n  };\n\n  const updateFeature = (index) => (e) => {\n    let newFeatures = [...character.class_features]; // copying the old array\n    newFeatures[index] = {\n      ...character.class_features[index],\n      feature: e.target.value,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      class_features: newFeatures,\n    })); // set array back\n  };\n\n  // Delete rows in the table\n  const deleteFeatureRow = (index) => {\n    const newFeatures = [...character.class_features]; // copying the old array\n    newFeatures.splice(index, 1); // remove item from array\n    setCharacter((character) => ({\n      ...character,\n      class_features: newFeatures,\n    })); // set array back\n  };\n\n  // Add rows in the table\n  const addFeatureRow = () => {\n    const newFeatures = [\n      ...character.class_features,\n      { feature: '', checkbox: false },\n    ]; // copying the old array and adding blank item\n    setCharacter((character) => ({\n      ...character,\n      class_features: newFeatures,\n    })); // set array back\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size='small'>\n        <TableBody>\n          {character.class_features &&\n            character.class_features.map((class_features, index) => {\n              return (\n                <TableRow key={index}>\n                  <TableCell style={{ width: 20 }}>\n                    <Checkbox\n                      name={'class_feature_checkbox' + index}\n                      checked={!!class_features.checkbox}\n                      onChange={updateFeatureCheckbox(index)}\n                      color='primary'\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      multiline\n                      fullWidth\n                      variant='outlined'\n                      aria-label='empty textarea'\n                      placeholder='Add class features detail here (e.g. Spell Lists, Poison Recipes, Druid Balance, Paladin Quests etc)'\n                      value={class_features.feature}\n                      name={'class_feature' + index}\n                      onChange={updateFeature(index)}\n                    />\n                  </TableCell>\n                  <TableCell style={{ width: 40 }}>\n                    <IconButton\n                      aria-label='delete'\n                      onClick={() => deleteFeatureRow(index)}>\n                      <Delete />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          <TableRow>\n            <TableCell colSpan='3' align='center'>\n              <IconButton aria-label='add' onClick={() => addFeatureRow()}>\n                <Add />\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { standard_moves } from 'data/standardMoves';\n\nexport default function CharacterStandardMoves() {\n  return (\n    <>\n      {standard_moves.map((data, index) => {\n        return (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              {data.name}\n            </AccordionSummary>\n            <AccordionDetails>\n              <p dangerouslySetInnerHTML={{ __html: data.description }}></p>\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { advanced_moves } from 'data/advancedMoves';\n\nexport default function CharacterAdvancedMoves() {\n  return (\n    <>\n      {advanced_moves.map((data, index) => {\n        return (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              {data.name}\n            </AccordionSummary>\n            <AccordionDetails>\n              <p dangerouslySetInnerHTML={{ __html: data.description }}></p>\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n    </>\n  );\n}\n","import { createContext } from 'react';\n\nconst AddMoveState = createContext();\n\nexport default AddMoveState;\n","import React, { useContext, useState } from 'react';\nimport AddMoveState from 'components/contexts/AddMoveState';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  FormGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  DialogTitle,\n  Typography,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport ReactMarkdown from 'react-markdown';\nimport { class_details } from 'data/classDetails';\n\nexport default function AddMove() {\n  const { open, setOpen } = useContext(AddMoveState);\n  const { character, setCharacter } = useContext(CharacterState);\n  const [twoToFive, setTwoToFive] = useState(false);\n  const [sixToTen, setSixToTen] = useState(false);\n  const dwc = character.dw_class;\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleSave = (move) => {\n    addMove(move);\n    setTwoToFive(false);\n    setSixToTen(false);\n    setOpen(false);\n  };\n\n  const addMove = (move) => {\n    const newMove = class_details[dwc].moves.find((x) => x.name === move);\n    if (newMove) {\n      const newMoves = [...character.moves, newMove]; // copying the old array and adding new move depending upon selection\n      console.log('newMoves', newMoves);\n      setCharacter((character) => ({ ...character, moves: newMoves })); // set array back\n    }\n  };\n\n  function level(input) {\n    if (input === '2to5' && twoToFive) {\n      return input;\n    } else if (input === '6to10' && sixToTen) {\n      return input;\n    } else {\n      return null;\n    }\n  }\n\n  function isChosen(move) {\n    if (character.moves.filter((x) => x.name === move).length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleCancel}>\n      <DialogTitle id='form-dialog-title'>Add new move</DialogTitle>{' '}\n      <DialogContent>\n        <FormControl component='fieldset'>\n          <FormLabel component='legend'>Filter Moves:</FormLabel>\n          <FormGroup row>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  color='primary'\n                  name='2to5'\n                  onChange={() => setTwoToFive(!twoToFive)}\n                />\n              }\n              label='Level 2-5'\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  color='primary'\n                  name='6to10'\n                  onChange={() => setSixToTen(!sixToTen)}\n                />\n              }\n              label='Level 6-10'\n            />\n          </FormGroup>\n        </FormControl>\n        {class_details[dwc].moves\n          .filter(\n            (x) =>\n              (x.level === level('2to5') || x.level === level('6to10')) &&\n              isChosen(x.name) !== true\n          )\n          .map((data, index) => {\n            return (\n              <Typography component={'span'} key={index}>\n                <Accordion>\n                  <AccordionSummary expandIcon={<ExpandMore />}>\n                    {data.name}\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <ReactMarkdown source={data.description} />\n                    <br />\n                    <Button\n                      onClick={() => handleSave(data.name)}\n                      color='primary'>\n                      Add Move\n                    </Button>\n                  </AccordionDetails>\n                </Accordion>\n              </Typography>\n            );\n          })}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color='primary'>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useMemo, useState } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport AddMoveState from 'components/contexts/AddMoveState';\nimport AddMove from 'components/character/AddMove';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  IconButton,\n} from '@material-ui/core';\nimport { Add, Delete, ExpandMore } from '@material-ui/icons';\nimport ReactMarkdown from 'react-markdown';\n\nexport default function CharacterClassStartingMoves() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const [open, setOpen] = useState(false);\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\n\n  const deleteMove = (index) => {\n    const newMoves = [...character.moves]; // copying the old array\n    if (character.moves[index].level !== 'starting') {\n      newMoves.splice(index, 1); // remove item from array\n      setCharacter((character) => ({ ...character, moves: newMoves })); // set array back\n    } else {\n      alert('Cannot delete starting move');\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <AddMoveState.Provider value={ctx}>\n        <AddMove />\n      </AddMoveState.Provider>\n      {character.moves.map((data, index) => {\n        return (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              {data.name} ({data.level})\n              {data.level === 'starting' ? null : (\n                <IconButton\n                  aria-label='delete'\n                  onClick={() => deleteMove(index)}>\n                  <Delete />\n                </IconButton>\n              )}\n            </AccordionSummary>\n            <AccordionDetails>\n              <ReactMarkdown source={data.description} />\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n      <Accordion textAlign='center'>\n        <AccordionSummary>\n          <IconButton aria-label='add' onClick={handleClickOpen}>\n            <Add />\n          </IconButton>\n        </AccordionSummary>\n      </Accordion>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Box, Tab, Tabs } from '@material-ui/core';\nimport CharacterStandardMoves from 'components/character/CharacterStandardMoves';\nimport CharacterAdvancedMoves from 'components/character/CharacterAdvancedMoves';\nimport CharacterClassMoves from 'components/character/CharacterClassMoves';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}>\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function CharacterMoves() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleTabChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Tabs value={value} onChange={handleTabChange}>\n          <Tab label='Standard' {...a11yProps(0)} />\n          <Tab label='Advanced' {...a11yProps(1)} />\n          <Tab label='Class' {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <CharacterStandardMoves />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <CharacterAdvancedMoves />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <CharacterClassMoves />\n      </TabPanel>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: 126,\n    textAlign: 'center',\n  },\n  textField: {\n    width: 126,\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n}));\n\nexport default function DiceRoller() {\n  const [dice, setDice] = useState();\n  const [diceNum, setDiceNum] = useState();\n  const [rollResult, setRollResult] = useState(0);\n  const classes = useStyles();\n\n  function singleRoll(sides) {\n    const roll = Math.floor(Math.random() * sides) + 1;\n    return roll;\n  }\n\n  function rollDice(sides, diceNum) {\n    sides = parseInt(sides, 10);\n    diceNum = parseInt(diceNum, 10);\n    let total = 0;\n    for (let i = 0; i < diceNum; i++) {\n      total = total + singleRoll(sides);\n    }\n    return setRollResult(total);\n  }\n\n  return (\n    <>\n      <FormControl\n        variant='outlined'\n        size='small'\n        className={classes.formControl}>\n        <InputLabel>Dice</InputLabel>\n        <Select\n          tabIndex={-1}\n          defaultValue='null'\n          label='dice'\n          onChange={(event) => {\n            setDice(event.target.value);\n          }}>\n          <MenuItem disabled='disabled' value='null' hidden='hidden' />\n          <MenuItem value='6'>d6</MenuItem>\n          <MenuItem value='8'>d8</MenuItem>\n          <MenuItem value='10'>d10</MenuItem>\n        </Select>\n      </FormControl>\n      <br />\n      <FormControl\n        variant='outlined'\n        size='small'\n        className={classes.formControl}>\n        <InputLabel>Number</InputLabel>\n        <Select\n          tabIndex={-1}\n          defaultValue='null'\n          label='Number'\n          onChange={(event) => {\n            setDiceNum(event.target.value);\n          }}>\n          <MenuItem disabled='disabled' value='null' hidden='hidden' />\n          <MenuItem value='1'>1</MenuItem>\n          <MenuItem value='2'>2</MenuItem>\n          <MenuItem value='3'>3</MenuItem>\n        </Select>\n      </FormControl>\n      <Button onClick={() => rollDice(dice, diceNum)}>Roll</Button>\n      <TextField\n        variant='outlined'\n        size='small'\n        label='Result'\n        className={classes.textField}\n        value={rollResult}\n      />\n    </>\n  );\n}\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useContext,\n  useMemo,\n} from 'react';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport PropTypes from 'prop-types';\nimport CharacterState from 'components/contexts/CharacterState';\nimport AuthState from 'components/contexts/AuthState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Box, Tab, Tabs } from '@material-ui/core';\nimport CharacterSheetHeader from 'components/character/CharacterSheetHeader';\nimport CharacterBasicDetails from 'components/character/CharacterBasicDetails';\nimport CharacterBasicStats from 'components/character/CharacterBasicStats';\nimport CharacterAbilities from 'components/character/CharacterAbilities';\nimport CharacterBonds from 'components/character/CharacterBonds';\nimport CharacterGear from 'components/character/CharacterGear';\nimport CharacterClassFeatures from 'components/character/CharacterClassFeatures';\nimport CharacterMoves from 'components/character/CharacterMoves';\nimport DiceRoller from 'components/other/DiceRoller';\n\n// Tab functions\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}>\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\n// Debounce function\nconst debounce = (callback, delay) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => callback(...args), delay);\n  };\n};\n\nexport default function CharacterSheet() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [character, setCharacter] = useState({});\n  const { campaignURL, characterURL } = useParams();\n  const { currentUser } = useContext(AuthState);\n\n  const handleTabChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  // Subscribe to Character Data\n  useEffect(() => {\n    if (campaignURL && characterURL) {\n      const unsubscribe = FirebaseService.streamCharacter(\n        campaignURL,\n        characterURL,\n        {\n          next: (documentSnapshot) => {\n            setCharacter(documentSnapshot.data());\n          },\n          error: (error) => {\n            alert('Failed to load character data correctly, see console error');\n            console.error('Error loading document:', error);\n          },\n        }\n      );\n      return unsubscribe;\n    }\n  }, [campaignURL, characterURL, setCharacter]);\n\n  // Debounced Save\n  const debouncedSave = useCallback(\n    debounce(\n      (character) =>\n        FirebaseService.saveCharacter(campaignURL, characterURL, character)\n          .then(() => {\n            console.info('Saved Character:', character);\n          })\n          .catch((error) => {\n            alert('Failed to save character data correctly, see console error');\n            console.error('Error saving document:', error);\n          }),\n      5000\n    ),\n    []\n  );\n\n  // Save changes to character\n  useEffect(() => {\n    if (\n      character &&\n      Object.keys(character).length >= 1 &&\n      currentUser.email === character.owner\n    ) {\n      console.info('CharacterState:', character);\n      debouncedSave(character);\n    }\n  }, [character]); //Only trigger effect on change of character\n\n  const ctx = useMemo(() => ({ character, setCharacter }), [character]); //Memo-ised state for performance\n\n  return (\n    <CharacterState.Provider value={ctx}>\n      <CharacterSheetHeader />\n      <br />\n      <div className={classes.root}>\n        <CharacterBasicStats />\n        <br />\n        <CharacterAbilities />\n        <br />\n        <AppBar position='static'>\n          <Tabs value={value} onChange={handleTabChange}>\n            <Tab label='About' {...a11yProps(0)} />\n            <Tab label='Bonds' {...a11yProps(1)} />\n            <Tab label='Features' {...a11yProps(2)} />\n            <Tab label='Gear' {...a11yProps(3)} />\n            <Tab label='Moves' {...a11yProps(4)} />\n            <Tab label='Dice Roller' {...a11yProps(5)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <CharacterBasicDetails />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <CharacterBonds />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <CharacterClassFeatures />\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          <CharacterGear />\n        </TabPanel>\n        <TabPanel value={value} index={4}>\n          <CharacterMoves />\n        </TabPanel>\n        <TabPanel value={value} index={5}>\n          <DiceRoller />\n        </TabPanel>\n      </div>\n    </CharacterState.Provider>\n  );\n}\n","import { createContext } from 'react';\n\nconst CampaignState = createContext();\n\nexport default CampaignState;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { Breadcrumbs } from '@material-ui/core';\n\nexport default function CampaignHeader() {\n  const { campaignURL } = useParams();\n\n  return (\n    <div>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <Link to='/dw-react'>Home</Link>\n        <p>{campaignURL}</p>\n      </Breadcrumbs>\n      <h1>Campaign: {campaignURL}</h1>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CampaignState from 'components/contexts/CampaignState';\nimport { Add, Delete } from '@material-ui/icons';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n});\n\nexport default function CampaignDetails() {\n  const classes = useStyles();\n  const { campaign } = useContext(CampaignState);\n  const { campaignURL } = useParams();\n\n  // Delete Character\n  const deleteCharacter = (campaign, character) => {\n    if (campaign && character) {\n      //don't save unless details present\n      FirebaseService.deleteCharacter(campaign, character)\n        .then(() => {\n          console.info('Deleted Character:', character);\n        })\n        .catch((error) => {\n          alert('Failed to delete character, see console error');\n          console.error('Error deleting document:', error);\n        });\n    } else {\n      alert('Cannot delete blank character');\n    }\n  };\n\n  return (\n    <Grid className={classes.root}>\n      <Grid item xs={12}>\n        <Grid container justify='center' spacing={1}>\n          {campaign.campaign &&\n            campaign.campaign.map((campaign, index) => {\n              return (\n                <Grid item key={index}>\n                  <Card className={classes.root}>\n                    <CardHeader\n                      action={\n                        <IconButton\n                          aria-label='delete'\n                          onClick={() =>\n                            deleteCharacter(campaignURL, campaign.character)\n                          }>\n                          <Delete />\n                        </IconButton>\n                      }\n                      title={\n                        <Link\n                          to={\n                            '/dw-react/' +\n                            campaignURL +\n                            '/' +\n                            campaign.character\n                          }>\n                          {campaign.character}\n                        </Link>\n                      }\n                      subheader={campaign.characterData.owner}\n                    />\n                    <CardContent>\n                      <Typography variant='body1' component='p'>\n                        Level: {campaign.characterData.level}\n                      </Typography>\n                      <Typography variant='body1' component='p'>\n                        Class: {campaign.characterData.dw_class}\n                      </Typography>\n                      <Typography variant='body1' component='p'>\n                        Race: {campaign.characterData.race}\n                      </Typography>\n                      <Typography variant='body1' component='p'>\n                        Alignment: {campaign.characterData.alignment}\n                      </Typography>\n                      <br />\n                      <Typography variant='body2' component='p'>\n                        HP: {campaign.characterData.hp}\n                      </Typography>\n                      <Typography variant='body2' component='p'>\n                        XP: {campaign.characterData.xp}\n                      </Typography>\n                      <Typography variant='body2' component='p'>\n                        Funds: {campaign.characterData.funds}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              );\n            })}\n          <Grid item>\n            <Card className={classes.root}>\n              <CardHeader title='Add Character' />\n              <CardContent>\n                <Link to={'/dw-react/' + campaignURL + '/create-character'}>\n                  <IconButton aria-label='add'>\n                    <Add />\n                  </IconButton>\n                </Link>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CampaignState from 'components/contexts/CampaignState';\nimport CampaignHeader from 'components/campaign/CampaignHeader';\nimport CampaignDetails from 'components/campaign/CampaignDetails';\n\nexport default function CampaignSheet() {\n  const [campaign, setCampaign] = useState({});\n  const { campaignURL } = useParams();\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    if (campaignURL) {\n      const unsubscribe = FirebaseService.streamCharacters(campaignURL, {\n        next: (querySnapshot) => {\n          const updatedCharacterList = querySnapshot.docs.map((docSnapshot) => {\n            return {\n              character: docSnapshot.id,\n              characterData: docSnapshot.data(),\n            };\n          });\n          setCampaign((campaign) => ({ campaign: updatedCharacterList }));\n        },\n        error: (error) => {\n          alert('Failed to load campaign data correctly, see console error');\n          console.error('Error loading document:', error);\n        },\n      });\n      return unsubscribe;\n    }\n  }, [campaignURL, setCampaign]);\n\n  useEffect(() => {\n    console.info('Campaign State:', campaign);\n  }, [campaign]); //Only log to console if state actually changes\n\n  const ctx = useMemo(() => ({ campaign, setCampaign }), [campaign]); //Memo-ised state for performance\n\n  return (\n    <CampaignState.Provider value={ctx}>\n      <CampaignHeader />\n      <br />\n      <CampaignDetails />\n    </CampaignState.Provider>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as FirebaseService from 'services/firebase';\nimport AuthState from 'components/contexts/AuthState';\nimport {\n  Button,\n  Breadcrumbs,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormLabel,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  Step,\n  Stepper,\n  StepLabel,\n  TextField,\n} from '@material-ui/core';\nimport { Save } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactMarkdown from 'react-markdown';\nimport { class_details } from 'data/classDetails';\nimport { dw_classes } from 'data/dwClasses';\nimport { items } from 'data/items';\nimport { ability_afflictions } from 'data/abilityAfflictions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  card: {\n    minWidth: 275,\n    maxWidth: 700,\n  },\n  abCard: {\n    minWidth: 275,\n    maxWidth: 800,\n  },\n  cardHeader: {\n    paddingBottom: 0,\n  },\n  cardContent: {\n    '&:last-child': {\n      paddingBottom: 5,\n    },\n  },\n  formControl: {\n    marginTop: 5,\n    marginBottom: 5,\n    minWidth: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  abCardContent: {\n    paddingTop: 5,\n    '&:last-child': {\n      paddingBottom: 0,\n    },\n  },\n  abTitle: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  abTextField: {\n    width: 85,\n  },\n  abButton: {\n    width: 85,\n    fontSize: 11,\n    fontWeight: 'bold',\n  },\n}));\n\nfunction getSteps() {\n  return [\n    'Choose Basic Details',\n    'Select Gear',\n    'Select Class Moves',\n    'Add Abilities',\n    'Add Bonds',\n  ];\n}\n\nexport default function CampaignDetails() {\n  const classes = useStyles();\n  const history = useHistory();\n  const { currentUser } = useContext(AuthState);\n  const { campaignURL } = useParams();\n  const [charaName, setCharaName] = useState('');\n  const [charaFullName, setCharaFullName] = useState('');\n  const [charaClass, setCharaClass] = useState('');\n  const [charaRace, setCharaRace] = useState('');\n  const [charaAlignment, setCharaAlignment] = useState('');\n  const [charaRaceMove, setCharaRaceMove] = useState('');\n  const [charaMoveOption, setCharaMoveOption] = useState('');\n  const [charaAbilities, setCharaAbilities] = useState([\n    { category: 'STR', score: '1', afflicted: false },\n    { category: 'DEX', score: '1', afflicted: false },\n    { category: 'CON', score: '1', afflicted: false },\n    { category: 'INT', score: '1', afflicted: false },\n    { category: 'WIS', score: '1', afflicted: false },\n    { category: 'CHA', score: '1', afflicted: false },\n  ]);\n  const [charaGearOptions, setCharaGearOptions] = useState([]);\n  const [charaBonds, setCharaBonds] = useState([]);\n  const [activeStep, setActiveStep] = useState(0);\n  const [error, setError] = useState(false);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleBondChange = (event) => {\n    let target = event.target;\n    if (target.checked) {\n      // Add to array\n      // Copying the old array and adding item\n      const newBonds = [...charaBonds, target.name];\n      // Set array back\n      setCharaBonds(newBonds);\n    } else {\n      // Remove from array\n      // Copying the old array\n      let newBonds = charaBonds.filter((bond) => bond !== target.name);\n      // Set array back\n      setCharaBonds(newBonds);\n    }\n  };\n\n  const clearAttributes = () => {\n    setCharaName('');\n    setCharaClass('');\n    setCharaRace('');\n    setCharaAlignment('');\n    setCharaRaceMove('');\n    setCharaBonds([]);\n    setCharaMoveOption('');\n    setCharaGearOptions([]);\n    setCharaAbilities([\n      { category: 'STR', score: '1', afflicted: false },\n      { category: 'DEX', score: '1', afflicted: false },\n      { category: 'CON', score: '1', afflicted: false },\n      { category: 'INT', score: '1', afflicted: false },\n      { category: 'WIS', score: '1', afflicted: false },\n      { category: 'CHA', score: '1', afflicted: false },\n    ]);\n    setCharaFullName('');\n    setActiveStep(0);\n  };\n\n  const handleReset = () => {\n    clearAttributes();\n  };\n\n  const handleCancel = () => {\n    history.push('/dw-react/' + campaignURL);\n  };\n\n  const handleSave = () => {\n    saveCharacter();\n  };\n\n  const alignmentAttribute = () => {\n    if (charaClass && charaAlignment) {\n      return class_details[charaClass].alignments.find(\n        (x) => x.alignment === charaAlignment\n      ).attribute;\n    } else {\n      return '';\n    }\n  };\n\n  const classIntro = () => {\n    if (charaClass) {\n      return class_details[charaClass].intro;\n    } else {\n      return '';\n    }\n  };\n\n  const suggestedNames = () => {\n    return class_details[charaClass].suggested_names;\n  };\n\n  function gearDescription(gear) {\n    let description = '';\n    let count = 0;\n\n    gear.map((input) => {\n      let weight = '';\n      let uses = '';\n      let tags = '';\n      let attributes = '';\n      let item_description = '';\n      // Stripping leading number and spaces\n      const singleInput = input.replace(/^\\d*x /, '');\n\n      const item = items.find((x) => x.name === singleInput);\n      if (item) {\n        if (Number.isFinite(item.weight)) {\n          weight = item.weight + ' weight';\n        }\n        if (Number.isFinite(item.uses)) {\n          uses = item.uses + ' uses';\n        }\n        if (item.tags) {\n          tags = item.tags.join(', ');\n        }\n        attributes = [uses, tags, weight].filter(Boolean).join(', ');\n        if (attributes) {\n          item_description = input + ' (' + attributes + ')';\n        } else {\n          item_description = input;\n        }\n      } else if (singleInput === 'Coins') {\n        item_description = input;\n      } else {\n        item_description = input + ' (NON STANDARD ITEM - NEEDS TO BE FIXED)';\n      }\n\n      if (count === 0) {\n        description = item_description;\n      } else {\n        description = description + ' and ' + item_description;\n      }\n      count = count + 1;\n\n      return description;\n    });\n    return description;\n  }\n\n  function addCharaGearOptions(option, index) {\n    const newGear = [...charaGearOptions];\n    newGear[index] = option;\n    setCharaGearOptions(newGear);\n  }\n\n  function addCharaGearMultiOptions(checked, option, index) {\n    setError(true);\n    let newGear = [...charaGearOptions];\n    if (!newGear[index]) {\n      newGear[index] = [];\n    }\n    newGear[index][option] = checked;\n    setCharaGearOptions(newGear); // set array back\n    if (\n      charaGearOptions[index] &&\n      charaGearOptions[index].filter((v) => v === true).length ===\n        class_details[charaClass].starting_gear_options[index].multiplicity\n    ) {\n      setError(false);\n    } else {\n      setError(true);\n    }\n  }\n\n  const gearOptions = () => {\n    const gearChoices = class_details[charaClass].starting_gear_options;\n    if (gearChoices.length > 0) {\n      const output = gearChoices.map((gearChoice, index) => {\n        const choiceGroup = index;\n        if (gearChoice.multiplicity === 1) {\n          return (\n            <React.Fragment key={choiceGroup}>\n              <FormControl\n                key={'gearChoiceGroup' + choiceGroup}\n                component='fieldset'\n                className={classes.formControl}>\n                <FormLabel component='legend'>Choose from:</FormLabel>\n                <RadioGroup\n                  aria-label='starting gear choice'\n                  name='starting gear choice'\n                  value={charaGearOptions[choiceGroup] || null}\n                  onChange={(event) => {\n                    addCharaGearOptions(event.target.value, choiceGroup);\n                  }}>\n                  {gearChoice.options.map((gear, index) => {\n                    const option = index;\n                    return (\n                      <FormControlLabel\n                        key={'option' + option}\n                        value={option.toString()}\n                        control={<Radio color='primary' />}\n                        label={gearDescription(gear)}\n                      />\n                    );\n                  })}\n                </RadioGroup>\n              </FormControl>\n              <br />\n              <br />\n            </React.Fragment>\n          );\n        } else {\n          return (\n            <React.Fragment key={choiceGroup}>\n              <FormControl\n                key={'gearChoiceGroup' + choiceGroup}\n                component='fieldset'\n                className={classes.formControl}>\n                <FormLabel component='legend'>\n                  Choose {gearChoice.multiplicity}:\n                </FormLabel>\n                <FormGroup>\n                  {gearChoice.options.map((gear, index) => {\n                    const option = index;\n                    return (\n                      <FormControlLabel\n                        key={'checkbox' + option}\n                        control={\n                          <Checkbox\n                            color='primary'\n                            checked={\n                              charaGearOptions[choiceGroup]\n                                ? !!charaGearOptions[choiceGroup][option]\n                                : false\n                            }\n                            onChange={(event) => {\n                              addCharaGearMultiOptions(\n                                event.target.checked,\n                                option,\n                                choiceGroup\n                              );\n                            }}\n                          />\n                        }\n                        label={gearDescription(gear)}\n                      />\n                    );\n                  })}\n                </FormGroup>\n              </FormControl>\n              <br />\n              <br />\n            </React.Fragment>\n          );\n        }\n      });\n      return output;\n    } else {\n      return <p>No move choices to make</p>;\n    }\n  };\n\n  function gearNext() {\n    if (\n      charaGearOptions &&\n      charaGearOptions.length ===\n        class_details[charaClass].starting_gear_options.length &&\n      !charaGearOptions.includes(null) &&\n      !charaGearOptions.includes(undefined) &&\n      !error\n    ) {\n      return (\n        <Button\n          className={classes.button}\n          variant='contained'\n          color='primary'\n          onClick={handleNext}>\n          Next\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          disabled\n          className={classes.button}\n          variant='contained'\n          color='primary'>\n          Next\n        </Button>\n      );\n    }\n  }\n\n  const moveOptions = () => {\n    const moveChoices = class_details[charaClass].moves.filter(\n      (x) => x.level === 'starting' && x.selected === false\n    );\n    if (moveChoices.length > 0) {\n      return (\n        <FormControl component='fieldset' className={classes.formControl}>\n          <RadioGroup\n            aria-label='starting move choice'\n            name='starting move choice'\n            value={charaMoveOption}\n            onChange={(event) => setCharaMoveOption(event.target.value)}>\n            {moveChoices.map((move, index) => {\n              return (\n                <FormControlLabel\n                  key={index}\n                  value={move.name}\n                  control={<Radio color='primary' />}\n                  label={move.name + ' - ' + move.description}\n                />\n              );\n            })}\n          </RadioGroup>\n        </FormControl>\n      );\n    } else {\n      return <p>No move choices to make</p>;\n    }\n  };\n\n  function moveNext() {\n    const moveChoices = class_details[charaClass].moves.filter(\n      (x) => x.level === 'starting' && x.selected === false\n    );\n    if (\n      (moveChoices.length > 0 && charaMoveOption.length > 0) ||\n      moveChoices.length === 0\n    ) {\n      return (\n        <Button\n          className={classes.button}\n          variant='contained'\n          color='primary'\n          onClick={handleNext}>\n          Next\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          disabled\n          className={classes.button}\n          variant='contained'\n          color='primary'>\n          Next\n        </Button>\n      );\n    }\n  }\n\n  function updateAbilityScore(index, abScore) {\n    let newAbilities = [...charaAbilities]; // copying the old array\n    newAbilities[index] = {\n      ...charaAbilities[index],\n      score: abScore,\n    }; // replace value\n    setCharaAbilities(newAbilities); // set array back\n  }\n\n  function updateAbilityAfflicted(index) {\n    const newAffliction = !charaAbilities[index].afflicted; //switching boolean\n    let newAbilities = [...charaAbilities]; // copying the old array\n    newAbilities[index] = {\n      ...charaAbilities[index],\n      afflicted: newAffliction,\n    }; // replace value\n    setCharaAbilities(newAbilities); // set array back\n  }\n\n  const afflictedValue = (ability, afflicted) => {\n    if (afflicted) {\n      return ability_afflictions[ability];\n    } else {\n      return 'Unafflicted';\n    }\n  };\n\n  const maxHp = () => {\n    return (\n      class_details[charaClass].base_hp +\n      parseInt(charaAbilities.find((x) => x.category === 'CON').score, 10)\n    );\n  };\n\n  const abilityModifier = (abilityScore, abilityAffliction) => {\n    if (abilityScore) {\n      let baseModifier;\n      let afflicted;\n\n      abilityScore = parseInt(abilityScore, 10);\n\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\n        baseModifier = -3;\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\n        baseModifier = -2;\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n        baseModifier = -1;\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n        baseModifier = 0;\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n        baseModifier = 1;\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\n        baseModifier = 2;\n      } else if (abilityScore === 18) {\n        baseModifier = 3;\n      }\n\n      /* -1 if afflicted */\n      if (abilityAffliction) {\n        afflicted = 1;\n      } else {\n        afflicted = 0;\n      }\n\n      let modifier = baseModifier - afflicted;\n\n      if (modifier > 0) {\n        return '+' + modifier;\n      } else {\n        return modifier;\n      }\n    } else {\n      return '';\n    }\n  };\n\n  const validateScore = () => {\n    const totalScore = charaAbilities.reduce(\n      (totalScore, data) => totalScore + parseInt(data.score || 0, 10),\n      0\n    );\n    if (totalScore !== 73) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const saveCharacter = () => {\n    if (\n      campaignURL &&\n      charaName &&\n      charaClass &&\n      charaAlignment &&\n      charaRace &&\n      charaRaceMove\n    ) {\n      // STARTING FUNDS\n      let startingFunds = String(class_details[charaClass].starting_funds);\n\n      // STARTING MOVES\n      let startingMoves = class_details[charaClass].moves.filter(\n        (x) => x.level === 'starting' && x.selected === true\n      );\n      if (charaMoveOption.length > 0) {\n        const newMoves = class_details[charaClass].moves.filter(\n          (x) => x.name === charaMoveOption\n        );\n        startingMoves = startingMoves.concat(newMoves);\n      }\n\n      // STARTING GEAR\n      let startingGear = class_details[charaClass].starting_gear;\n      let gearChoices = charaGearOptions.map((choice, index) => {\n        const choiceGroup = index;\n        let item = '';\n        // Lookup gear choices\n        if (Array.isArray(choice)) {\n          // For multi-choice options cycle through and for true vals pick option\n          choice.map((option, index) => {\n            if (option) {\n              item =\n                class_details[charaClass].starting_gear_options[choiceGroup]\n                  .options[index];\n            }\n            return item;\n          });\n        } else {\n          item =\n            class_details[charaClass].starting_gear_options[choiceGroup]\n              .options[choice];\n        }\n        return item;\n      });\n      // Flatten array of choices and add to starting Gear\n      startingGear = startingGear.concat(gearChoices.flat());\n      // Converting gear into actual items and adding checkboxes\n      startingGear = startingGear.map((item) => {\n        // Stripping leading number and spaces for multiple items\n        const singleItem = item.replace(/^\\d*x /, '');\n\n        if (singleItem === 'Coins') {\n          // If item is a coin then add it to starting funds\n          const coins = item.replace(/x Coins/, '');\n          startingFunds = String(\n            parseInt(startingFunds, 10) + parseInt(coins, 10)\n          );\n          return null;\n        } else {\n          if (singleItem === item) {\n            // If item is a single item\n            return Object.assign(\n              {},\n              items.find((x) => x.name === item),\n              { checkbox: false }\n            );\n          } else {\n            // If item is a multiple\n            const ammount = item.match(/^\\d*/);\n            let singleObject = Object.assign(\n              {},\n              items.find((x) => x.name === singleItem),\n              { checkbox: false }\n            );\n            singleObject.uses = singleObject.uses * ammount;\n            singleObject.cost = singleObject.cost * ammount;\n            singleObject.weight = singleObject.weight * ammount;\n            return singleObject;\n          }\n        }\n      });\n\n      //MaxHP\n      const maxHP = maxHp();\n\n      // SAVE FUNCTION\n      FirebaseService.saveCharacter(campaignURL, charaName, {\n        abilities: charaAbilities,\n        alignment: charaAlignment,\n        armour: '0',\n        backstory: '',\n        bonds: charaBonds,\n        class_features: [],\n        dw_class: charaClass,\n        full_name: charaFullName,\n        funds: startingFunds,\n        hp: maxHP,\n        items: startingGear,\n        level: '1',\n        look: '',\n        moves: startingMoves,\n        owner: currentUser.email,\n        race: charaRace,\n        race_move: charaRaceMove,\n        xp: '0',\n      })\n        .then(() => {\n          console.info('Created Character:', charaName);\n          history.push('/dw-react/' + campaignURL + '/' + charaName);\n        })\n        .catch((error) => {\n          alert('Failed to create character, see console error');\n          console.error('Error creating document:', error);\n        });\n    } else {\n      alert('Cannot save blank character');\n    }\n  };\n\n  function getStepContent(stepIndex) {\n    switch (stepIndex) {\n      case 0:\n        return (\n          <>\n            <Card className={classes.card}>\n              <CardHeader\n                className={classes.cardHeader}\n                title='Class & Alignment'\n              />\n              <CardContent className={classes.cardContent}>\n                <FormControl variant='outlined' className={classes.formControl}>\n                  <InputLabel>Class</InputLabel>\n                  <Select\n                    label='Class'\n                    value={charaClass}\n                    name='class'\n                    onChange={(event) => {\n                      setCharaAlignment('');\n                      setCharaMoveOption([]);\n                      setCharaBonds([]);\n                      setCharaGearOptions([]);\n                      setCharaRaceMove('');\n                      setCharaClass(event.target.value);\n                    }}>\n                    {dw_classes.map((data, index) => {\n                      return (\n                        <MenuItem value={data} key={index}>\n                          {data}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                  <ReactMarkdown source={classIntro()} />\n                </FormControl>\n                <br />\n                <FormControl variant='outlined' className={classes.formControl}>\n                  <InputLabel>Alignment</InputLabel>\n                  <Select\n                    label='Alignment'\n                    value={charaAlignment}\n                    name='alignment'\n                    onChange={(event) => setCharaAlignment(event.target.value)}>\n                    {charaClass &&\n                      class_details[charaClass].alignments.map(\n                        (data, index) => {\n                          return (\n                            <MenuItem value={data.alignment} key={index}>\n                              {data.alignment}\n                            </MenuItem>\n                          );\n                        }\n                      )}\n                  </Select>\n                  <ReactMarkdown source={alignmentAttribute()} />\n                </FormControl>\n              </CardContent>\n            </Card>\n            {charaClass ? (\n              <>\n                <br />\n                <Card className={classes.card}>\n                  <CardHeader\n                    className={classes.cardHeader}\n                    title='Race & Race Move'\n                  />\n                  <CardContent>\n                    <TextField\n                      autoFocus={true}\n                      margin='dense'\n                      id='race'\n                      label='Race'\n                      value={charaRace}\n                      placeholder='e.g. Dwarf, Elf, Goblin, Halfling, Human'\n                      fullWidth\n                      onChange={(event) => setCharaRace(event.target.value)}\n                    />\n                    <br />\n                    <br />\n                    <FormControl\n                      component='fieldset'\n                      className={classes.formControl}>\n                      <RadioGroup\n                        aria-label='race move'\n                        name='race move'\n                        value={charaRaceMove}\n                        onChange={(event) =>\n                          setCharaRaceMove(event.target.value)\n                        }>\n                        {charaClass &&\n                          class_details[charaClass].race_moves.map(\n                            (data, index) => {\n                              return (\n                                <FormControlLabel\n                                  key={index}\n                                  value={data.move}\n                                  control={<Radio color='primary' />}\n                                  label={\n                                    data.move +\n                                    '\\n(usually used with ' +\n                                    data.race +\n                                    ')'\n                                  }\n                                />\n                              );\n                            }\n                          )}\n                      </RadioGroup>\n                    </FormControl>\n                  </CardContent>\n                </Card>\n                <br />\n                <Card className={classes.card}>\n                  <CardHeader className={classes.cardHeader} title='Name' />\n                  <CardContent>\n                    <TextField\n                      autoFocus={true}\n                      margin='dense'\n                      id='full name'\n                      label='Character Name'\n                      placeholder=\"Your character's full name, titles and all\"\n                      value={charaFullName}\n                      fullWidth\n                      onChange={(event) => setCharaFullName(event.target.value)}\n                    />\n                    <TextField\n                      autoFocus={false}\n                      margin='dense'\n                      id='name'\n                      label='Short Character Name'\n                      placeholder=\"Your character's preferred name\"\n                      value={charaName}\n                      fullWidth\n                      onChange={(event) => setCharaName(event.target.value)}\n                    />\n                    <p>Suggested Names: </p>\n                    <ReactMarkdown source={suggestedNames()} />\n                  </CardContent>\n                </Card>\n              </>\n            ) : null}\n            <br />\n            <Button\n              onClick={handleCancel}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Cancel\n            </Button>\n            <Button\n              onClick={handleReset}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Reset\n            </Button>\n            <Button\n              disabled\n              onClick={handleBack}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Back\n            </Button>\n            {charaRace &&\n            charaAlignment &&\n            charaRaceMove &&\n            charaName &&\n            charaFullName ? (\n              <Button\n                className={classes.button}\n                variant='contained'\n                color='primary'\n                onClick={handleNext}>\n                Next\n              </Button>\n            ) : (\n              <Button\n                disabled\n                className={classes.button}\n                variant='contained'\n                color='primary'>\n                Next\n              </Button>\n            )}\n          </>\n        );\n      case 1:\n        return (\n          <>\n            <Card className={classes.card}>\n              <CardHeader className={classes.cardHeader} title='Gear' />\n              <CardContent>\n                <ReactMarkdown\n                  source={class_details[charaClass].starting_gear_details}\n                />\n                {gearOptions()}\n              </CardContent>\n            </Card>\n            <br />\n            <Button\n              onClick={handleCancel}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Cancel\n            </Button>\n            <Button\n              onClick={handleReset}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Reset\n            </Button>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Back\n            </Button>\n            {gearNext()}\n          </>\n        );\n      case 2:\n        return (\n          <>\n            <Card className={classes.card}>\n              <CardHeader className={classes.cardHeader} title='Class Moves' />\n              <CardContent>{moveOptions()}</CardContent>\n            </Card>\n            <br />\n            <Button\n              onClick={handleCancel}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Cancel\n            </Button>\n            <Button\n              onClick={handleReset}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Reset\n            </Button>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Back\n            </Button>\n            {moveNext()}\n          </>\n        );\n      case 3:\n        return (\n          <>\n            <Card className={classes.abCard}>\n              <CardHeader\n                className={classes.cardHeader}\n                title='Character Abilities'\n              />\n              <CardContent>\n                <p>Assign ability scores: 16, 15, 13, 12, 9, 8</p>\n                <Grid className={classes.root}>\n                  <Grid item xs={12}>\n                    <Grid container justify='center' spacing={1}>\n                      {charaAbilities.map((ability, index) => {\n                        return (\n                          <Grid item key={index}>\n                            <Card>\n                              <CardContent className={classes.abCardContent}>\n                                <p className={classes.abTitle}>\n                                  {ability.category}\n                                </p>\n                                <TextField\n                                  type='number'\n                                  variant='outlined'\n                                  error={validateScore()}\n                                  size='small'\n                                  margin='none'\n                                  name={ability.category + 'Score'}\n                                  value={ability.score}\n                                  className={classes.abTextField}\n                                  inputProps={{\n                                    style: { textAlign: 'center' },\n                                    min: 1,\n                                    max: 18,\n                                  }}\n                                  onChange={(e) =>\n                                    updateAbilityScore(index, e.target.value)\n                                  }\n                                />\n                                <br />\n                                <TextField\n                                  variant='outlined'\n                                  name={ability.category + 'Modifier'}\n                                  value={abilityModifier(\n                                    ability.score,\n                                    ability.afflicted\n                                  )}\n                                  InputProps={{ readOnly: true }}\n                                  inputProps={{\n                                    style: {\n                                      textAlign: 'center',\n                                      fontWeight: 'bold',\n                                      fontSize: 25,\n                                    },\n                                  }}\n                                  className={classes.abTextField}\n                                />\n                                <br />\n                                <Button\n                                  onClick={() => {\n                                    updateAbilityAfflicted(index);\n                                  }}\n                                  className={classes.abButton}>\n                                  {afflictedValue(\n                                    ability.category,\n                                    ability.afflicted\n                                  )}\n                                </Button>\n                              </CardContent>\n                            </Card>\n                          </Grid>\n                        );\n                      })}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n            <br />\n            <Button\n              onClick={handleCancel}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Cancel\n            </Button>\n            <Button\n              onClick={handleReset}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Reset\n            </Button>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Back\n            </Button>\n            <Button\n              disabled={validateScore()}\n              className={classes.button}\n              variant='contained'\n              onClick={handleNext}\n              color='primary'>\n              Next\n            </Button>\n          </>\n        );\n      case 4:\n        return (\n          <>\n            <Card className={classes.card}>\n              <CardHeader className={classes.cardHeader} title='Bonds' />\n              <CardContent>\n                <FormControl\n                  component='fieldset'\n                  className={classes.formControl}>\n                  <FormLabel component='legend'>\n                    Choose some optionally suggested bonds or you can create\n                    your own!\n                  </FormLabel>\n                  <br />\n                  <FormGroup>\n                    {charaClass &&\n                      class_details[charaClass].suggested_bonds.map(\n                        (data, index) => {\n                          return (\n                            <FormControlLabel\n                              key={index}\n                              control={\n                                <Checkbox\n                                  key={index}\n                                  onChange={handleBondChange}\n                                  color='primary'\n                                  name={data}\n                                />\n                              }\n                              label={data}\n                            />\n                          );\n                        }\n                      )}\n                  </FormGroup>\n                </FormControl>\n              </CardContent>\n            </Card>\n            <br />\n            <Button\n              onClick={handleCancel}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Cancel\n            </Button>\n            <Button\n              onClick={handleReset}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Reset\n            </Button>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.button}\n              variant='contained'\n              color='primary'>\n              Back\n            </Button>\n            {campaignURL ? (\n              <Button\n                className={classes.button}\n                variant='contained'\n                color='primary'\n                onClick={handleSave}\n                startIcon={<Save />}>\n                Create Character\n              </Button>\n            ) : (\n              <Button\n                disabled\n                variant='contained'\n                color='primary'\n                onClick={handleSave}\n                startIcon={<Save />}>\n                Create Character\n              </Button>\n            )}\n          </>\n        );\n      default:\n        return 'Unknown stepIndex';\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Breadcrumbs aria-label='breadcrumb'>\n          <Link to='/dw-react'>Home</Link>\n          <Link to={'/dw-react/' + campaignURL}>{campaignURL}</Link>\n          <p>Create Character</p>\n        </Breadcrumbs>\n      </div>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <Grid\n        container\n        spacing={0}\n        direction='column'\n        alignItems='center'\n        justify='center'>\n        <Grid item xs={12}>\n          {getStepContent(activeStep)}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport DarkState from 'components/contexts/DarkState';\nimport { Container, Typography } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport ErrorPage from 'components/ErrorPage';\nimport Homepage from 'components/homepage/Homepage';\nimport AppHeader from 'components/AppHeader';\nimport CharacterSheet from 'components/character/CharacterSheet';\nimport Campaign from 'components/campaign/Campaign';\nimport CreateCharacter from 'components/character/CreateCharacter';\nimport '@fontsource/roboto';\n\nexport default function App() {\n  const [darkState, setDarkState] = useState(false);\n  const palletType = darkState ? 'dark' : 'light';\n  //const mainPrimaryColor = darkState ? orange[500] : lightBlue[500];\n  //const mainSecondaryColor = darkState ? deepOrange[900] : deepPurple[500];\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      //primary: {\n      //  main: mainPrimaryColor,\n      //},\n      //secondary: {\n      //  main: mainSecondaryColor,\n      //},\n    },\n  });\n\n  const ctx = useMemo(() => ({ darkState, setDarkState }), [darkState]); //Memo-ised state for performance\n\n  return (\n    <DarkState.Provider value={ctx}>\n      <ThemeProvider theme={darkTheme}>\n        <Typography component={'span'}>\n          <AppHeader />\n          <Container>\n            <Router>\n              <Switch>\n                <Route exact={true} path='/dw-react' component={Homepage} />\n                <Route\n                  exact={true}\n                  path='/dw-react/:campaignURL'\n                  component={Campaign}\n                />\n                <Route\n                  exact={true}\n                  path='/dw-react/:campaignURL/create-character'\n                  component={CreateCharacter}\n                />\n                <Route\n                  exact={true}\n                  path='/dw-react/:campaignURL/:characterURL'\n                  component={CharacterSheet}\n                />\n                <Route component={ErrorPage} />\n              </Switch>\n            </Router>\n          </Container>\n        </Typography>\n      </ThemeProvider>\n    </DarkState.Provider>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport * as FirebaseService from 'services/firebase';\nimport AuthState from 'components/contexts/AuthState';\nimport { Button } from '@material-ui/core';\n\nfunction Index() {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const ctx = useMemo(() => ({ currentUser }), [currentUser]);\n\n  useEffect(() => {\n    const unsubscribe = FirebaseService.auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n\n  return (\n    <AuthState.Provider value={ctx}>\n      {currentUser ? (\n        <App />\n      ) : (\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={FirebaseService.SignInWithGoogle}>\n          SIGN IN WITH GOOGLE\n        </Button>\n      )}\n    </AuthState.Provider>\n  );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Index />, rootElement);\n"],"sourceRoot":""}