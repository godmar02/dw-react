{"version":3,"sources":["components/ErrorPage.js","services/firebase.js","components/contexts/CreateCampaignState.js","components/contexts/AuthState.js","components/CreateCampaign.js","components/Homepage.js","components/NavSidebar.js","components/contexts/ProfileState.js","components/profile/ProfilePicture.js","components/profile/ProfileDetails.js","components/profile/UserProfile.js","components/AppHeader.js","components/contexts/CharacterState.js","components/character/CharacterSheetHeader.js","components/character/CharacterDetailsTable.js","components/character/CharacterTypeTable.js","components/character/CharacterDamage.js","components/character/CharacterArmour.js","components/character/CharacterFunds.js","components/character/CharacterHP.js","components/character/CharacterLevel.js","components/character/CharacterXP.js","components/character/CharacterBasicAttributesTable.js","components/character/CharacterAbilitiesTable.js","components/character/CharacterBondsTable.js","components/character/CharacterItemsTable.js","components/character/CharacterClassFeaturesTable.js","components/character/CharacterStandardMoves.js","components/character/CharacterAdvancedMoves.js","components/character/CharacterClassMoves.js","components/character/CharacterSheet.js","components/contexts/CampaignState.js","components/campaign/CampaignSheetHeader.js","components/contexts/CreateCharacterState.js","components/campaign/CreateCharacter.js","components/campaign/CampaignDetails.js","components/campaign/CampaignSheet.js","components/App.js","index.js"],"names":["ErrorPage","firebase","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","provider","GoogleAuthProvider","SignInWithGoogle","signInWithPopup","setCustomParameters","prompt","CreateCampaignState","React","createContext","AuthState","CreateCampaign","useState","campaignName","setCampaignName","useContext","show","setShow","currentUser","saveCampaign","campaign","owner","email","collection","doc","set","then","console","info","catch","error","alert","style","id","htmlFor","TextField","multiline","fullWidth","variant","aria-label","placeholder","name","onChange","event","target","value","Button","color","onClick","Homepage","campaigns","setCampaigns","useEffect","observer","next","querySnapshot","updatedCampaignList","docs","map","docSnapshot","data","onSnapshot","deleteCampaign","delete","log","Provider","Breadcrumbs","to","colSpan","Add","index","Delete","NavSidebar","ProfileState","ProfilePicture","Avatar","className","src","photoURL","alt","ProfileDetails","displayName","FirebaseService","signOut","UserProfile","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","AppHeader","classes","AppBar","position","Toolbar","IconButton","edge","Typography","CharacterState","CharacterSheetHeader","useParams","campaignURL","characterURL","CharacterDetailsTable","character","setCharacter","fullName","backstory","look","formControl","margin","minWidth","selectEmpty","marginTop","CharacterTypeTable","dwc","dwClass","alig","alignment","race","FormControl","Select","tabIndex","MenuItem","disabled","hidden","dwClasses","key","races","InputProps","readOnly","classDetails","raceAttributes","alignments","alignmentAttributes","CharacterDamage","label","damage","CharacterArmour","type","min","armour","CharacterFunds","funds","CharacterHP","hp","abilities","baseHp","parseInt","find","x","category","score","CharacterLevel","level","CharacterXP","xp","CharacterBasicAttributesTable","CharacterAbilitiesTable","updateAbilityScore","e","newAbilities","updateAbilityAffliction","affliction","abilityModifier","abilityScore","abilityAffliction","baseModifier","indexOf","modifier","max","ab","abilityAfflictions","CharacterBondsTable","updateBond","newBonds","bonds","bond","addBondsRow","length","splice","deleteBondRow","CharacterItemsTable","updateItem","newItems","items","item","updateItemWeight","weight","addItemRow","deleteItemRow","reduce","totalLoad","str","baseLoad","maxLoad","CharacterClassFeaturesTable","updateFeatureCheckbox","newFeatures","classFeatures","checkbox","checked","updateFeature","feature","addFeatureRow","Checkbox","deleteFeatureRow","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","CharacterStandardMoves","standardMoves","Accordion","AccordionSummary","expandIcon","AccordionDetails","dangerouslySetInnerHTML","__html","description","CharacterAdvancedMoves","advancedMoves","CharacterClassMoves","classMoves","startingMoves","TabPanel","props","children","other","role","aria-labelledby","Box","p","a11yProps","backgroundColor","palette","background","paper","CharacterSheet","setValue","isSaving","setIsSaving","documentSnapshot","debouncedSave","useCallback","callback","delay","timer","args","clearTimeout","setTimeout","debounce","DEBOUNCE_SAVE_DELAY_MS","Object","keys","Tabs","newValue","Tab","CampaignState","CampaignSheetHeader","CreateCharacterState","CreateCharacter","charaName","setCharaName","saveCharacter","CampaignDetails","deleteCharacter","characterData","CampaignSheet","setCampaign","updatedCharacterList","App","Container","exact","path","component","Index","setCurrentUser","onAuthStateChanged","user","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e7c8b3bd.chunk.js","sourcesContent":["import React from 'react';\n\nfunction ErrorPage() {\n  return (\n      <h1>Oops! Page not found!</h1>\n    );\n}\n\nexport default ErrorPage;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Initialise Firebase and setting up firestore and auth for use later\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\n\n// Authenticate with Firebase-auth using the Google provider object\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport function SignInWithGoogle() {\n  auth.signInWithPopup(provider)\n};\n\n// Firestore operations\n\n// Create new blank campaign\nexport function createCampaign(campaign,owner) {\n  return db.collection(\"campaigns\")\n    .doc(campaign).set({owner: owner})\n};\n\n// Create new blank character\nexport function createCharacter(campaign,charaName,owner) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .doc(charaName)\n    .set({\n      abilities: [\n        {category: \"STR\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"DEX\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"CON\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"INT\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"WIS\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"CHA\", score: \"1\", affliction: \"Unafflicted\"}\n      ],\n      alignment: \"\",\n      armour: \"\",\n      backstory: \"\",\n      bonds: [\n        {bond: \"\"},\n      ],\n      classFeatures: [\n        {feature: \"\", checkbox: false}\n      ],\n      dwClass: \"\",\n      fullName: \"\",\n      funds: \"\",\n      hp: \"\",\n      items: [\n        {item: \"\", weight: \"\"},\n      ],\n      level: \"\",\n      look: \"\",\n      owner: owner,\n      race: \"\",\n      xp: \"\"\n    });\n};\n// Save Character\nexport function saveCharacter(campaign, character, data) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .doc(character)\n    .set(data);\n};\n\n// Stream Campaign Data (all Campaigns)\nexport function streamCampaigns(observer) {\n  return db.collection(\"campaigns\")\n    .onSnapshot(observer);\n};\n// Stream Character Data (all Characters)\nexport function streamCharacters(campaign, observer) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .onSnapshot(observer);\n};\n// Stream Character Data (selected Characters)\nexport function streamCharacter(campaign, character, observer) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .doc(character)\n    .onSnapshot(observer);\n};\n// Delete Campaign\nexport function deleteCampaign(campaign) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .delete()\n};\n// Delete Characters\nexport function deleteCharacter(campaign, character) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .doc(character)\n    .delete()\n};\n\n// Default Export\nexport default firebase;\n","import React from 'react';\n\nconst CreateCampaignState = React.createContext();\n\nexport default CreateCampaignState;\n","import React from 'react';\n\nconst AuthState = React.createContext(null);\n\nexport default AuthState;\n","import React, {useState,useContext} from 'react';\nimport * as FirebaseService from 'services/firebase';\nimport CreateCampaignState from 'components/contexts/CreateCampaignState';\nimport AuthState from 'components/contexts/AuthState';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CreateCampaign() {\n\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [show,setShow] = useContext(CreateCampaignState);\n  const [currentUser] = useContext(AuthState);\n  const toggleSetShow = () => setShow(!show);\n\n  // Create New Character\n  const saveCampaign = () => {\n    if (campaignName) { //don't save unless details present\n      FirebaseService.createCampaign(campaignName,currentUser.email)\n      .then(() => {\n        console.info('Created Campaign:', campaignName);\n        toggleSetShow();\n      })\n      .catch((error) => {\n        alert(\"Failed to create campaign, see console error\");\n        console.error(\"Error creating document:\", error);\n      });\n    } else {\n      alert('Cannot save blank campaign');\n    }\n  }\n\n  return (\n  <>\n  <table style={{\"width\" : \"100%\"}} id=\"basicInfoTable\">\n    <tbody>\n      <tr>\n        <th style={{\"width\" : \"25%\"}}>\n          <label htmlFor=\"campName\">CAMPAIGN NAME</label>\n        </th>\n        <td>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            placeholder=\"Add your new Campaign Name, you wont be able to change this one saved\" name=\"campName\"\n            onChange={event => setCampaignName(event.target.value)}/>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <Button variant=\"contained\" color=\"primary\" onClick={() => saveCampaign()}>Save Campaign</Button>\n  </>\n);\n}\n\nexport default CreateCampaign;\n","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport * as FirebaseService from 'services/firebase';\nimport CreateCampaign from 'components/CreateCampaign';\nimport CreateCampaignState from 'components/contexts/CreateCampaignState';\nimport { Add, Delete } from '@material-ui/icons';\nimport {Breadcrumbs} from '@material-ui/core';\n\nfunction Homepage() {\n\n  // Definitions for state\n  const [campaigns, setCampaigns] = useState({});\n  const [show, setShow] = useState(false);\n  const toggleSetShow = () => setShow(!show);\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    const unsubscribe = FirebaseService.streamCampaigns({\n      next: querySnapshot => {\n        const updatedCampaignList = querySnapshot.docs.map((docSnapshot) => {\n          return ({id: docSnapshot.id, owner: docSnapshot.data().owner})\n        });\n        setCampaigns(campaign => ({campaigns: updatedCampaignList}));\n      },\n      error: (error) => {\n        alert(\"Failed to load data correctly, see console error\");\n        console.error(\"Error loading data:\", error);\n      }\n    });\n    return unsubscribe;\n  }, [setCampaigns]);\n\n  const deleteCampaign = (campaignName) => {\n    if (campaignName) { //don't save unless details present\n      FirebaseService.deleteCampaign(campaignName).then(() => {\n        console.info('Deleted Campaign:', campaignName);\n      }).catch((error) => {\n        alert(\"Failed to delete campaign, see console error\");\n        console.error(\"Error deleting document:\", error);\n      });\n    } else {\n      alert('Cannot delete blank campaign');\n    }\n  }\n\n  console.log(\"Campaigns State:\", campaigns)\n\n  return (\n    <CreateCampaignState.Provider value={[show, setShow]}>\n    <div>\n    <Breadcrumbs><Link to=\"/dw-react\">Home</Link></Breadcrumbs>\n    <h1>Campaign Homepage</h1>\n    <table>\n      <thead>\n        <tr>\n          <th colSpan=\"2\">CAMPAIGNS</th>\n          <th>\n            <Add onClick={() => toggleSetShow()}/>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          campaigns.campaigns && campaigns.campaigns.map((campaign, index) => {\n            return (<tr key={index}>\n              <td>\n                <Link to={\"/dw-react/\" + campaign.id}>{campaign.id}</Link>\n              </td>\n              <td>\n                ({campaign.owner})\n              </td>\n              <td>\n                <Delete onClick={() => deleteCampaign(campaign.id)} />\n              </td>\n            </tr>)\n          })\n        }</tbody>\n    </table>\n      {\n        show\n          ? <CreateCampaign/>\n          : null\n      }\n    </div>\n    </CreateCampaignState.Provider>\n);\n}\n\nexport default Homepage;\n","import React from 'react';\n\nfunction NavSidebar() {\n  return (\n    <div>\n    </div>);\n}\n\nexport default NavSidebar\n","import React from 'react';\n\nconst ProfileState = React.createContext();\n\nexport default ProfileState;\n","import React, {useContext} from 'react';\nimport AuthState from 'components/contexts/AuthState';\nimport ProfileState from 'components/contexts/ProfileState';\nimport Avatar from '@material-ui/core/Avatar';\n\nfunction ProfilePicture() {\n\n  const [currentUser] = useContext(AuthState);\n  const [show,setShow] = useContext(ProfileState);\n  const toggleSetShow = () => setShow(!show);\n\n  return (<Avatar\n    className=\"profPicture\"\n    id=\"userPicture\"\n    src={currentUser.photoURL}\n    alt=\"Google Profile\"\n    onClick={() => toggleSetShow()}\n    />);\n}\n\nexport default ProfilePicture;\n","import React, {useContext} from 'react';\nimport AuthState from 'components/contexts/AuthState';\nimport * as FirebaseService from 'services/firebase';\nimport ProfileState from 'components/contexts/ProfileState';\nimport Button from '@material-ui/core/Button';\n\nfunction ProfileDetails() {\n\n  const [currentUser] = useContext(AuthState);\n  const [show,setShow] = useContext(ProfileState);\n  const toggleSetShow = () => setShow(!show);\n\n    return (\n      <div className=\"profDetails\">\n        <div>Google Account</div>\n        <div id=\"userName\">{currentUser.displayName}</div>\n        <div id=\"userEmail\">{currentUser.email}</div>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => FirebaseService.auth.signOut()}>LOG OUT</Button>\n      </div>\n    );\n}\n\nexport default ProfileDetails;\n","import React, {useContext,useState} from 'react';\nimport ProfilePicture from 'components/profile/ProfilePicture';\nimport ProfileDetails from 'components/profile/ProfileDetails';\nimport ProfileState from 'components/contexts/ProfileState';\n\nfunction UserProfile() {\n\n  const [show, setShow] = useState(false);\n\n  return (\n<ProfileState.Provider value={[show, setShow]}>\n    <div>\n    <ProfilePicture/>\n    {\n      show\n        ? <ProfileDetails/>\n        : null\n    }\n  </div>\n</ProfileState.Provider>);\n}\n\nexport default UserProfile;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport UserProfile from 'components/profile/UserProfile';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction AppHeader() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Dungeon World Character Sheet (v0.10.0 by Godmar02)\n          </Typography>\n          <UserProfile/>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default AppHeader;\n","import React from 'react';\n\nconst CharacterState = React.createContext([{}, () => {}]);\n\nexport default CharacterState;\n","import React, {useContext} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useParams} from 'react-router';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {Breadcrumbs} from '@material-ui/core';\n\nfunction CharacterSheetHeader() {\n\n  // Definitions for state\n  const [character] = useContext(CharacterState);\n\n  // retrieve URL parameters for usage\n  const {campaignURL, characterURL} = useParams();\n\n  return (\n  <>\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <Link to=\"/dw-react\">Home</Link>\n      <Link to={\"/dw-react/\" + campaignURL}>{campaignURL}</Link>\n      <p>\n        {characterURL}</p>\n    </Breadcrumbs>\n      <h1>{characterURL}</h1>\n    </>);\n}\n\nexport default CharacterSheetHeader;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CharacterDetailsTable() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  return (<table style={{\"width\" : \"100%\"}} id=\"basicInfoTable\">\n    <tbody>\n      <tr>\n        <th style={{\"width\" : \"25%\"}}>\n          <label htmlFor=\"fullName\">FULL NAME</label>\n        </th>\n        <td>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            placeholder=\"Add your characters full name here\"\n            value={character.fullName}\n            name=\"fullName\"\n            onChange={event => setCharacter(character => ({...character,fullName: event.target.value}))}/>\n        </td>\n      </tr>\n      <tr>\n        <th style={{\"width\" : \"25%\"}}>\n          <label htmlFor=\"backstory\">BACKSTORY</label>\n        </th>\n        <td>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            placeholder=\"Describe your character's backstory and anything else about your characters identity here\"\n            value={character.backstory}\n            name=\"backstory\"\n            onChange={event => setCharacter(character => ({...character,backstory: event.target.value}))}/>\n        </td>\n      </tr>\n      <tr>\n        <th style={{\"width\" : \"25%\"}}>\n          <label htmlFor=\"look\">LOOK</label>\n        </th>\n        <td>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            placeholder=\"Describe your character's appearance here\"\n            name=\"look\"\n            value={character.look}\n            onChange={event => setCharacter(character => ({...character,look: event.target.value}))}/>\n        </td>\n      </tr>\n    </tbody>\n  </table>);\n}\n\nexport default CharacterDetailsTable;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {races} from 'data/raceList';\nimport {dwClasses} from 'data/classList';\nimport {alignments} from 'data/classAlignments';\nimport {classDetails} from 'data/classDetails';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction CharacterTypeTable() {\n\n  const classes = useStyles();\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n  const dwc = character.dwClass;\n  const alig = character.alignment;\n  const race = character.race;\n\n  const raceAttributes = () => {\n    if (character.dwClass && character.race) {\n      return (classDetails.[dwc].raceAttributes.[race]);\n    } else {\n      return ('');\n    }\n  };\n\n  const alignmentAttributes = () => {\n    if (character.dwClass && character.alignment) {\n      return (classDetails.[dwc].alignmentAttributes.[alig]);\n    } else {\n      return ('');\n    }\n  };\n\n  return (\n  <table style={{\"width\" : \"100%\"}} id=\"additionalInfoTable\">\n    <tbody>\n      <tr>\n        <th>\n          <label style={{\"width\" : \"25%\"}} htmlFor=\"dwClass\">CLASS</label>\n        </th>\n        <td style={{\"width\" : \"25%\"}}>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Select\n            tabIndex={-1}\n            value={character.dwClass || \"null\"}\n            onChange={event => {\n              setCharacter(character => ({...character,dwClass: event.target.value}));\n              setCharacter(character => ({...character,alignment: \"null\"}))}}>\n            <MenuItem disabled value=\"null\" hidden />\n            {\n              dwClasses.map((data, key) => {\n                return (\n                <MenuItem value={data} key={key}>\n                  {data}\n                </MenuItem>);\n              })\n            }\n          </Select>\n          </FormControl>\n        </td>\n        <td style={{\"width\" : \"50%\"}}/>\n      </tr>\n      <tr>\n        <th>\n          <label htmlFor=\"race\">RACE</label>\n        </th>\n        <td>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Select\n            tabIndex={-1}\n            value={character.race || \"null\"}\n            name=\"race\"\n            onChange={event => setCharacter(character => ({...character,race: event.target.value}))}>\n            <MenuItem disabled value=\"null\" hidden />\n            {\n              races.map((data, key) => {\n                return (\n                <MenuItem value={data} key={key}>\n                  {data}\n                </MenuItem>);\n              })\n            }\n          </Select>\n          </FormControl>\n        </td>\n        <td>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            className=\"grey\"\n            name=\"raceAttributes\"\n            InputProps={{\n              readOnly: true,\n            }}\n            value={raceAttributes()}/>\n        </td>\n      </tr>\n      <tr>\n        <th>\n          <label htmlFor=\"alignment\">ALIGNMENT</label>\n        </th>\n        <td>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Select\n            tabIndex={-1}\n            value={character.alignment || \"null\"}\n            name=\"alignment\"\n            onChange={event => setCharacter(character => ({...character,alignment: event.target.value}))}>\n            <MenuItem disabled value=\"null\" hidden />\n            {\n              character.dwClass && dwc && alignments.[dwc].map((data, key) => {\n              return (\n              <MenuItem value={data} key={key}>\n                {data}\n              </MenuItem>);})\n            }\n          </Select>\n        </FormControl>\n        </td>\n        <td>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            className=\"grey\"\n            name=\"alignmentAttribute\"\n            InputProps={{\n              readOnly: true,\n            }}\n            value={alignmentAttributes()}/>\n        </td>\n      </tr>\n    </tbody>\n  </table>);\n}\n\nexport default CharacterTypeTable;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {classDetails} from 'data/classDetails';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CharacterDamage() {\n\n  // State Variables\n  const [character] = useContext(CharacterState);\n  const dwc = character.dwClass;\n\n  const damage = () => {\n    if (character.dwClass) {\n      return (classDetails.[dwc].damage);\n    } else {\n      return ('');\n    }\n  };\n\n  return (\n    <table id=\"damage\">\n      <tbody>\n        <tr>\n          <td>\n            <TextField\n              variant=\"outlined\"\n              className=\"shortfield grey\"\n              name=\"damage\"\n              label=\"Damage\"\n              InputProps={{\n                readOnly: true,\n              }}\n              value={damage()}/>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\nexport default CharacterDamage;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CharacterArmour() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  return (\n    <table id=\"armour\">\n      <tbody>\n        <tr>\n          <td>\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              label=\"Armour\"\n              min={0}\n              className=\"shortfield\"\n              name=\"armour\" value={character.armour || ''} onChange={event => setCharacter(character => ({...character,armour: event.target.value}))}/>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default CharacterArmour;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CharacterFunds() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  return (\n    <table id=\"funds\">\n      <tbody>\n        <tr>\n          <td>\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              name=\"funds\"\n              label=\"Funds\"\n              min={0}\n              value={character.funds || ''}\n              onChange={event => setCharacter(character => ({...character,funds: event.target.value}))}/>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default CharacterFunds;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {classDetails} from 'data/classDetails';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CharacterHP() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  const dwc = character.dwClass;\n  const maxHp = () => {\n    if (character.dwClass && character.abilities) {\n      return (\"/ \" + (classDetails.[dwc].baseHp + parseInt(character.abilities.find(x => x.category === 'CON').score ,10)));\n    } else {\n      return ('');\n    }\n  };\n\n  return (\n    <table id=\"hp\">\n      <tbody>\n        <tr>\n          <td>\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              label=\"HP\"\n              min={0}\n              className=\"shortfield\"\n              name=\"hp\"\n              value={character.hp || ''}\n              onChange={event => setCharacter(character => ({...character,hp: event.target.value}))}/>\n          </td>\n          <td>\n            <TextField\n              variant=\"outlined\"\n              className=\"shortfield grey\"\n              label=\"Max HP\"\n              name=\"maxHp\"\n              InputProps={{\n                readOnly: true,\n              }}\n              value={maxHp()} />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default CharacterHP;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CharacterLevel() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <td>\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              label=\"Level\"\n              min={1}\n              className=\"shortfield\"\n              name=\"level\"\n              value={character.level || ''}\n              onChange={event => setCharacter(character => ({...character,level: event.target.value}))}/>\n          </td>\n        </tr>\n      </tbody>\n    </table>);\n}\n\nexport default CharacterLevel;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CharacterXP() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  // Total Load\n  const calcMaxXp = () => {\n    if (character.level) {\n      return (\"/ \" + (parseInt(character.level,10) + 7));\n    } else {\n      return ('');\n    }\n  };\n\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <td>\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              label=\"XP\"\n              min={0}\n              className=\"shortfield\"\n              name=\"xp\"\n              value={character.xp || ''}\n              onChange={event => setCharacter(character => ({...character,xp: event.target.value}))}/>\n          </td>\n          <td>\n            <TextField\n              variant=\"outlined\"\n              className=\"shortfield grey\"\n              label=\"Max XP\"\n              name=\"maxXp\"\n              InputProps={{\n                readOnly: true,\n              }}\n              value={calcMaxXp()} />\n          </td>\n        </tr>\n      </tbody>\n    </table>);\n}\n\nexport default CharacterXP;\n","import React from 'react';\nimport CharacterDamage from 'components/character/CharacterDamage'\nimport CharacterArmour from 'components/character/CharacterArmour'\nimport CharacterFunds from 'components/character/CharacterFunds'\nimport CharacterHP from 'components/character/CharacterHP'\nimport CharacterLevel from 'components/character/CharacterLevel'\nimport CharacterXP from 'components/character/CharacterXP'\n\nfunction CharacterBasicAttributesTable() {\n\n  return (\n  <div className='myForm'>\n    <div><CharacterLevel/></div>\n    <div><CharacterXP/></div>\n    <div><CharacterDamage/></div>\n    <div><CharacterArmour/></div>\n    <div><CharacterFunds/></div>\n    <div><CharacterHP/></div>\n  </div>);\n}\n\nexport default CharacterBasicAttributesTable;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {abilityAfflictions} from 'data/abilityAfflictions';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction CharacterAbilitiesTable() {\n\n  const classes = useStyles();\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  const updateAbilityScore = index => e => {\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {...character.abilities[index], score: e.target.value}; // replace value\n    setCharacter(character => ({...character, abilities: newAbilities})); // set array back\n  }\n\n  const updateAbilityAffliction = index => e => {\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {...character.abilities[index], affliction: e.target.value}; // replace value\n    setCharacter(character => ({...character, abilities: newAbilities})); // set array back\n  }\n\n  const abilityModifier = (abilityScore, abilityAffliction) => {\n\n    if (abilityScore && abilityAffliction) {\n    let baseModifier;\n    let afflicted;\n\n    abilityScore = parseInt(abilityScore,10);\n\n    if ([1, 2, 3].indexOf(abilityScore) > -1) {\n      baseModifier = -3;\n    } else if ([4, 5].indexOf(abilityScore) > -1) {\n      baseModifier = -2;\n    } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n      baseModifier = -1;\n    } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n      baseModifier = 0;\n    } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n      baseModifier = 1;\n    } else if ([16, 17].indexOf(abilityScore) > -1) {\n      baseModifier = 2;\n    } else if (abilityScore === 18) {\n      baseModifier = 3;\n    }\n\n    /*-1 if afflicted*/\n    if (abilityAffliction === \"Unafflicted\") {\n      afflicted = 0;\n    } else {\n      afflicted = 1;\n    }\n\n    let modifier = (baseModifier - afflicted);\n\n    if (modifier > 0) {\n      return(\"[+\" + modifier+ \"]\");\n    } else {\n      return (\"[\" + modifier + \"]\");\n    }\n  } else {\n    return ('')\n  }\n  }\n\n  return (\n     <table style={{\"width\":\"100%\"}} id=\"abilitiesTable\">\n       <thead>\n         <tr>\n           {\n            character.abilities && character.abilities.map((abilities, index) => {\n            return (\n              <th key={index}>\n                <label\n                  htmlFor={abilities.category}\n                  value={abilities.category}\n                  name={abilities.category}>\n                  {abilities.category}\n                </label>\n              </th>)\n           })\n         }\n         </tr>\n       </thead>\n       <tbody>\n         <tr>\n           {\n            character.abilities && character.abilities.map((abilities, index) => {\n            return (\n              <td key={index}>\n                <TextField\n                  type=\"number\"\n                  variant=\"outlined\"\n                  min={1} max={18}\n                  className=\"ability\"\n                  name={abilities.category + \"Score\"}\n                  value={abilities.score}\n                  onChange={updateAbilityScore(index)} />\n            </td>)\n           })\n         }\n         </tr>\n         <tr>\n           {\n            character.abilities && character.abilities.map((abilities, index) => {\n            return (\n              <td key={index}>\n                <TextField variant=\"outlined\"\n                  className=\"grey tallfield\"\n                  name={abilities.category + \"Modifier\"}\n                  value={abilityModifier(abilities.score, abilities.affliction)}\n                  InputProps={{\n                    readOnly: true,\n                  }} />\n            </td>)\n           })\n         }\n         </tr>\n         <tr>\n           {\n            character.abilities && character.abilities.map((abilities,index) => {\n            const ab = abilities.category;\n            return (\n              <td key={index}>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                <Select\n                  tabIndex={-1}\n                  value={abilities.affliction || \"null\"}\n                  name={abilities.category + \"Affliction\"}\n                  onChange={updateAbilityAffliction(index)}>\n                  <MenuItem disabled value=\"null\" hidden />\n                    {\n                      abilityAfflictions.[ab].map((data, key) => {\n                        return (\n                        <MenuItem value={data} key={key}>\n                          {data}\n                        </MenuItem>);\n                      })\n                    }\n                </Select>\n              </FormControl>\n              </td>)\n           })\n         }\n         </tr>\n       </tbody>\n     </table>\n    );\n}\n\nexport default CharacterAbilitiesTable;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { Add, Delete } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CharacterBondsTable() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  // State manipulation\n  const updateBond = index => e => {\n    let newBonds = [...character.bonds]; // copying the old array\n    newBonds[index] = {...character.bonds[index], bond: e.target.value}; // replace value\n    setCharacter(character => ({...character, bonds: newBonds})); // set array back\n  }\n\n  // Delete rows in the table\n  const deleteBondRow = index => {\n    const newBonds = [...character.bonds]; // copying the old array\n    if (character.bonds.length !== 1) { //don't delete last row\n      newBonds.splice(index, 1); // remove item from array\n      setCharacter(character => ({...character, bonds: newBonds})); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  }\n\n  // Add rows in the table\n  const addBondsRow = () => {\n    const newBonds = [...character.bonds, {bond: \"\"}]; // copying the old array and adding blank item\n    setCharacter(character => ({...character, bonds: newBonds})); // set array back\n  }\n\n  return (\n    <table style={{\"width\" : \"100%\"}} id=\"bondsTable\">\n      <thead>\n        <tr>\n          <th style={{\"width\" : \"100%\"}}>\n            <label>BONDS</label>\n          </th>\n          <td>\n            <Add onClick={() => addBondsRow()}/>\n          </td>\n        </tr>\n      </thead>\n      <tbody>\n        {\n         character.bonds && character.bonds.map((bonds,index) => {\n         return (\n           <tr key={index}>\n               <td>\n                 <TextField\n                   multiline\n                   fullWidth\n                   variant=\"outlined\"\n                   aria-label=\"empty textarea\"\n                   placeholder=\"Add 2-3 bonds here\"\n                   value={bonds.bond}\n                   name={\"bond\" + index}\n                   onChange={updateBond(index)}\n                   />\n               </td>\n               <td>\n                 <Delete\n                   onClick={() => deleteBondRow(index)}/>\n               </td>\n           </tr>)\n        })\n      }\n      </tbody>\n      <tfoot/>\n    </table>\n    );\n}\n\nexport default CharacterBondsTable;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {classDetails} from 'data/classDetails';\nimport { Add, Delete } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CharacterItemsTable() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n  const dwc = character.dwClass;\n\n  // Total Load\n  const totalLoad = () => {\n    if (character.items) {\n      return (character.items.reduce((totalLoad,data) => totalLoad + parseInt((data.weight || 0),10) ,0));\n    } else {\n      return ('');\n    }\n  };\n\n  // Max Load\n  const maxLoad = () => {\n\n    if (character.dwClass && character.abilities.find(x => x.category === 'STR').score && character.abilities.find(x => x.category === 'STR').affliction) {\n      let str = character.abilities.find(x => x.category === 'STR');\n      let baseModifier;\n      let abilityAffliction = str.affliction;\n      let abilityScore = parseInt(str.score,10);\n      let afflicted;\n\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\n        baseModifier = -3;\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\n        baseModifier = -2;\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n        baseModifier = -1;\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n        baseModifier = 0;\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n        baseModifier = 1;\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\n        baseModifier = 2;\n      } else if (abilityScore === 18) {\n        baseModifier = 3;\n      }\n\n      /*-1 if afflicted*/\n      if (abilityAffliction === \"Unafflicted\") {\n        afflicted = 0;\n      } else {\n        afflicted = 1;\n      }\n\n      let modifier = (baseModifier - afflicted);\n\n      return (\"/ \" + (classDetails.[dwc].baseLoad + modifier));\n    } else {\n      return ('');\n    }\n  };\n\n  // State manipulation\n  const updateItem = index => e => {\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = {...character.items[index], item: e.target.value}; // replace value\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n\n  const updateItemWeight = index => e => {\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = {...character.items[index], weight: e.target.value}; // replace value\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n\n  // Delete rows in the table\n  const deleteItemRow = index => {\n    const newItems = [...character.items]; // copying the old array\n    if (character.items.length !== 1) { //don't delete last row\n      newItems.splice(index, 1); // remove item from array\n      setCharacter(character => ({...character, items: newItems})); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  }\n\n  // Add rows in the table\n  const addItemRow = () => {\n    const newItems = [...character.items, {item: \"\", weight: \"\"}]; // copying the old array and adding blank item\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n  //,\n\n  return (\n    <table style={{\"width\":\"100%\"}} id=\"itemsTable\">\n      <thead>\n        <tr>\n          <th colSpan={4}><label>GEAR</label></th>\n        </tr>\n        <tr>\n          <th style={{\"width\":\"100%\"}}><label>ITEM</label></th>\n          <th colSpan={2}><label>WEIGHT</label></th>\n          <td>\n            <Add\n              onClick={() => addItemRow()}\n            />\n          </td>\n        </tr>\n      </thead>\n      <tbody>\n        {\n         character.items && character.items.map((items,index) => {\n         return (\n           <tr key={index}>\n               <td>\n                 <TextField\n                   multiline\n                   fullWidth\n                   variant=\"outlined\"\n                   aria-label=\"empty textarea\"\n                   placeholder=\"Add any items and descriptions here\"\n                   value={items.item}\n                   name={\"item\" + index}\n                   onChange={updateItem(index)}/>\n               </td>\n               <td colSpan={2}>\n                 <TextField\n                   type=\"number\"\n                   variant=\"outlined\"\n                   min={0}\n                   value={items.weight}\n                   name={\"itemWeight\" + index}\n                   onChange={updateItemWeight(index)}/>\n               </td>\n               <td>\n                 <Delete\n                   onClick={() => deleteItemRow(index)}/>\n               </td>\n           </tr>)\n        })\n      }\n      </tbody>\n      <tfoot>\n        <tr>\n          <th><label htmlFor=\"load\">LOAD</label></th>\n          <td>\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              className=\"shortfield grey\"\n              name=\"totalLoad\"\n              InputProps={{\n                readOnly: true,\n              }}\n              value={totalLoad()} />\n          </td>\n          <td>\n            <TextField\n              variant=\"outlined\"\n              className=\"shortfield grey\"\n              name=\"maxLoad\"\n              InputProps={{\n                readOnly: true,\n              }}\n              value={maxLoad()} />\n          </td>\n          <td />\n        </tr>\n      </tfoot>\n    </table>\n    );\n}\n\nexport default CharacterItemsTable;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { Add, Delete } from '@material-ui/icons';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CharacterClassFeaturesTable() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  // State manipulation\n  const updateFeatureCheckbox = index => e => {\n    let newFeatures = [...character.classFeatures]; // copying the old array\n    newFeatures[index] = {...character.classFeatures[index], checkbox: e.target.checked}; // replace value\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\n  }\n\n  const updateFeature = index => e => {\n    let newFeatures = [...character.classFeatures]; // copying the old array\n    newFeatures[index] = {...character.classFeatures[index], feature: e.target.value}; // replace value\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\n  }\n\n  // Delete rows in the table\n  const deleteFeatureRow = index => {\n    const newFeatures = [...character.classFeatures]; // copying the old array\n    if (character.classFeatures.length !== 1) { //don't delete last row\n      newFeatures.splice(index, 1); // remove item from array\n      setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  }\n\n  // Add rows in the table\n  const addFeatureRow = () => {\n    const newFeatures = [...character.classFeatures, {feature: \"\", checkbox: false}]; // copying the old array and adding blank item\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\n  }\n\n  return (\n    <table style={{\n        \"width\" : \"100%\"\n      }} id=\"classFeaturesTable\">\n      <thead>\n        <tr>\n          <th colSpan={2} style={{\n              \"width\" : \"100%\"\n            }}>\n            <label>CLASS FEATURES</label>\n          </th>\n          <td>\n            <Add\n              onClick={() => addFeatureRow()}\n            />\n          </td>\n        </tr>\n      </thead>\n      <tbody>\n          {\n           character.classFeatures && character.classFeatures.map((classFeatures,index) => {\n           return (\n             <tr key={index}>\n               <td>\n                 <Checkbox\n                   className=\"checkbox\"\n                   name={\"classFeatureCheckbox\" + index}\n                   checked={!!classFeatures.checkbox}\n                   onChange={updateFeatureCheckbox(index)}\n                   color=\"primary\"\n                   />\n               </td>\n                 <td>\n                   <TextField\n                    multiline\n                    fullWidth\n                    variant=\"outlined\"\n                     aria-label=\"empty textarea\"\n                     placeholder=\"Add any Class Features here (e.g. Spell Lists, Poison Recipes, Druid Balance, Paladin Quests or anything else!)\"\n                     value={classFeatures.feature}\n                     name={\"classFeature\" + index}\n                     onChange={updateFeature(index)}/>\n                 </td>\n                 <td>\n                   <Delete\n                     onClick={() => deleteFeatureRow(index)}/>\n                 </td>\n             </tr>)\n          })\n        }\n      </tbody>\n      <tfoot/>\n    </table>\n    );\n}\n\nexport default CharacterClassFeaturesTable;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {standardMoves} from 'data/movesList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction CharacterStandardMoves() {\n  const classes = useStyles();\n  return (\n  <>\n        {\n          standardMoves.map((data) => {\n            return (\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}>{data.name}\n                </AccordionSummary>\n                <AccordionDetails>\n                      <p dangerouslySetInnerHTML={{__html: data.description }}></p>\n                </AccordionDetails>\n              </Accordion>\n              );\n          })\n        }\n    </>);\n}\n\nexport default CharacterStandardMoves;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {advancedMoves} from 'data/movesList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction CharacterAdvancedMoves() {\n  const classes = useStyles();\n  return (\n  <>\n        {\n          advancedMoves.map((data) => {\n            return (\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}>{data.name}\n                </AccordionSummary>\n                <AccordionDetails>\n                      <p dangerouslySetInnerHTML={{__html: data.description }}></p>\n                </AccordionDetails>\n              </Accordion>\n              );\n        })\n      }\n    </>);\n}\n\nexport default CharacterAdvancedMoves;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {classMoves} from 'data/movesList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction CharacterClassMoves() {\n  const classes = useStyles();\n\n  // State Variables\n  const [character] = useContext(CharacterState);\n  const dwc = character.dwClass;\n\n  return (\n  <>\n        { dwc && classMoves.[dwc].startingMoves.map((data) => {\n          return (\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}>\n                {data.name}\n              </AccordionSummary>\n              <AccordionDetails>\n                    <p dangerouslySetInnerHTML={{__html: data.description }}></p>\n              </AccordionDetails>\n            </Accordion>\n            );\n      })\n    }\n    </>);\n}\n\nexport default CharacterClassMoves;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { useParams } from \"react-router\";\nimport * as FirebaseService from 'services/firebase';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport CharacterSheetHeader from 'components/character/CharacterSheetHeader'\nimport CharacterDetailsTable from 'components/character/CharacterDetailsTable'\nimport CharacterTypeTable from 'components/character/CharacterTypeTable'\nimport CharacterBasicAttributesTable from 'components/character/CharacterBasicAttributesTable'\nimport CharacterAbilitiesTable from 'components/character/CharacterAbilitiesTable'\nimport CharacterBondsTable from 'components/character/CharacterBondsTable'\nimport CharacterItemsTable from 'components/character/CharacterItemsTable'\nimport CharacterClassFeaturesTable from 'components/character/CharacterClassFeaturesTable'\nimport CharacterStandardMoves from 'components/character/CharacterStandardMoves'\nimport CharacterAdvancedMoves from 'components/character/CharacterAdvancedMoves'\nimport CharacterClassMoves from 'components/character/CharacterClassMoves'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\n// Debounce function\nconst debounce = (callback,delay) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => callback(...args),delay);\n  }\n}\n\nfunction CharacterSheet() {\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n\n  // Definitions for state\n  const [character, setCharacter] = useState({});\n  const [isSaving, setIsSaving] = useState(false);\n\n  // retrieve URL parameters for usage\n  const { campaignURL, characterURL } = useParams();\n\n  // Use an effect hook to subscribe to the character stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    if (campaignURL && characterURL) {\n      const unsubscribe = FirebaseService.streamCharacter(campaignURL, characterURL, {\n          next: documentSnapshot => {\n              setCharacter(documentSnapshot.data());\n          },\n          error: (error) => {\n            alert(\"Failed to load character data correctly, see console error\");\n            console.error(\"Error loading document:\", error);\n          }\n      });\n      return unsubscribe;\n    }\n  }, [campaignURL, characterURL, setCharacter]);\n\n  // Saving character\n  const debouncedSave = useCallback(\n    debounce(character =>\n      FirebaseService.saveCharacter(campaignURL, characterURL, character)\n        .then(() => {\n          setIsSaving(false);\n          console.info('Saved Character:', character );\n        })\n        .catch((error) => {\n          alert(\"Failed to save character data correctly, see console error\");\n          console.error(\"Error saving document:\", error);\n          //If saving fails then it will not retry until the error is rectified\n        })\n    , process.env.DEBOUNCE_SAVE_DELAY_MS),[]);\n\n  useEffect(\n    () => {\n      if (character && Object.keys(character).length >= 1) {\n        setIsSaving(true);\n        debouncedSave(character);\n      }\n    }, [character] //Only trigger effect on change of character\n  );\n\n  console.info(\"CharacterState:\",character);\n  console.info(\"isSaving\",isSaving);\n\n  return (\n  <CharacterState.Provider value={[character, setCharacter]}>\n    <CharacterSheetHeader/>\n    <br/>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n        <Tab label=\"Character\" {...a11yProps(0)} />\n        <Tab label=\"Standard Moves\" {...a11yProps(1)} />\n        <Tab label=\"Advanced Moves\" {...a11yProps(2)} />\n        <Tab label=\"Class Moves\" {...a11yProps(3)} />\n      </Tabs>\n      </AppBar>\n    <TabPanel value={value} index={0}>\n      <CharacterDetailsTable/>\n      <br/>\n      <CharacterTypeTable/>\n      <br/>\n      <CharacterBasicAttributesTable/>\n      <br/>\n      <CharacterAbilitiesTable/>\n      <br/>\n      <CharacterBondsTable/>\n      <br/>\n      <CharacterItemsTable/>\n      <br/>\n      <CharacterClassFeaturesTable/>\n    </TabPanel>\n    <TabPanel value={value} index={1}>\n      <CharacterStandardMoves/>\n    </TabPanel>\n    <TabPanel value={value} index={2}>\n      <CharacterAdvancedMoves/>\n    </TabPanel>\n    <TabPanel value={value} index={3}>\n      <CharacterClassMoves/>\n    </TabPanel>\n  </div>\n  </CharacterState.Provider>);\n}\n\nexport default CharacterSheet;\n","import React from 'react';\n\nconst CampaignState = React.createContext([{}, () => {}]);\n\nexport default CampaignState;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useParams} from 'react-router';\nimport {Breadcrumbs} from '@material-ui/core';\n\nfunction CampaignSheetHeader() {\n\n  // retrieve URL parameters for usage\n  const {campaignURL} = useParams();\n\n  return (\n    <div>\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <Link to=\"/dw-react\">Home</Link>\n      <p>{campaignURL}</p>\n    </Breadcrumbs>\n    <h1>{campaignURL}</h1>\n  </div>);\n}\n\nexport default CampaignSheetHeader;\n","import React from 'react';\n\nconst CreateCharacterState = React.createContext();\n\nexport default CreateCharacterState;\n","import React, {useState,useContext} from 'react';\nimport {useParams} from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CreateCharacterState from 'components/contexts/CreateCharacterState';\nimport AuthState from 'components/contexts/AuthState';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nfunction CreateCharacter() {\n\n  const [charaName, setCharaName] = useState(\"\");\n  const [show,setShow] = useContext(CreateCharacterState);\n  const [currentUser] = useContext(AuthState);\n  const {campaignURL} = useParams();\n  const toggleSetShow = () => setShow(!show);\n\n  // Create New Character\n  const saveCharacter = () => {\n    if (campaignURL && charaName) { //don't save unless details present\n      FirebaseService.createCharacter(campaignURL,charaName, currentUser.email)\n      .then(() => {\n        console.info('Created Character:', charaName);\n        toggleSetShow();\n      })\n      .catch((error) => {\n        alert(\"Failed to create character, see console error\");\n        console.error(\"Error creating document:\", error);\n      });\n    } else {\n      alert('Cannot save blank character');\n    }\n  }\n\n  return (\n  <>\n  <table style={{\"width\" : \"100%\"}} id=\"basicInfoTable\">\n    <tbody>\n      <tr>\n        <th style={{\"width\" : \"25%\"}}>\n          <label htmlFor=\"shortName\">SHORT NAME</label>\n        </th>\n        <td>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            placeholder=\"Add your characters short name here, you wont be able to change this one saved\" name=\"shortName\"\n            onChange={event => setCharaName(event.target.value)}/>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <Button variant=\"contained\" color=\"primary\" onClick={() => saveCharacter()}>Save Character</Button>\n  </>\n);\n}\n\nexport default CreateCharacter;\n","import React, {useContext,useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useParams} from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CreateCharacter from 'components/campaign/CreateCharacter';\nimport CreateCharacterState from 'components/contexts/CreateCharacterState';\nimport CampaignState from 'components/contexts/CampaignState';\nimport { Add, Delete } from '@material-ui/icons';\n\nfunction CampaignDetails() {\n\n  // State Variables\n  const [campaign] = useContext(CampaignState);\n  const [show, setShow] = useState(false);\n  const toggleSetShow = () => setShow(!show);\n  // retrieve URL parameters for usage\n  const {campaignURL} = useParams();\n\n  const deleteCharacter = (campaign,character) => {\n    if (campaign && character) { //don't save unless details present\n      FirebaseService.deleteCharacter(campaign,character)\n      .then(() => {\n        console.info('Deleted Character:', character);\n      })\n      .catch((error) => {\n        alert(\"Failed to delete character, see console error\");\n        console.error(\"Error deleting document:\", error);\n      });\n    } else {\n      alert('Cannot delete blank character');\n    }\n  }\n\n  return (\n    <CreateCharacterState.Provider value={[show, setShow]}>\n    <table>\n      <thead>\n        <tr>\n          <th colSpan=\"4\">CHARACTERS</th>\n          <th><Add onClick={() => toggleSetShow()}/></th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          campaign.campaign && campaign.campaign.map((campaign, index) => {\n            return (\n            <tr key={index}>\n              <td><Link to={\"/dw-react/\" + campaignURL + \"/\" + campaign.character}>{campaign.character}</Link></td>\n              <td>({campaign.characterData.owner})</td>\n              <td>HP: {campaign.characterData.hp}</td>\n              <td>XP: {campaign.characterData.xp}</td>\n                <td>\n                  <Delete onClick={() => deleteCharacter(campaignURL, campaign.character)}/>\n                </td>\n            </tr>)\n          })\n        }\n      </tbody>\n    </table>\n      {show\n        ? <CreateCharacter/>\n        : null\n      }\n    </CreateCharacterState.Provider>\n  );\n}\n\nexport default CampaignDetails;\n","import React, {useState, useEffect} from 'react';\nimport {useParams} from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CampaignState from 'components/contexts/CampaignState';\nimport CampaignSheetHeader from 'components/campaign/CampaignSheetHeader';\nimport CampaignDetails from 'components/campaign/CampaignDetails';\n\nfunction CampaignSheet() {\n\n  // Definitions for state\n  const [campaign, setCampaign] = useState({});\n\n  // retrieve URL parameters for usage\n  const {campaignURL} = useParams();\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    if (campaignURL) {\n      const unsubscribe = FirebaseService.streamCharacters(campaignURL, {\n        next: querySnapshot => {\n          //const updatedCharacterList = querySnapshot.docs.map((docSnapshot) => { return(docSnapshot.data())});\n          const updatedCharacterList = querySnapshot.docs.map((docSnapshot) => { return({character: docSnapshot.id , characterData: docSnapshot.data()})});\n          setCampaign(campaign => ({campaign: updatedCharacterList}));\n        },\n        error: (error) => {\n          alert(\"Failed to load campaign data correctly, see console error\");\n          console.error(\"Error loading document:\", error);\n        }\n      });\n      return unsubscribe;\n    }\n  }, [campaignURL, setCampaign]);\n\n  console.info(\"Campaign State:\", campaign);\n\n  return (\n  <CampaignState.Provider value={[campaign, setCampaign]}>\n    <CampaignSheetHeader />\n    <br/>\n    <CampaignDetails/>\n  </CampaignState.Provider>);\n}\n\nexport default CampaignSheet;\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ErrorPage from 'components/ErrorPage'\nimport Homepage from 'components/Homepage';\nimport NavSidebar from 'components/NavSidebar';\nimport AppHeader from 'components/AppHeader';\nimport CharacterSheet from 'components/character/CharacterSheet';\nimport CampaignSheet from 'components/campaign/CampaignSheet';\nimport Container from \"@material-ui/core/Container\";\nimport \"@fontsource/roboto\"\nimport Typography from '@material-ui/core/Typography';\n\nfunction App() {\n\n  return (<>\n    <Typography>\n    <Container>\n    <Router>\n      <AppHeader/>\n      <NavSidebar/>\n      <Switch>\n        <Route exact path=\"/dw-react/:campaignURL/:characterURL\" component={CharacterSheet} />\n        <Route exact path=\"/dw-react/:campaignURL\" component={CampaignSheet} />\n        <Route exact path=\"/dw-react\" component={Homepage} />\n        <Route component={ErrorPage} />\n      </Switch>\n    </Router>\n    </Container>\n  </Typography>\n  </>)\n}\n\nexport default App;\n","import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\n//import 'index.css';\n//import 'custom.css';\nimport App from 'components/App';\nimport * as FirebaseService from 'services/firebase';\nimport AuthState from 'components/contexts/AuthState';\nimport Button from '@material-ui/core/Button';\n\nfunction Index() {\n\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = FirebaseService.auth.onAuthStateChanged(user => {\n      setCurrentUser(user)\n    });\n    return unsubscribe;\n  }, [])\n\n  return (\n  <AuthState.Provider value={[currentUser]}>\n    {\n      currentUser\n        ? (<div>\n          <App />\n        </div>)\n        : <Button variant=\"contained\" color=\"primary\"  onClick={FirebaseService.SignInWithGoogle}>SIGN IN WITH GOOGLE</Button>\n    }\n  </AuthState.Provider>);\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Index/>, rootElement);\n"],"sourceRoot":""}