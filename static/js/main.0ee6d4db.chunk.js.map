{"version":3,"sources":["components/ErrorPage.js","services/firebase.js","components/homepage/HomepageHeader.js","components/contexts/HomepageState.js","components/contexts/AuthState.js","components/homepage/HomepageDetails.js","components/homepage/Homepage.js","components/contexts/ProfileState.js","components/profile/ProfilePicture.js","components/profile/ProfileDetails.js","components/profile/UserProfile.js","components/AppHeader.js","components/contexts/CharacterState.js","components/character/CharacterSheetHeader.js","components/character/CharacterBasicDetails.js","components/character/CharacterType.js","components/character/CharacterDamage.js","components/character/CharacterArmour.js","components/character/CharacterFunds.js","components/character/CharacterHP.js","components/character/CharacterLevel.js","components/character/CharacterXP.js","components/character/CharacterBasicStats.js","components/character/CharacterAbilities.js","components/character/CharacterBonds.js","components/character/CharacterGear.js","components/character/CharacterClassFeatures.js","components/character/CharacterStandardMoves.js","components/character/CharacterAdvancedMoves.js","components/character/CharacterClassStartingMoves.js","components/character/CharacterClassAdvancedMoves2to5.js","components/character/CharacterClassAdvancedMoves6to10.js","components/character/CharacterClassMoves.js","components/character/CharacterMoves.js","components/other/DiceRoller.js","components/character/CharacterSheet.js","components/contexts/CampaignState.js","components/campaign/CampaignHeader.js","components/campaign/CampaignDetails.js","components/campaign/Campaign.js","components/App.js","index.js"],"names":["ErrorPage","firebase","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","provider","GoogleAuthProvider","SignInWithGoogle","signInWithPopup","setCustomParameters","prompt","HomepageHeader","Breadcrumbs","aria-label","HomepageState","createContext","AuthState","useStyles","makeStyles","table","minWidth","HomepageDetails","classes","currentUser","useContext","useState","open","setOpen","campaignName","setCampaignName","campaigns","handleCancel","saveCampaign","campaign","owner","email","collection","doc","set","then","console","info","catch","error","alert","deleteCampaign","delete","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","IconButton","onClick","Add","TableBody","map","index","to","id","Delete","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","onChange","event","target","value","DialogActions","Button","color","Homepage","setCampaigns","useEffect","observer","next","querySnapshot","updatedCampaignList","docs","docSnapshot","data","onSnapshot","log","ctx","useMemo","Provider","ProfileState","ProfilePicture","show","setShow","Avatar","src","photoURL","alt","ProfileDetails","style","displayName","variant","FirebaseService","signOut","UserProfile","theme","root","flexGrow","menuButton","marginRight","spacing","title","AppHeader","AppBar","position","Toolbar","edge","Menu","Typography","CharacterState","CharacterSheetHeader","useParams","campaignURL","characterURL","CharacterBasicDetails","character","setCharacter","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","htmlFor","multiline","placeholder","fullName","name","backstory","look","formControl","selectEmpty","marginTop","CharacterType","dwc","dwClass","alig","alignment","race","FormControl","Select","tabIndex","MenuItem","disabled","hidden","dwClasses","key","races","InputProps","readOnly","classDetails","raceAttributes","alignments","alignmentAttributes","CharacterDamage","damage","CharacterArmour","type","min","armour","CharacterFunds","funds","CharacterHP","hp","abilities","baseHp","parseInt","find","x","category","score","CharacterLevel","level","CharacterXP","xp","CharacterBasicStats","CharacterAbilities","updateAbilityScore","e","newAbilities","updateAbilityAffliction","affliction","abilityModifier","abilityScore","abilityAffliction","baseModifier","indexOf","modifier","max","ab","abilityAfflictions","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","CharacterBonds","updateBond","newBonds","bonds","bond","align","addBondsRow","length","splice","deleteBondRow","CharacterGear","updateItemName","newItems","items","updateItemDescription","description","updateItemType","updateItemCost","cost","updateItemRange","range","updateItemUses","uses","updateItemWeight","weight","colSpan","item","addItemRow","deleteItemRow","reduce","totalLoad","str","baseLoad","maxLoad","CharacterClassFeatures","updateFeatureCheckbox","newFeatures","classFeatures","checkbox","checked","updateFeature","feature","addFeatureRow","Checkbox","deleteFeatureRow","CharacterStandardMoves","standardMoves","dangerouslySetInnerHTML","__html","CharacterAdvancedMoves","advancedMoves","CharacterClassStartingMoves","classMoves","startingMoves","CharacterClassAdvancedMoves2to5","advancedMoves2_5","CharacterClassAdvancedMoves6to10","advancedMoves6_10","TabPanel","props","children","other","role","Box","p","a11yProps","backgroundColor","palette","background","paper","CharacterClassMoves","setValue","Tabs","newValue","Tab","CharacterMoves","React","DiceRoller","dice","setDice","diceNum","setDiceNum","rollResult","setRollResult","singleRoll","sides","Math","floor","random","defaultValue","total","i","rollDice","CharacterSheet","isSaving","setIsSaving","documentSnapshot","debouncedSave","useCallback","callback","delay","timer","args","clearTimeout","setTimeout","debounce","DEBOUNCE_SAVE_DELAY_MS","Object","keys","CampaignState","CampaignHeader","CampaignDetails","charaName","setCharaName","saveCharacter","deleteCharacter","characterData","CampaignSheet","setCampaign","updatedCharacterList","App","Container","exact","path","Campaign","Index","setCurrentUser","onAuthStateChanged","user","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.0ee6d4db.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorPage() {\n  return (\n      <h1>Oops! Page not found!</h1>\n    );\n}\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Initialise Firebase and setting up firestore and auth for use later\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\n\n// Authenticate with Firebase-auth using the Google provider object\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport function SignInWithGoogle() {\n  auth.signInWithPopup(provider)\n};\n\n// Firestore operations\n\n// Create new blank campaign\nexport function createCampaign(campaign,owner) {\n  return db.collection(\"campaigns\")\n    .doc(campaign).set({owner: owner})\n};\n\n// Create new blank character\nexport function createCharacter(campaign,charaName,owner) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .doc(charaName)\n    .set({\n      abilities: [\n        {category: \"STR\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"DEX\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"CON\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"INT\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"WIS\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"CHA\", score: \"1\", affliction: \"Unafflicted\"}\n      ],\n      alignment: \"\",\n      armour: \"\",\n      backstory: \"\",\n      bonds: [\n        {bond: \"\"},\n      ],\n      classFeatures: [\n        {feature: \"\", checkbox: false}\n      ],\n      dwClass: \"\",\n      fullName: \"\",\n      funds: \"\",\n      hp: \"\",\n      items: [\n        {item: \"\", weight: \"\"},\n      ],\n      level: \"\",\n      look: \"\",\n      owner: owner,\n      race: \"\",\n      xp: \"\"\n    });\n};\n// Save Character\nexport function saveCharacter(campaign, character, data) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .doc(character)\n    .set(data);\n};\n\n// Stream Campaign Data (all Campaigns)\nexport function streamCampaigns(observer) {\n  return db.collection(\"campaigns\")\n    .onSnapshot(observer);\n};\n// Stream Character Data (all Characters)\nexport function streamCharacters(campaign, observer) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .onSnapshot(observer);\n};\n// Stream Character Data (selected Characters)\nexport function streamCharacter(campaign, character, observer) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .doc(character)\n    .onSnapshot(observer);\n};\n// Delete Campaign\nexport function deleteCampaign(campaign) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .delete()\n};\n// Delete Characters\nexport function deleteCharacter(campaign, character) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .doc(character)\n    .delete()\n};\n\n// Default Export\nexport default firebase;\n","import React from 'react';\nimport {Breadcrumbs} from '@material-ui/core';\n\nexport default function HomepageHeader() {\n\n  return (<div>\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <p>Home</p>\n    </Breadcrumbs>\n    <h1>Campaigns Homepage</h1>\n  </div>);\n}\n","import {createContext} from 'react';\n\nconst HomepageState = createContext();\n\nexport default HomepageState;\n","import {createContext} from 'react';\n\nconst AuthState = createContext();\n\nexport default AuthState;\n","import React, {useContext, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport * as FirebaseService from 'services/firebase';\nimport HomepageState from 'components/contexts/HomepageState';\nimport AuthState from 'components/contexts/AuthState';\nimport {Add, Delete} from '@material-ui/icons';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField\n} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nexport default function HomepageDetails() {\n\n  const classes = useStyles();\n  const {currentUser} = useContext(AuthState);\n  const [open, setOpen] = useState(false);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const {campaigns} = useContext(HomepageState);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    setOpen(false);\n    saveCampaign();\n  }\n\n  // Create New Campaign\n  const saveCampaign = () => {\n    if (campaignName) { //don't save unless details present\n      FirebaseService.createCampaign(campaignName, currentUser.email).then(() => {\n        console.info('Created Campaign:', campaignName);\n      }).catch((error) => {\n        alert(\"Failed to create campaign, see console error\");\n        console.error(\"Error creating document:\", error);\n      });\n    } else {\n      alert('Cannot save blank campaign');\n    }\n  }\n\n  // Delete Campaign\n  const deleteCampaign = (campaignName) => {\n    if (campaignName) { //don't save unless details present\n      FirebaseService.deleteCampaign(campaignName).then(() => {\n        console.info('Deleted Campaign:', campaignName);\n      }).catch((error) => {\n        alert(\"Failed to delete campaign, see console error\");\n        console.error(\"Error deleting document:\", error);\n      });\n    } else {\n      alert('Cannot delete blank campaign');\n    }\n  }\n\n  return (<>\n    <TableContainer component = {Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Campaign</TableCell>\n            <TableCell>Owner</TableCell>\n            <TableCell>\n              <IconButton aria-label=\"add\" onClick={handleClickOpen}>\n                <Add/>\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            campaigns.campaigns && campaigns.campaigns.map((campaign, index) => {\n              return (<TableRow key={index}>\n                <TableCell>\n                  <Link to={\"/dw-react/\" + campaign.id}>{campaign.id}</Link>\n                </TableCell>\n                <TableCell>\n                  {campaign.owner}\n                </TableCell>\n                <TableCell>\n                  <IconButton aria-label=\"delete\" onClick={() => deleteCampaign(campaign.id)}>\n                    <Delete/>\n                  </IconButton>\n                </TableCell>\n              </TableRow>)\n            })\n          }\n        </TableBody>\n      </Table>\n    </TableContainer>\n    <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Create new campaign</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          To create a campaign, please enter the new campaign name here. You will not be able to change this once saved.\n        </DialogContentText>\n        <TextField autoFocus={true} margin=\"dense\" id=\"name\" label=\"Campaign Name\" fullWidth={true} onChange={event => setCampaignName(event.target.value)}/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleSave} color=\"primary\">\n          Create Campaign\n        </Button>\n      </DialogActions>\n    </Dialog>\n  </>);\n}\n","import React, {useState, useEffect, useMemo} from 'react';\nimport * as FirebaseService from 'services/firebase';\nimport HomepageHeader from 'components/homepage/HomepageHeader';\nimport HomepageDetails from 'components/homepage/HomepageDetails';\nimport HomepageState from 'components/contexts/HomepageState';\n\nexport default function Homepage() {\n\n  const [campaigns, setCampaigns] = useState({});\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    const unsubscribe = FirebaseService.streamCampaigns({\n      next: querySnapshot => {\n        const updatedCampaignList = querySnapshot.docs.map((docSnapshot) => {\n          return ({id: docSnapshot.id, owner: docSnapshot.data().owner})\n        });\n        setCampaigns(campaign => ({campaigns: updatedCampaignList}));\n      },\n      error: (error) => {\n        alert(\"Failed to load data correctly, see console error\");\n        console.error(\"Error loading data:\", error);\n      }\n    });\n    return unsubscribe;\n  }, [setCampaigns]);\n\n  useEffect(() => {\n    console.log(\"Campaigns State:\", campaigns)\n  }, [campaigns]); //Only log to console if state actually changes\n\n  const ctx = useMemo(() => ({campaigns}), [campaigns]); //Memo-ised state for performance\n\n  return (<HomepageState.Provider value={ctx}>\n    <HomepageHeader/>\n    <br/>\n    <HomepageDetails/>\n  </HomepageState.Provider>);\n}\n","import {createContext} from 'react';\n\nconst ProfileState = createContext();\n\nexport default ProfileState;\n","import React, {useContext} from 'react';\nimport AuthState from 'components/contexts/AuthState';\nimport ProfileState from 'components/contexts/ProfileState';\nimport Avatar from '@material-ui/core/Avatar';\n\nexport default function ProfilePicture() {\n\n  const {currentUser} = useContext(AuthState);\n  const {show, setShow} = useContext(ProfileState);\n  const toggleSetShow = () => setShow(!show);\n\n  return (<Avatar src={currentUser.photoURL} alt=\"Google Profile\" onClick={() => toggleSetShow()}/>);\n}\n","import React, {useContext} from 'react';\nimport AuthState from 'components/contexts/AuthState';\nimport * as FirebaseService from 'services/firebase';\nimport {Button} from '@material-ui/core';\n\nexport default function ProfileDetails() {\n\n  const {currentUser} = useContext(AuthState);\n\n  return (<div style={{\n      \"border\" : \"0\",\n      \"-webkit-border-radius\" : \"50%\",\n      \"border-radius\" : \"5px\",\n      \"display\" : \"inline-block\",\n      \"margin\" : \"0\",\n      \"position\" : \"absolute\",\n      \"top\" : \"50px\",\n      \"right\" : \"20px\",\n      \"color\" : \"#bdc1c6\",\n      \"background-color\" : \"rgba(60, 64, 67, 0.9)\",\n      \"text-align\" : \"left\",\n      \"font\" : \"500 12px 'Roboto', arial, sans-serif\",\n      \"letter-spacing\" : \"0.8px\",\n      \"line-height\" : \"16px\",\n      \"font-weight\" : \"bold\",\n      \"padding\" : \"8px 8px\"\n    }}>\n    <div style={{\n        \"color\" : \"white\"\n      }}>Google Account</div>\n    <div>{currentUser.displayName}</div>\n    <div>{currentUser.email}</div>\n    <Button variant=\"contained\" color=\"primary\" onClick={() => FirebaseService.auth.signOut()}>LOG OUT</Button>\n  </div>);\n}\n","import React, {useState, useMemo} from 'react';\nimport ProfilePicture from 'components/profile/ProfilePicture';\nimport ProfileDetails from 'components/profile/ProfileDetails';\nimport ProfileState from 'components/contexts/ProfileState';\n\nexport default function UserProfile() {\n\n  const [show, setShow] = useState(false);\n  const ctx = useMemo(() => ({show, setShow}), [show]); //Memo-ised state for performance\n\n  return (<ProfileState.Provider value={ctx}>\n    <ProfilePicture/> {\n      show\n        ? <ProfileDetails/>\n        : null\n    }\n  </ProfileState.Provider>);\n}\n","import React from 'react';\nimport {AppBar, IconButton, Toolbar, Typography} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Menu} from '@material-ui/icons';\nimport UserProfile from 'components/profile/UserProfile';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nexport default function AppHeader() {\n  const classes = useStyles();\n  return (<div className={classes.root}>\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n          <Menu/>\n        </IconButton>\n        <Typography component={'span'} variant=\"h6\" className={classes.title}>\n          Dungeon World Character Sheet (v0.10.0 by Godmar02)\n        </Typography>\n        <UserProfile/>\n      </Toolbar>\n    </AppBar>\n  </div>);\n}\n","import {createContext} from 'react';\n\nconst CharacterState = createContext();\n\nexport default CharacterState;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useParams} from 'react-router';\nimport {Breadcrumbs} from '@material-ui/core';\n\nexport default function CharacterSheetHeader() {\n\n  const {campaignURL, characterURL} = useParams();\n\n  return (<>\n    <Breadcrumbs aria-label = \"breadcrumb\">\n      <Link to=\"/dw-react\">Home</Link>\n      <Link to={\"/dw-react/\" + campaignURL}>{campaignURL}</Link>\n      <p>{characterURL}</p>\n    </Breadcrumbs>\n    <h1>Character: {characterURL}</h1>\n  </>);\n}\n","import React, {useContext} from 'react';\nimport {Accordion,AccordionSummary,AccordionDetails,Paper,Table,TableBody,TableCell,TableContainer,TableRow,TextField} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CharacterState from 'components/contexts/CharacterState';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function CharacterBasicDetails() {\n\n  const {character, setCharacter} = useContext(CharacterState);\n  const classes = useStyles();\n\n  return (\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMore />}>Basic Details\n      </AccordionSummary>\n      <AccordionDetails>\n        <TableContainer component={Paper}>\n    <Table className={classes.table} aria-label=\"simple table\">\n    <TableBody>\n      <TableRow>\n        <th style={{\"width\" : \"25%\"}}>\n          <label htmlFor=\"fullName\">FULL NAME</label>\n        </th>\n        <TableCell>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            placeholder=\"Add your characters full name here\"\n            value={character.fullName}\n            name=\"fullName\"\n            onChange={event => setCharacter(character => ({...character,fullName: event.target.value}))}/>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <th style={{\"width\" : \"25%\"}}>\n          <label htmlFor=\"backstory\">BACKSTORY</label>\n        </th>\n        <TableCell>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            placeholder=\"Describe your character's backstory and anything else about your characters identity here\"\n            value={character.backstory}\n            name=\"backstory\"\n            onChange={event => setCharacter(character => ({...character,backstory: event.target.value}))}/>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <th style={{\"width\" : \"25%\"}}>\n          <label htmlFor=\"look\">LOOK</label>\n        </th>\n        <TableCell>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            placeholder=\"Describe your character's appearance here\"\n            name=\"look\"\n            value={character.look}\n            onChange={event => setCharacter(character => ({...character,look: event.target.value}))}/>\n        </TableCell>\n      </TableRow>\n    </TableBody>\n  </Table></TableContainer></AccordionDetails>\n</Accordion>\n          );\n}\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {races} from 'data/raceList';\nimport {dwClasses} from 'data/classList';\nimport {alignments} from 'data/classAlignments';\nimport {classDetails} from 'data/classDetails';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  FormControl,\n  MenuItem,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TextField\n} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n    minWidth: 650\n  }\n}));\n\nexport default function CharacterType() {\n\n  const classes = useStyles();\n  const {character, setCharacter} = useContext(CharacterState);\n  const dwc = character.dwClass;\n  const alig = character.alignment;\n  const race = character.race;\n\n  const raceAttributes = () => {\n    if (character.dwClass && character.race) {\n      return (classDetails.[dwc].raceAttributes.[race]);\n    } else {\n      return ('');\n    }\n  };\n\n  const alignmentAttributes = () => {\n    if (character.dwClass && character.alignment) {\n      return (classDetails.[dwc].alignmentAttributes.[alig]);\n    } else {\n      return ('');\n    }\n  };\n\n  return (<Accordion>\n    <AccordionSummary expandIcon={<ExpandMore />}>Character Type\n    </AccordionSummary>\n    <AccordionDetails>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableBody>\n            <TableRow>\n              <th>CLASS\n              </th>\n              <TableCell style={{\n                  \"width\" : \"25%\"\n                }}>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                  <Select tabIndex={-1} value={character.dwClass || \"null\"} onChange={event => {\n                      setCharacter(character => ({\n                        ...character,\n                        dwClass: event.target.value\n                      }));\n                      setCharacter(character => ({\n                        ...character,\n                        alignment: \"null\"\n                      }))\n                    }}>\n                    <MenuItem disabled=\"disabled\" value=\"null\" hidden=\"hidden\"/> {\n                      dwClasses.map((data, key) => {\n                        return (<MenuItem value={data} key={key}>\n                          {data}\n                        </MenuItem>);\n                      })\n                    }\n                  </Select>\n                </FormControl>\n              </TableCell>\n              <TableCell style={{\n                  \"width\" : \"50%\"\n                }}/>\n            </TableRow>\n            <TableRow>\n              <th>\n                <label htmlFor=\"race\">RACE</label>\n              </th>\n              <TableCell>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                  <Select tabIndex={-1} value={character.race || \"null\"} name=\"race\" onChange={event => setCharacter(character => ({\n                      ...character,\n                      race: event.target.value\n                    }))}>\n                    <MenuItem disabled=\"disabled\" value=\"null\" hidden=\"hidden\"/> {\n                      races.map((data, key) => {\n                        return (<MenuItem value={data} key={key}>\n                          {data}\n                        </MenuItem>);\n                      })\n                    }\n                  </Select>\n                </FormControl>\n              </TableCell>\n              <TableCell>\n                <TextField multiline=\"multiline\" fullWidth=\"fullWidth\" variant=\"outlined\" aria-label=\"empty textarea\" name=\"raceAttributes\" InputProps={{\n                    readOnly: true\n                  }} value={raceAttributes()}/>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <th>\n                <label htmlFor=\"alignment\">ALIGNMENT</label>\n              </th>\n              <TableCell>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                  <Select tabIndex={-1} value={character.alignment || \"null\"} name=\"alignment\" onChange={event => setCharacter(character => ({\n                      ...character,\n                      alignment: event.target.value\n                    }))}>\n                    <MenuItem disabled=\"disabled\" value=\"null\" hidden=\"hidden\"/> {\n                      character.dwClass && dwc && alignments.[dwc].map((data, key) => {\n                        return (<MenuItem value={data} key={key}>\n                          {data}\n                        </MenuItem>);\n                      })\n                    }\n                  </Select>\n                </FormControl>\n              </TableCell>\n              <TableCell>\n                <TextField multiline=\"multiline\" fullWidth=\"fullWidth\" variant=\"outlined\" aria-label=\"empty textarea\" name=\"alignmentAttribute\" InputProps={{\n                    readOnly: true\n                  }} value={alignmentAttributes()}/>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </AccordionDetails>\n  </Accordion>);\n}\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {classDetails} from 'data/classDetails';\nimport {TextField} from '@material-ui/core';\n\nexport default function CharacterDamage() {\n\n  const {character} = useContext(CharacterState);\n  const dwc = character.dwClass;\n\n  const damage = () => {\n    if (character.dwClass) {\n      return (classDetails.[dwc].damage);\n    } else {\n      return ('');\n    }\n  };\n\n  return (\n            <TextField\n              variant=\"outlined\"\n              name=\"damage\"\n              label=\"Damage\"\n              InputProps={{\n                readOnly: true,\n              }}\n              value={damage()}/>\n  );\n}\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {TextField} from '@material-ui/core';\n\nexport default function CharacterArmour() {\n\n  const {character, setCharacter} = useContext(CharacterState);\n\n  return (\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              label=\"Armour\"\n              min={0}\n              name=\"armour\" value={character.armour || ''} onChange={event => setCharacter(character => ({...character,armour: event.target.value}))}/>\n  );\n}\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {TextField} from '@material-ui/core';\n\nexport default function CharacterFunds() {\n\n  const {character, setCharacter}= useContext(CharacterState);\n\n  return (\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              name=\"funds\"\n              label=\"Funds\"\n              min={0}\n              value={character.funds || ''}\n              onChange={event => setCharacter(character => ({...character,funds: event.target.value}))}/>\n  );\n}\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {classDetails} from 'data/classDetails';\nimport {TextField} from '@material-ui/core';\n\nexport default function CharacterHP() {\n\n  const {character, setCharacter}= useContext(CharacterState);\n\n  const dwc = character.dwClass;\n  const maxHp = () => {\n    if (character.dwClass && character.abilities) {\n      return (\"/ \" + (classDetails.[dwc].baseHp + parseInt(character.abilities.find(x => x.category === 'CON').score ,10)));\n    } else {\n      return ('');\n    }\n  };\n\n  return (<>\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              label=\"HP\"\n              min={0}\n\n              name=\"hp\"\n              value={character.hp || ''}\n              onChange={event => setCharacter(character => ({...character,hp: event.target.value}))}/>\n            <TextField\n              variant=\"outlined\"\n\n              label=\"Max HP\"\n              name=\"maxHp\"\n              InputProps={{\n                readOnly: true,\n              }}\n              value={maxHp()} />\n            </>\n  );\n}\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {TextField} from '@material-ui/core';\n\nexport default function CharacterLevel() {\n\n  const {character, setCharacter}= useContext(CharacterState);\n\n  return (\n\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              label=\"Level\"\n              min={1}\n\n              name=\"level\"\n              value={character.level || ''}\n              onChange={event => setCharacter(character => ({...character,level: event.target.value}))}/>\n          );\n}\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {TextField} from '@material-ui/core';\n\nexport default function CharacterXP() {\n\n  const {character, setCharacter}= useContext(CharacterState);\n\n  // Total Load\n  const calcMaxXp = () => {\n    if (character.level) {\n      return (\"/ \" + (parseInt(character.level,10) + 7));\n    } else {\n      return ('');\n    }\n  };\n\n  return (<>\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              label=\"XP\"\n              min={0}\n              name=\"xp\"\n              value={character.xp || ''}\n              onChange={event => setCharacter(character => ({...character,xp: event.target.value}))}/>\n            <TextField\n              variant=\"outlined\"\n              label=\"Max XP\"\n              name=\"maxXp\"\n              InputProps={{\n                readOnly: true,\n              }}\n              value={calcMaxXp()} />\n            </>);\n}\n","import React from 'react';\nimport {Accordion,AccordionSummary,AccordionDetails} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport CharacterDamage from 'components/character/CharacterDamage'\nimport CharacterArmour from 'components/character/CharacterArmour'\nimport CharacterFunds from 'components/character/CharacterFunds'\nimport CharacterHP from 'components/character/CharacterHP'\nimport CharacterLevel from 'components/character/CharacterLevel'\nimport CharacterXP from 'components/character/CharacterXP'\n\nexport default function CharacterBasicStats() {\n\n  return (\n  <div>\n    <Accordion>\n      <AccordionSummary expandIcon={<ExpandMore />}>Basic Stats</AccordionSummary>\n      <AccordionDetails>\n        <CharacterLevel/>\n        <CharacterXP/>\n        <CharacterDamage/>\n        <CharacterArmour/>\n        <CharacterFunds/>\n        <CharacterHP/>\n      </AccordionDetails>\n    </Accordion>\n  </div>);\n}\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {abilityAfflictions} from 'data/abilityAfflictions';\nimport {Accordion,AccordionSummary,AccordionDetails,FormControl,MenuItem,Select,TextField} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function CharacterAbilities() {\n\n  const classes = useStyles();\n  const {character, setCharacter} = useContext(CharacterState);\n\n  const updateAbilityScore = index => e => {\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {...character.abilities[index], score: e.target.value}; // replace value\n    setCharacter(character => ({...character, abilities: newAbilities})); // set array back\n  }\n\n  const updateAbilityAffliction = index => e => {\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {...character.abilities[index], affliction: e.target.value}; // replace value\n    setCharacter(character => ({...character, abilities: newAbilities})); // set array back\n  }\n\n  const abilityModifier = (abilityScore, abilityAffliction) => {\n\n    if (abilityScore && abilityAffliction) {\n    let baseModifier;\n    let afflicted;\n\n    abilityScore = parseInt(abilityScore,10);\n\n    if ([1, 2, 3].indexOf(abilityScore) > -1) {\n      baseModifier = -3;\n    } else if ([4, 5].indexOf(abilityScore) > -1) {\n      baseModifier = -2;\n    } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n      baseModifier = -1;\n    } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n      baseModifier = 0;\n    } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n      baseModifier = 1;\n    } else if ([16, 17].indexOf(abilityScore) > -1) {\n      baseModifier = 2;\n    } else if (abilityScore === 18) {\n      baseModifier = 3;\n    }\n\n    /*-1 if afflicted*/\n    if (abilityAffliction === \"Unafflicted\") {\n      afflicted = 0;\n    } else {\n      afflicted = 1;\n    }\n\n    let modifier = (baseModifier - afflicted);\n\n    if (modifier > 0) {\n      return(\"[+\" + modifier+ \"]\");\n    } else {\n      return (\"[\" + modifier + \"]\");\n    }\n  } else {\n    return ('')\n  }\n  }\n\n  return (\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMore />}>Abilities\n      </AccordionSummary>\n      <AccordionDetails>\n     <table style={{\"width\":\"100%\"}}>\n       <thead>\n         <tr>\n           {\n            character.abilities && character.abilities.map((abilities, index) => {\n            return (\n              <th key={index}>\n                <label\n                  htmlFor={abilities.category}\n                  value={abilities.category}\n                  name={abilities.category}>\n                  {abilities.category}\n                </label>\n              </th>)\n           })\n         }\n         </tr>\n       </thead>\n       <tbody>\n         <tr>\n           {\n            character.abilities && character.abilities.map((abilities, index) => {\n            return (\n              <td key={index}>\n                <TextField\n                  type=\"number\"\n                  variant=\"outlined\"\n                  min={1} max={18}\n                  name={abilities.category + \"Score\"}\n                  value={abilities.score}\n                  onChange={updateAbilityScore(index)} />\n            </td>)\n           })\n         }\n         </tr>\n         <tr>\n           {\n            character.abilities && character.abilities.map((abilities, index) => {\n            return (\n              <td key={index}>\n                <TextField\n                  variant=\"outlined\"\n                  name={abilities.category + \"Modifier\"}\n                  value={abilityModifier(abilities.score, abilities.affliction)}\n                  InputProps={{\n                    readOnly: true,\n                  }} />\n            </td>)\n           })\n         }\n         </tr>\n         <tr>\n           {\n            character.abilities && character.abilities.map((abilities,index) => {\n            const ab = abilities.category;\n            return (\n              <td key={index}>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classes.formControl}>\n                <Select\n                  tabIndex={-1}\n                  value={abilities.affliction || \"null\"}\n                  name={abilities.category + \"Affliction\"}\n                  onChange={updateAbilityAffliction(index)}>\n                  <MenuItem disabled value=\"null\" hidden />\n                    {\n                      abilityAfflictions.[ab].map((data, key) => {\n                        return (\n                        <MenuItem value={data} key={key}>\n                          {data}\n                        </MenuItem>);\n                      })\n                    }\n                </Select>\n              </FormControl>\n              </td>)\n           })\n         }\n         </tr>\n       </tbody>\n     </table>\n   </AccordionDetails>\n   </Accordion>\n    );\n}\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {Add,Delete} from '@material-ui/icons';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {ExpandMore} from '@material-ui/icons';\nimport {Accordion,AccordionSummary,AccordionDetails,IconButton,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TextField} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function CharacterBonds() {\n\n  const classes = useStyles();\n  const {character, setCharacter} = useContext(CharacterState);\n\n  // State manipulation\n  const updateBond = index => e => {\n    let newBonds = [...character.bonds]; // copying the old array\n    newBonds[index] = {...character.bonds[index], bond: e.target.value}; // replace value\n    setCharacter(character => ({...character, bonds: newBonds})); // set array back\n  }\n\n  // Delete rows in the table\n  const deleteBondRow = index => {\n    const newBonds = [...character.bonds]; // copying the old array\n    if (character.bonds.length !== 1) { //don't delete last row\n      newBonds.splice(index, 1); // remove item from array\n      setCharacter(character => ({...character, bonds: newBonds})); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  }\n\n  // Add rows in the table\n  const addBondsRow = () => {\n    const newBonds = [...character.bonds, {bond: \"\"}]; // copying the old array and adding blank item\n    setCharacter(character => ({...character, bonds: newBonds})); // set array back\n  }\n\n  return (<Accordion>\n    <AccordionSummary\n      expandIcon={<ExpandMore />}>Bonds\n    </AccordionSummary>\n    <AccordionDetails>\n      <TableContainer component={Paper}>\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>\n          <TableCell align=\"center\">Bond</TableCell>\n          <TableCell>\n            <IconButton aria-label=\"add\" onClick={() => addBondsRow()}>\n              <Add />\n            </IconButton>\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {\n         character.bonds && character.bonds.map((bonds,index) => {\n         return (\n           <TableRow key={index}>\n               <TableCell>\n                 <TextField\n                   multiline\n                   fullWidth\n                   variant=\"outlined\"\n                   aria-label=\"empty textarea\"\n                   placeholder=\"Add 2-3 bonds here\"\n                   value={bonds.bond}\n                   name={\"bond\" + index}\n                   onChange={updateBond(index)}\n                   />\n               </TableCell>\n               <TableCell>\n                 <IconButton aria-label=\"delete\" onClick={() => deleteBondRow(index)}>\n                   <Delete/>\n                 </IconButton>\n               </TableCell>\n           </TableRow>)\n        })\n      }\n      </TableBody>\n      <tfoot/>\n    </Table>\n    </TableContainer>\n  </AccordionDetails>\n  </Accordion>\n    );\n}\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {classDetails} from 'data/classDetails';\nimport {Add,Delete} from '@material-ui/icons';\nimport {IconButton,FormControl,Paper,Select, MenuItem,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TextField} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n    minWidth: 650\n  }\n}));\n\nexport default function CharacterGear() {\n\n  const classes = useStyles();\n  const {character, setCharacter}= useContext(CharacterState);\n  const dwc = character.dwClass;\n\n  // Total Load\n  const totalLoad = () => {\n    if (character.items) {\n      return (character.items.reduce((totalLoad,data) => totalLoad + parseInt((data.weight || 0),10) ,0));\n    } else {\n      return ('');\n    }\n  };\n\n  // Max Load\n  const maxLoad = () => {\n\n    if (character.dwClass && character.abilities.find(x => x.category === 'STR').score && character.abilities.find(x => x.category === 'STR').affliction) {\n      let str = character.abilities.find(x => x.category === 'STR');\n      let baseModifier;\n      let abilityAffliction = str.affliction;\n      let abilityScore = parseInt(str.score,10);\n      let afflicted;\n\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\n        baseModifier = -3;\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\n        baseModifier = -2;\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n        baseModifier = -1;\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n        baseModifier = 0;\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n        baseModifier = 1;\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\n        baseModifier = 2;\n      } else if (abilityScore === 18) {\n        baseModifier = 3;\n      }\n\n      /*-1 if afflicted*/\n      if (abilityAffliction === \"Unafflicted\") {\n        afflicted = 0;\n      } else {\n        afflicted = 1;\n      }\n\n      let modifier = (baseModifier - afflicted);\n\n      return (\"/ \" + (classDetails.[dwc].baseLoad + modifier));\n    } else {\n      return ('');\n    }\n  };\n\n  // State manipulation\n  const updateItemName = index => e => {\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = {...character.items[index], name: e.target.value}; // replace value\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n\n  const updateItemDescription = index => e => {\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = {...character.items[index], description: e.target.value}; // replace value\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n\n  const updateItemType = index => e => {\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = {...character.items[index], type: e.target.value}; // replace value\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n\n  const updateItemCost = index => e => {\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = {...character.items[index], cost: e.target.value}; // replace value\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n\n  const updateItemRange = index => e => {\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = {...character.items[index], range: e.target.value}; // replace value\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n\n  const updateItemUses = index => e => {\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = {...character.items[index], uses: e.target.value}; // replace value\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n\n  const updateItemWeight = index => e => {\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = {...character.items[index], weight: e.target.value}; // replace value\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n\n  // Delete rows in the table\n  const deleteItemRow = index => {\n    const newItems = [...character.items]; // copying the old array\n    if (character.items.length !== 1) { //don't delete last row\n      newItems.splice(index, 1); // remove item from array\n      setCharacter(character => ({...character, items: newItems})); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  }\n\n  // Add rows in the table\n  const addItemRow = () => {\n    const newItems = [...character.items, {item: \"\", weight: \"\"}]; // copying the old array and adding blank item\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n  //,\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">NAME</TableCell>\n            <TableCell align=\"center\">TYPE</TableCell>\n            <TableCell align=\"center\" colSpan=\"4\">DESCRIPTION</TableCell>\n            <TableCell align=\"center\">RANGE</TableCell>\n            <TableCell align=\"center\">COST</TableCell>\n            <TableCell align=\"center\">USES</TableCell>\n            <TableCell align=\"center\">TAGS</TableCell>\n            <TableCell align=\"center\" colSpan=\"2\">WEIGHT</TableCell>\n            <TableCell>\n              <IconButton aria-label=\"add\" onClick={() => addItemRow()}>\n                <Add/>\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n           character.items && character.items.map((items,index) => {\n           return (\n             <TableRow key={index}>\n                 <TableCell>\n                   <TextField\n                     fullWidth\n                     variant=\"outlined\"\n                     aria-label=\"empty textarea\"\n                     placeholder=\"Item name\"\n                     value={items.name}\n                     name={\"itemName\" + index}\n                     onChange={updateItemName(index)}/>\n                 </TableCell>\n                 <TableCell align=\"center\">\n                   <FormControl variant=\"outlined\" className={classes.formControl}>\n                   <Select tabIndex={-1} value={items.type} onChange={updateItemType(index)}>\n                     <MenuItem disabled=\"disabled\" value=\"null\" hidden=\"hidden\"/>\n                     <MenuItem value=\"Item\">Item</MenuItem>\n                     <MenuItem value=\"Poison\">Poison</MenuItem>\n                     <MenuItem value=\"Weapon\">Weapon</MenuItem>\n                   </Select>\n                   </FormControl>\n                 </TableCell>\n                 <TableCell colSpan=\"4\">\n                   <TextField\n                     multiline\n                     fullWidth\n                     variant=\"outlined\"\n                     aria-label=\"empty textarea\"\n                     placeholder=\"Item description\"\n                     value={items.description}\n                     name={\"itemDescription\" + index}\n                     onChange={updateItemDescription(index)}/>\n                 </TableCell>\n                 <TableCell align=\"center\">\n                   <FormControl variant=\"outlined\" className={classes.formControl}>\n                   <Select tabIndex={-1} value={items.range} onChange={updateItemRange(index)}>\n                     <MenuItem value=\"null\" hidden=\"hidden\"/>\n                     <MenuItem value=\"Close\">Close</MenuItem>\n                     <MenuItem value=\"Hand\">Hand</MenuItem>\n                     <MenuItem value=\"Far\">Far</MenuItem>\n                     <MenuItem value=\"Near\">Near</MenuItem>\n                     <MenuItem value=\"Near & Far\">Near & Far</MenuItem>\n                     <MenuItem value=\"Reach\">Reach</MenuItem>\n                     <MenuItem value=\"Reach & Near\">Reach & Near</MenuItem>\n                   </Select>\n                   </FormControl>\n               </TableCell>\n                <TableCell align=\"center\">\n                  <TextField\n                   type=\"number\"\n                   fullWidth\n                   variant=\"outlined\"\n                   min={0}\n                   name={\"itemCost\" + index}\n                   value={items.cost}\n                   onChange={updateItemCost(index)}/>\n               </TableCell>\n                 <TableCell align=\"center\">\n                   <TextField\n                   type=\"number\"\n                   fullWidth\n                   variant=\"outlined\"\n                   min={0}\n                   name={\"itemUses\" + index}\n                   value={items.uses}\n                   onChange={updateItemUses(index)}/>\n               </TableCell>\n                 <TableCell align=\"center\">TAGS</TableCell>\n                 <TableCell colSpan=\"2\">\n                   <TextField\n                     type=\"number\"\n                     fullWidth\n                     variant=\"outlined\"\n                     min={0}\n                     value={items.weight}\n                     name={\"itemWeight\" + index}\n                     onChange={updateItemWeight(index)}/>\n                 </TableCell>\n                 <TableCell>\n                   <IconButton aria-label=\"delete\" onClick={() => deleteItemRow(index)}>\n                       <Delete/>\n                    </IconButton>\n                 </TableCell>\n             </TableRow>)\n          })}\n          <TableRow>\n            <TableCell align=\"right\" colSpan=\"10\">LOAD</TableCell>\n            <TableCell>\n              <TextField\n                type=\"number\"\n                fullWidth\n                variant=\"outlined\"\n                name=\"totalLoad\"\n                InputProps={{\n                  readOnly: true,\n                }}\n                value={totalLoad()} />\n            </TableCell>\n            <TableCell>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                name=\"maxLoad\"\n                InputProps={{\n                  readOnly: true,\n                }}\n                value={maxLoad()} />\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>);\n}\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {Add,Delete} from '@material-ui/icons';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {ExpandMore} from '@material-ui/icons';\nimport {Accordion,AccordionSummary,AccordionDetails,Checkbox,IconButton,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TextField} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function CharacterClassFeatures() {\n\n  const classes = useStyles();\n  const {character, setCharacter}= useContext(CharacterState);\n\n  // State manipulation\n  const updateFeatureCheckbox = index => e => {\n    let newFeatures = [...character.classFeatures]; // copying the old array\n    newFeatures[index] = {...character.classFeatures[index], checkbox: e.target.checked}; // replace value\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\n  }\n\n  const updateFeature = index => e => {\n    let newFeatures = [...character.classFeatures]; // copying the old array\n    newFeatures[index] = {...character.classFeatures[index], feature: e.target.value}; // replace value\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\n  }\n\n  // Delete rows in the table\n  const deleteFeatureRow = index => {\n    const newFeatures = [...character.classFeatures]; // copying the old array\n    if (character.classFeatures.length !== 1) { //don't delete last row\n      newFeatures.splice(index, 1); // remove item from array\n      setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  }\n\n  // Add rows in the table\n  const addFeatureRow = () => {\n    const newFeatures = [...character.classFeatures, {feature: \"\", checkbox: false}]; // copying the old array and adding blank item\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\n  }\n\n  return (\n    <Accordion>\n      <AccordionSummary expandIcon={<ExpandMore/>}>Class Features</AccordionSummary>\n      <AccordionDetails>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell colSpan=\"2\" align=\"center\">Feature</TableCell>\n                <TableCell>\n                  <IconButton aria-label=\"add\" onClick={() => addFeatureRow()}>\n                    <Add/>\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n                {\n                 character.classFeatures && character.classFeatures.map((classFeatures,index) => {\n                 return (\n                   <TableRow key={index}>\n                     <TableCell>\n                       <Checkbox\n                         name={\"classFeatureCheckbox\" + index}\n                         checked={!!classFeatures.checkbox}\n                         onChange={updateFeatureCheckbox(index)}\n                         color=\"primary\"\n                         />\n                     </TableCell>\n                       <TableCell>\n                         <TextField\n                          multiline\n                          fullWidth\n                          variant=\"outlined\"\n                           aria-label=\"empty textarea\"\n                           placeholder=\"Add any Class Features here (e.g. Spell Lists, Poison Recipes, Druid Balance, Paladin Quests or anything else!)\"\n                           value={classFeatures.feature}\n                           name={\"classFeature\" + index}\n                           onChange={updateFeature(index)}/>\n                       </TableCell>\n                       <TableCell>\n                         <IconButton aria-label=\"delete\" onClick={() => deleteFeatureRow(index)}>\n                           <Delete/>\n                         </IconButton>\n                       </TableCell>\n                   </TableRow>)\n                })\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </AccordionDetails>\n  </Accordion>);\n}\n","import React from 'react';\nimport {Accordion, AccordionSummary, AccordionDetails} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {standardMoves} from 'data/movesList';\n\nexport default function CharacterStandardMoves() {\n\n  return (<> {\n    standardMoves.map((data, index) => {\n      return (<Accordion key={index}>\n        <AccordionSummary expandIcon={<ExpandMore />}>{data.name}\n        </AccordionSummary>\n        <AccordionDetails>\n          <p dangerouslySetInnerHTML={{__html: data.description}}></p>\n        </AccordionDetails>\n      </Accordion>);\n    })\n  } </>);\n}\n","import React from 'react';\nimport {Accordion,AccordionSummary,AccordionDetails} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {advancedMoves} from 'data/movesList';\n\nexport default function CharacterAdvancedMoves() {\n  return (<>\n        {\n          advancedMoves.map((data,index) => {\n            return (\n              <Accordion key={index}>\n                <AccordionSummary expandIcon={<ExpandMore/>}>{data.name}</AccordionSummary>\n                <AccordionDetails>\n                      <p dangerouslySetInnerHTML={{__html: data.description }}></p>\n                </AccordionDetails>\n              </Accordion>\n              );\n        })\n      }\n    </>);\n}\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {Accordion, AccordionSummary, AccordionDetails} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {classMoves} from 'data/movesList';\n\nexport default function CharacterClassStartingMoves() {\n\n  const {character} = useContext(CharacterState);\n  const dwc = character.dwClass;\n\n  return (<> {\n    dwc && classMoves.[dwc].startingMoves.map((data,index) => {\n      return (<Accordion key={index}>\n        <AccordionSummary expandIcon={<ExpandMore />}>\n          {data.name}\n        </AccordionSummary>\n        <AccordionDetails>\n          <p dangerouslySetInnerHTML={{\n              __html: data.description\n            }}></p>\n        </AccordionDetails>\n      </Accordion>);\n    })\n  } < />)\n}\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {Accordion, AccordionSummary, AccordionDetails} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {classMoves} from 'data/movesList';\n\nexport default function CharacterClassAdvancedMoves2to5() {\n\n  const {character} = useContext(CharacterState);\n  const dwc = character.dwClass;\n\n  return (<> {\n    dwc && classMoves.[dwc].advancedMoves2_5.map((data,index) => {\n      return (<Accordion key={index}>\n        <AccordionSummary expandIcon={<ExpandMore />}>\n          {data.name}\n        </AccordionSummary>\n        <AccordionDetails>\n          <p dangerouslySetInnerHTML={{\n              __html: data.description\n            }}></p>\n        </AccordionDetails>\n      </Accordion>);\n    })\n  } < />)\n}\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {Accordion, AccordionSummary, AccordionDetails} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {classMoves} from 'data/movesList';\n\nexport default function CharacterClassAdvancedMoves6to10() {\n\n  const {character} = useContext(CharacterState);\n  const dwc = character.dwClass;\n\n  return (<> {\n    dwc && classMoves.[dwc].advancedMoves6_10.map((data,index) => {\n      return (<Accordion key={index}>\n        <AccordionSummary expandIcon={<ExpandMore />}>\n          {data.name}\n        </AccordionSummary>\n        <AccordionDetails>\n          <p dangerouslySetInnerHTML={{\n              __html: data.description\n            }}></p>\n        </AccordionDetails>\n      </Accordion>);\n    })\n  } < />)\n}\n","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {AppBar, Box, Tab, Tabs} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport CharacterClassStartingMoves from 'components/character/CharacterClassStartingMoves'\nimport CharacterClassAdvancedMoves2to5 from 'components/character/CharacterClassAdvancedMoves2to5'\nimport CharacterClassAdvancedMoves6to10 from 'components/character/CharacterClassAdvancedMoves6to10'\n\n// Tab functions\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n\n  return (<div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} aria-labelledby={`simple-tab-${index}`} {...other}>\n    {\n      value === index && (<Box p={3}>\n        {children}\n      </Box>)\n    }\n  </div>);\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {id: `simple-tab-${index}`, 'aria-controls': `simple-tabpanel-${index}`};\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default function CharacterClassMoves() {\n\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (<div className={classes.root}>\n    <AppBar position=\"static\">\n      <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n        <Tab label=\"Starting\" {...a11yProps(0)}/>\n        <Tab label=\"Levels 2-5\" {...a11yProps(1)}/>\n        <Tab label=\"Levels 6-10\" {...a11yProps(2)}/>\n      </Tabs>\n    </AppBar>\n    <TabPanel value={value} index={0}>\n      <CharacterClassStartingMoves/>\n    </TabPanel>\n    <TabPanel value={value} index={1}>\n      <CharacterClassAdvancedMoves2to5/>\n    </TabPanel>\n    <TabPanel value={value} index={2}>\n      <CharacterClassAdvancedMoves6to10/>\n    </TabPanel>\n  </div>);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {AppBar,Box,Tab,Tabs} from '@material-ui/core';\nimport CharacterStandardMoves from 'components/character/CharacterStandardMoves'\nimport CharacterAdvancedMoves from 'components/character/CharacterAdvancedMoves'\nimport CharacterClassMoves from 'components/character/CharacterClassMoves'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function CharacterMoves() {\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"Standard\" {...a11yProps(0)} />\n            <Tab label=\"Advanced\" {...a11yProps(1)} />\n            <Tab label=\"Class\" {...a11yProps(2)} />\n          </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <CharacterStandardMoves/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <CharacterAdvancedMoves/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <CharacterClassMoves/>\n      </TabPanel>\n    </div>);\n}\n","import React, {useState} from 'react';\nimport {\n  Button,\n  MenuItem,\n  Select,\n  TextField\n} from '@material-ui/core';\n\nexport default function DiceRoller() {\n\n  const [dice, setDice] = useState();\n  const [diceNum, setDiceNum] = useState();\n  const [rollResult, setRollResult] = useState(0);\n\n  function singleRoll(sides) {\n    const roll = Math.floor(Math.random() * sides) + 1;\n    return roll;\n  }\n\n  function rollDice(sides, diceNum) {\n    sides = parseInt(sides,10);\n    diceNum = parseInt(diceNum,10);\n    let total = 0;\n    for (let i = 0; i < diceNum; i++) {\n      total = total + singleRoll(sides);\n    }\n    return setRollResult(total);\n  }\n\n  return (<>\n    <Select tabIndex={-1} defaultValue=\"null\" onChange={event => {\n        setDice(event.target.value)\n      }}>\n      <MenuItem disabled=\"disabled\" value=\"null\" hidden=\"hidden\"/>\n      <MenuItem value=\"6\">d6</MenuItem>\n      <MenuItem value=\"8\">d8</MenuItem>\n      <MenuItem value=\"10\">d10</MenuItem>\n    </Select>\n    <br/>\n    <Select tabIndex={-1} defaultValue=\"null\" onChange={event => {\n        setDiceNum(event.target.value)\n      }}>\n      <MenuItem disabled=\"disabled\" value=\"null\" hidden=\"hidden\"/>\n      <MenuItem value=\"1\">1</MenuItem>\n      <MenuItem value=\"2\">2</MenuItem>\n      <MenuItem value=\"3\">3</MenuItem>\n    </Select>\n    <Button onClick={()=>rollDice(dice,diceNum)}>Roll</Button>\n    <TextField value={rollResult} />\n  </>);\n}\n","import React, {useState, useEffect, useCallback, useContext, useMemo} from 'react';\nimport {useParams} from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport PropTypes from 'prop-types';\nimport CharacterState from 'components/contexts/CharacterState';\nimport AuthState from 'components/contexts/AuthState';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {AppBar, Box, Tab, Tabs} from '@material-ui/core';\nimport CharacterSheetHeader from 'components/character/CharacterSheetHeader'\nimport CharacterBasicDetails from 'components/character/CharacterBasicDetails'\nimport CharacterType from 'components/character/CharacterType'\nimport CharacterBasicStats from 'components/character/CharacterBasicStats'\nimport CharacterAbilities from 'components/character/CharacterAbilities'\nimport CharacterBonds from 'components/character/CharacterBonds'\nimport CharacterGear from 'components/character/CharacterGear'\nimport CharacterClassFeatures from 'components/character/CharacterClassFeatures'\nimport CharacterMoves from 'components/character/CharacterMoves'\nimport DiceRoller from 'components/other/DiceRoller'\n\n// Tab functions\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n\n  return (<div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} aria-labelledby={`simple-tab-${index}`} {...other}>\n    {\n      value === index && (<Box p={3}>\n        {children}\n      </Box>)\n    }\n  </div>);\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {id: `simple-tab-${index}`, 'aria-controls': `simple-tabpanel-${index}`};\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\n// Debounce function\nconst debounce = (callback, delay) => {\n  let timer;\n  return(...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => callback(...args), delay);\n  }\n}\n\nexport default function CharacterSheet() {\n\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [character, setCharacter] = useState({});\n  const [isSaving, setIsSaving] = useState(false);\n  const {campaignURL, characterURL} = useParams();\n  const {currentUser} = useContext(AuthState);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  // Subscribe to Character Data\n  useEffect(() => {\n    if (campaignURL && characterURL) {\n      const unsubscribe = FirebaseService.streamCharacter(campaignURL, characterURL, {\n        next: documentSnapshot => {\n          setCharacter(documentSnapshot.data());\n        },\n        error: (error) => {\n          alert(\"Failed to load character data correctly, see console error\");\n          console.error(\"Error loading document:\", error);\n        }\n      });\n      return unsubscribe;\n    }\n  }, [campaignURL, characterURL, setCharacter]);\n\n  // Debounced Save\n  const debouncedSave = useCallback(debounce(character => FirebaseService.saveCharacter(campaignURL, characterURL, character).then(() => {\n    setIsSaving(false);\n    console.info('Saved Character:', character);\n  }).catch((error) => {\n    alert(\"Failed to save character data correctly, see console error\");\n    console.error(\"Error saving document:\", error);\n    //If saving fails then it will not retry until the error is rectified\n  }), process.env.DEBOUNCE_SAVE_DELAY_MS), []);\n\n  // Save changes to character\n  useEffect(() => {\n    if (character && Object.keys(character).length >= 1 && currentUser.email === character.owner) {\n      setIsSaving(true);\n      console.info(\"CharacterState:\", character);\n      debouncedSave(character);\n    }\n  }, [character]); //Only trigger effect on change of character\n\n  useEffect(() => {\n    console.info(\"isSaving:\", isSaving)\n  }, [isSaving]); //Only trigger effect on change of saving state\n\n  const ctx = useMemo(() => ({character, setCharacter}), [character]); //Memo-ised state for performance\n\n  return (<CharacterState.Provider value={ctx}>\n    <CharacterSheetHeader/>\n    <br/>\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Character\" {...a11yProps(0)}/>\n          <Tab label=\"Gear\" {...a11yProps(1)}/>\n          <Tab label=\"Moves\" {...a11yProps(2)}/>\n          <Tab label=\"Dice Roller\" {...a11yProps(3)}/>\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <CharacterBasicDetails/>\n        <br/>\n        <CharacterType/>\n        <br/>\n        <CharacterBasicStats/>\n        <br/>\n        <CharacterAbilities/>\n        <br/>\n        <CharacterBonds/>\n        <br/>\n        <CharacterClassFeatures/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <CharacterGear/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <CharacterMoves/>\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <DiceRoller/>\n      </TabPanel>\n    </div>\n  </CharacterState.Provider>);\n}\n","import {createContext} from 'react';\n\nconst CampaignState = createContext();\n\nexport default CampaignState;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useParams} from 'react-router';\nimport {Breadcrumbs} from '@material-ui/core';\n\nexport default function CampaignHeader() {\n\n  const {campaignURL} = useParams();\n\n  return (<div>\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <Link to=\"/dw-react\">Home</Link>\n      <p>{campaignURL}</p>\n    </Breadcrumbs>\n    <h1>Campaign: {campaignURL}</h1>\n  </div>);\n}\n","import React, {useContext, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useParams} from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport AuthState from 'components/contexts/AuthState';\nimport CampaignState from 'components/contexts/CampaignState';\nimport {Add, Delete} from '@material-ui/icons';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField\n} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nexport default function CampaignDetails() {\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const {campaign} = useContext(CampaignState);\n  const [charaName, setCharaName] = useState(\"\");\n  const {currentUser} = useContext(AuthState);\n  const {campaignURL} = useParams();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    setOpen(false);\n    saveCharacter();\n  }\n\n  // Create New Character\n  const saveCharacter = () => {\n    if (campaignURL && charaName) { //don't save unless details present\n      FirebaseService.createCharacter(campaignURL, charaName, currentUser.email).then(() => {\n        console.info('Created Character:', charaName);\n      }).catch((error) => {\n        alert(\"Failed to create character, see console error\");\n        console.error(\"Error creating document:\", error);\n      });\n    } else {\n      alert('Cannot save blank character');\n    }\n  }\n\n  // Delete Character\n  const deleteCharacter = (campaign, character) => {\n    if (campaign && character) { //don't save unless details present\n      FirebaseService.deleteCharacter(campaign, character).then(() => {\n        console.info('Deleted Character:', character);\n      }).catch((error) => {\n        alert(\"Failed to delete character, see console error\");\n        console.error(\"Error deleting document:\", error);\n      });\n    } else {\n      alert('Cannot delete blank character');\n    }\n  }\n\n  return (<>\n    <TableContainer component = {Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Character</TableCell>\n            <TableCell>Owner</TableCell>\n            <TableCell>HP</TableCell>\n            <TableCell>XP</TableCell>\n            <TableCell>\n              <IconButton aria-label=\"add\" onClick={handleClickOpen}>\n                <Add />\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            campaign.campaign && campaign.campaign.map((campaign, index) => {\n              return (<TableRow key={index}>\n                <TableCell>\n                  <Link to={\"/dw-react/\" + campaignURL + \"/\" + campaign.character}>{campaign.character}</Link>\n                </TableCell>\n                <TableCell>{campaign.characterData.owner}</TableCell>\n                <TableCell>{campaign.characterData.hp}</TableCell>\n                <TableCell>{campaign.characterData.xp}</TableCell>\n                <TableCell>\n                  <IconButton aria-label=\"delete\" onClick={() => deleteCharacter(campaignURL, campaign.character)}>\n                    <Delete />\n                  </IconButton>\n                </TableCell>\n              </TableRow>)\n            })\n          }\n        </TableBody>\n      </Table>\n    </TableContainer>\n    <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Create new character</DialogTitle > <DialogContent>\n        <DialogContentText>\n          To create a character, please enter the new character name here. You will not be able to change this once saved.\n        </DialogContentText>\n        <TextField autoFocus={true} margin=\"dense\" id=\"name\" label=\"Short Character Name\" fullWidth={true} onChange={event => setCharaName(event.target.value)}/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleSave} color=\"primary\">\n          Create Character\n        </Button>\n      </DialogActions>\n    </Dialog>\n  </>);\n}\n","import React, {useState, useEffect, useMemo} from 'react';\nimport {useParams} from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CampaignState from 'components/contexts/CampaignState';\nimport CampaignHeader from 'components/campaign/CampaignHeader';\nimport CampaignDetails from 'components/campaign/CampaignDetails';\n\nexport default function CampaignSheet() {\n\n  const [campaign, setCampaign] = useState({});\n  const {campaignURL} = useParams();\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    if (campaignURL) {\n      const unsubscribe = FirebaseService.streamCharacters(campaignURL, {\n        next: querySnapshot => {\n          //const updatedCharacterList = querySnapshot.docs.map((docSnapshot) => { return(docSnapshot.data())});\n          const updatedCharacterList = querySnapshot.docs.map((docSnapshot) => {\n            return ({character: docSnapshot.id, characterData: docSnapshot.data()})\n          });\n          setCampaign(campaign => ({campaign: updatedCharacterList}));\n        },\n        error: (error) => {\n          alert(\"Failed to load campaign data correctly, see console error\");\n          console.error(\"Error loading document:\", error);\n        }\n      });\n      return unsubscribe;\n    }\n  }, [campaignURL, setCampaign]);\n\n  useEffect(() => {\n    console.info(\"Campaign State:\", campaign);\n  }, [campaign]); //Only log to console if state actually changes\n\n  const ctx = useMemo(() => ({campaign, setCampaign}), [campaign]); //Memo-ised state for performance\n\n  return (<CampaignState.Provider value={ctx}>\n    <CampaignHeader/>\n    <br/>\n    <CampaignDetails/>\n  </CampaignState.Provider>);\n}\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {Container, Typography} from '@material-ui/core';\nimport ErrorPage from 'components/ErrorPage'\nimport Homepage from 'components/homepage/Homepage';\nimport AppHeader from 'components/AppHeader';\nimport CharacterSheet from 'components/character/CharacterSheet';\nimport Campaign from 'components/campaign/Campaign';\nimport \"@fontsource/roboto\"\n\nexport default function App() {\n  return (<Typography component={'span'}>\n    <Container>\n      <Router>\n        <AppHeader/>\n        <Switch>\n          <Route exact={true} path=\"/dw-react/:campaignURL/:characterURL\" component={CharacterSheet}/>\n          <Route exact={true} path=\"/dw-react/:campaignURL\" component={Campaign}/>\n          <Route exact={true} path=\"/dw-react\" component={Homepage}/>\n          <Route component={ErrorPage}/>\n        </Switch>\n      </Router>\n    </Container>\n  </Typography>)\n}\n","import React, {useState, useEffect, useMemo} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport * as FirebaseService from 'services/firebase';\nimport AuthState from 'components/contexts/AuthState';\nimport {Button} from '@material-ui/core';\n\nfunction Index() {\n\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const ctx = useMemo(() => ({currentUser}), [currentUser]);\n\n  useEffect(() => {\n    const unsubscribe = FirebaseService.auth.onAuthStateChanged(user => {\n      setCurrentUser(user)\n    });\n    return unsubscribe;\n  }, [])\n\n  return (<AuthState.Provider value={ctx}>\n    {\n      currentUser\n        ? <App/>\n        : <Button variant=\"contained\" color=\"primary\" onClick={FirebaseService.SignInWithGoogle}>SIGN IN WITH GOOGLE</Button>\n    }\n  </AuthState.Provider>);\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Index/>, rootElement);\n"],"sourceRoot":""}