{"version":3,"sources":["components/ErrorPage.js","services/firebase.js","components/homepage/HomepageHeader.js","components/contexts/CreateCampaignState.js","components/contexts/AuthState.js","components/homepage/CreateCampaign.js","components/contexts/HomepageState.js","components/homepage/HomepageDetails.js","components/homepage/Homepage.js","components/NavSidebar.js","components/contexts/ProfileState.js","components/profile/ProfilePicture.js","components/profile/ProfileDetails.js","components/profile/UserProfile.js","components/AppHeader.js","components/contexts/CharacterState.js","components/character/CharacterSheetHeader.js","components/character/CharacterBasicDetails.js","components/character/CharacterType.js","components/character/CharacterDamage.js","components/character/CharacterArmour.js","components/character/CharacterFunds.js","components/character/CharacterHP.js","components/character/CharacterLevel.js","components/character/CharacterXP.js","components/character/CharacterBasicStats.js","components/character/CharacterAbilities.js","components/character/CharacterBonds.js","components/character/CharacterGear.js","components/character/CharacterClassFeatures.js","components/character/CharacterStandardMoves.js","components/character/CharacterAdvancedMoves.js","components/character/CharacterClassMoves.js","components/character/CharacterMoves.js","components/character/CharacterSheet.js","components/contexts/CampaignState.js","components/campaign/CampaignHeader.js","components/contexts/CreateCharacterState.js","components/campaign/CreateCharacter.js","components/campaign/CampaignDetails.js","components/campaign/Campaign.js","components/App.js","index.js"],"names":["ErrorPage","firebase","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","provider","GoogleAuthProvider","SignInWithGoogle","signInWithPopup","setCustomParameters","prompt","HomepageHeader","Breadcrumbs","aria-label","to","CreateCampaignState","React","createContext","AuthState","CreateCampaign","useState","campaignName","setCampaignName","useContext","show","setShow","currentUser","saveCampaign","campaign","owner","email","collection","doc","set","then","console","info","catch","error","alert","style","htmlFor","TextField","multiline","fullWidth","variant","placeholder","name","onChange","event","target","value","Button","color","onClick","HomepageState","useStyles","makeStyles","table","minWidth","HomepageDetails","classes","campaigns","deleteCampaign","delete","Provider","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","IconButton","Add","TableBody","map","index","id","Delete","Homepage","setCampaigns","useEffect","observer","next","querySnapshot","updatedCampaignList","docs","docSnapshot","data","onSnapshot","log","NavSidebar","ProfileState","ProfilePicture","Avatar","src","photoURL","alt","ProfileDetails","displayName","FirebaseService","signOut","UserProfile","theme","root","flexGrow","menuButton","marginRight","spacing","title","AppHeader","AppBar","position","Toolbar","edge","Menu","Typography","CharacterState","CharacterSheetHeader","useParams","campaignURL","characterURL","CharacterBasicDetails","character","setCharacter","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","fullName","backstory","look","formControl","margin","selectEmpty","marginTop","CharacterType","dwc","dwClass","alig","alignment","race","FormControl","Select","tabIndex","MenuItem","disabled","hidden","dwClasses","key","races","InputProps","readOnly","classDetails","raceAttributes","alignments","alignmentAttributes","CharacterDamage","label","damage","CharacterArmour","type","min","armour","CharacterFunds","funds","CharacterHP","hp","abilities","baseHp","parseInt","find","x","category","score","CharacterLevel","level","CharacterXP","xp","CharacterBasicStats","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","CharacterAbilities","updateAbilityScore","e","newAbilities","updateAbilityAffliction","affliction","abilityModifier","abilityScore","abilityAffliction","baseModifier","indexOf","modifier","max","ab","abilityAfflictions","CharacterBonds","updateBond","newBonds","bonds","bond","align","addBondsRow","length","splice","deleteBondRow","CharacterGear","updateItem","newItems","items","item","updateItemWeight","weight","colSpan","addItemRow","deleteItemRow","reduce","totalLoad","str","baseLoad","maxLoad","CharacterClassFeatures","updateFeatureCheckbox","newFeatures","classFeatures","checkbox","checked","updateFeature","feature","addFeatureRow","Checkbox","deleteFeatureRow","CharacterStandardMoves","standardMoves","dangerouslySetInnerHTML","__html","description","CharacterAdvancedMoves","advancedMoves","CharacterClassMoves","classMoves","startingMoves","TabPanel","props","children","other","role","aria-labelledby","Box","p","a11yProps","backgroundColor","palette","background","paper","CharacterMoves","setValue","Tabs","newValue","Tab","CharacterSheet","isSaving","setIsSaving","documentSnapshot","debouncedSave","useCallback","callback","delay","timer","args","clearTimeout","setTimeout","debounce","DEBOUNCE_SAVE_DELAY_MS","Object","keys","CampaignState","CampaignHeader","CreateCharacterState","CreateCharacter","charaName","setCharaName","saveCharacter","CampaignDetails","deleteCharacter","characterData","CampaignSheet","setCampaign","updatedCharacterList","App","Container","exact","path","Campaign","Index","setCurrentUser","onAuthStateChanged","user","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e7f0529d.chunk.js","sourcesContent":["import React from 'react';\n\nfunction ErrorPage() {\n  return (\n      <h1>Oops! Page not found!</h1>\n    );\n}\n\nexport default ErrorPage;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Initialise Firebase and setting up firestore and auth for use later\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\n\n// Authenticate with Firebase-auth using the Google provider object\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport function SignInWithGoogle() {\n  auth.signInWithPopup(provider)\n};\n\n// Firestore operations\n\n// Create new blank campaign\nexport function createCampaign(campaign,owner) {\n  return db.collection(\"campaigns\")\n    .doc(campaign).set({owner: owner})\n};\n\n// Create new blank character\nexport function createCharacter(campaign,charaName,owner) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .doc(charaName)\n    .set({\n      abilities: [\n        {category: \"STR\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"DEX\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"CON\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"INT\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"WIS\", score: \"1\", affliction: \"Unafflicted\"},\n        {category: \"CHA\", score: \"1\", affliction: \"Unafflicted\"}\n      ],\n      alignment: \"\",\n      armour: \"\",\n      backstory: \"\",\n      bonds: [\n        {bond: \"\"},\n      ],\n      classFeatures: [\n        {feature: \"\", checkbox: false}\n      ],\n      dwClass: \"\",\n      fullName: \"\",\n      funds: \"\",\n      hp: \"\",\n      items: [\n        {item: \"\", weight: \"\"},\n      ],\n      level: \"\",\n      look: \"\",\n      owner: owner,\n      race: \"\",\n      xp: \"\"\n    });\n};\n// Save Character\nexport function saveCharacter(campaign, character, data) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .doc(character)\n    .set(data);\n};\n\n// Stream Campaign Data (all Campaigns)\nexport function streamCampaigns(observer) {\n  return db.collection(\"campaigns\")\n    .onSnapshot(observer);\n};\n// Stream Character Data (all Characters)\nexport function streamCharacters(campaign, observer) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .onSnapshot(observer);\n};\n// Stream Character Data (selected Characters)\nexport function streamCharacter(campaign, character, observer) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .doc(character)\n    .onSnapshot(observer);\n};\n// Delete Campaign\nexport function deleteCampaign(campaign) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .delete()\n};\n// Delete Characters\nexport function deleteCharacter(campaign, character) {\n  return db.collection(\"campaigns\")\n    .doc(campaign)\n    .collection(\"characters\")\n    .doc(character)\n    .delete()\n};\n\n// Default Export\nexport default firebase;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Breadcrumbs} from '@material-ui/core';\n\n\nfunction HomepageHeader() {\n\n  return (\n  <div>\n    <p></p>\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <Link to=\"/dw-react\">Home</Link>\n    </Breadcrumbs>\n    <h1>Campaigns Homepage</h1>\n  </div>);\n}\n\nexport default HomepageHeader;\n","import React from 'react';\n\nconst CreateCampaignState = React.createContext();\n\nexport default CreateCampaignState;\n","import React from 'react';\n\nconst AuthState = React.createContext(null);\n\nexport default AuthState;\n","import React, {useState,useContext} from 'react';\nimport * as FirebaseService from 'services/firebase';\nimport CreateCampaignState from 'components/contexts/CreateCampaignState';\nimport AuthState from 'components/contexts/AuthState';\nimport {Button,TextField} from '@material-ui/core';\n\nfunction CreateCampaign() {\n\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [show,setShow] = useContext(CreateCampaignState);\n  const [currentUser] = useContext(AuthState);\n  const toggleSetShow = () => setShow(!show);\n\n  // Create New Character\n  const saveCampaign = () => {\n    if (campaignName) { //don't save unless details present\n      FirebaseService.createCampaign(campaignName,currentUser.email)\n      .then(() => {\n        console.info('Created Campaign:', campaignName);\n        toggleSetShow();\n      })\n      .catch((error) => {\n        alert(\"Failed to create campaign, see console error\");\n        console.error(\"Error creating document:\", error);\n      });\n    } else {\n      alert('Cannot save blank campaign');\n    }\n  }\n\n  return (\n  <>\n  <table style={{\"width\" : \"100%\"}}>\n    <tbody>\n      <tr>\n        <th style={{\"width\" : \"25%\"}}>\n          <label htmlFor=\"campName\">CAMPAIGN NAME</label>\n        </th>\n        <td>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            placeholder=\"Add your new Campaign Name, you wont be able to change this one saved\" name=\"campName\"\n            onChange={event => setCampaignName(event.target.value)}/>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <Button variant=\"contained\" color=\"primary\" onClick={() => saveCampaign()}>Save Campaign</Button>\n  </>\n);\n}\n\nexport default CreateCampaign;\n","import React from 'react';\n\nconst HomepageState = React.createContext([{}, () => {}]);\n\nexport default HomepageState;\n","import React, {useContext,useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport * as FirebaseService from 'services/firebase';\nimport CreateCampaign from 'components/homepage/CreateCampaign';\nimport CreateCampaignState from 'components/contexts/CreateCampaignState';\nimport HomepageState from 'components/contexts/HomepageState';\nimport {Add,Delete} from '@material-ui/icons';\nimport {IconButton,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction HomepageDetails() {\n\n  const classes = useStyles();\n\n  // Definitions for state\n  const [campaigns] = useContext(HomepageState);\n  const [show, setShow] = useState(false);\n  const toggleSetShow = () => setShow(!show);\n\n  const deleteCampaign = (campaignName) => {\n    if (campaignName) { //don't save unless details present\n      FirebaseService.deleteCampaign(campaignName).then(() => {\n        console.info('Deleted Campaign:', campaignName);\n      }).catch((error) => {\n        alert(\"Failed to delete campaign, see console error\");\n        console.error(\"Error deleting document:\", error);\n      });\n    } else {\n      alert('Cannot delete blank campaign');\n    }\n  }\n\n  return (\n    <CreateCampaignState.Provider value={[show, setShow]}>\n    <TableContainer component={Paper}>\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Campaign</TableCell>\n          <TableCell>Owner</TableCell>\n          <TableCell>\n            <IconButton aria-label=\"add\">\n            <Add onClick={() => toggleSetShow()}/>\n            </IconButton>\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {\n          campaigns.campaigns && campaigns.campaigns.map((campaign, index) => {\n            return (<TableRow key={index}>\n              <TableCell>\n                <Link to={\"/dw-react/\" + campaign.id}>{campaign.id}</Link>\n              </TableCell>\n              <TableCell>\n                {campaign.owner}\n              </TableCell>\n              <TableCell>\n                <IconButton aria-label=\"delete\"><Delete onClick={() => deleteCampaign(campaign.id)} />\n                </IconButton>\n              </TableCell>\n            </TableRow>)\n          })\n        }\n      </TableBody>\n    </Table>\n  </TableContainer>\n      {\n        show\n          ? <CreateCampaign/>\n          : null\n      }\n    </CreateCampaignState.Provider>\n);\n}\n\nexport default HomepageDetails;\n","import React, {useState, useEffect} from 'react';\nimport * as FirebaseService from 'services/firebase';\nimport HomepageHeader from 'components/homepage/HomepageHeader';\nimport HomepageDetails from 'components/homepage/HomepageDetails';\nimport HomepageState from 'components/contexts/HomepageState';\n\nfunction Homepage() {\n\n  // Definitions for state\n  const [campaigns, setCampaigns] = useState({});\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    const unsubscribe = FirebaseService.streamCampaigns({\n      next: querySnapshot => {\n        const updatedCampaignList = querySnapshot.docs.map((docSnapshot) => {\n          return ({id: docSnapshot.id, owner: docSnapshot.data().owner})\n        });\n        setCampaigns(campaign => ({campaigns: updatedCampaignList}));\n      },\n      error: (error) => {\n        alert(\"Failed to load data correctly, see console error\");\n        console.error(\"Error loading data:\", error);\n      }\n    });\n    return unsubscribe;\n  }, [setCampaigns]);\n\n  console.log(\"Campaigns State:\", campaigns)\n\n  return (\n  <HomepageState.Provider value={[campaigns, setCampaigns]}>\n    <HomepageHeader/>\n    <br/>\n    <HomepageDetails/>\n  </HomepageState.Provider>);\n}\n\nexport default Homepage;\n","import React from 'react';\n\nfunction NavSidebar() {\n  return (\n    <div>\n    </div>);\n}\n\nexport default NavSidebar\n","import React from 'react';\n\nconst ProfileState = React.createContext();\n\nexport default ProfileState;\n","import React, {useContext} from 'react';\nimport AuthState from 'components/contexts/AuthState';\nimport ProfileState from 'components/contexts/ProfileState';\nimport Avatar from '@material-ui/core/Avatar';\n\nfunction ProfilePicture() {\n\n  const [currentUser] = useContext(AuthState);\n  const [show,setShow] = useContext(ProfileState);\n  const toggleSetShow = () => setShow(!show);\n\n  return (<Avatar\n    src={currentUser.photoURL}\n    alt=\"Google Profile\"\n    onClick={() => toggleSetShow()}\n    />);\n}\n\nexport default ProfilePicture;\n","import React, {useContext} from 'react';\nimport AuthState from 'components/contexts/AuthState';\nimport * as FirebaseService from 'services/firebase';\nimport ProfileState from 'components/contexts/ProfileState';\nimport {Button} from '@material-ui/core';\n\nfunction ProfileDetails() {\n\n  const [currentUser] = useContext(AuthState);\n  const [show,setShow] = useContext(ProfileState);\n  const toggleSetShow = () => setShow(!show);\n\n    return (\n      <div>\n        <div>Google Account</div>\n        <div>{currentUser.displayName}</div>\n        <div>{currentUser.email}</div>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => FirebaseService.auth.signOut()}>LOG OUT</Button>\n      </div>\n    );\n}\n\nexport default ProfileDetails;\n","import React, {useContext,useState} from 'react';\nimport ProfilePicture from 'components/profile/ProfilePicture';\nimport ProfileDetails from 'components/profile/ProfileDetails';\nimport ProfileState from 'components/contexts/ProfileState';\n\nfunction UserProfile() {\n\n  const [show, setShow] = useState(false);\n\n  return (\n<ProfileState.Provider value={[show, setShow]}>\n    <div>\n    <ProfilePicture/>\n    {\n      show\n        ? <ProfileDetails/>\n        : null\n    }\n  </div>\n</ProfileState.Provider>);\n}\n\nexport default UserProfile;\n","import React from 'react';\nimport {AppBar,IconButton,Toolbar,Typography} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Menu} from '@material-ui/icons';\nimport UserProfile from 'components/profile/UserProfile';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction AppHeader() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Dungeon World Character Sheet (v0.10.0 by Godmar02)\n          </Typography>\n          <UserProfile/>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default AppHeader;\n","import React from 'react';\n\nconst CharacterState = React.createContext([{}, () => {}]);\n\nexport default CharacterState;\n","import React, {useContext} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useParams} from 'react-router';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {Breadcrumbs} from '@material-ui/core';\n\nfunction CharacterSheetHeader() {\n\n  // Definitions for state\n  const [character] = useContext(CharacterState);\n\n  // retrieve URL parameters for usage\n  const {campaignURL, characterURL} = useParams();\n\n  return (\n  <>\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <Link to=\"/dw-react\">Home</Link>\n      <Link to={\"/dw-react/\" + campaignURL}>{campaignURL}</Link>\n      <p>\n        {characterURL}</p>\n    </Breadcrumbs>\n      <h1>Character: {characterURL}</h1>\n    </>);\n}\n\nexport default CharacterSheetHeader;\n","import React, {useContext} from 'react';\nimport {Accordion,AccordionSummary,AccordionDetails,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TextField} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CharacterState from 'components/contexts/CharacterState';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction CharacterBasicDetails() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  const classes = useStyles();\n\n  return (\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMore />}>Basic Details\n      </AccordionSummary>\n      <AccordionDetails>\n        <TableContainer component={Paper}>\n    <Table className={classes.table} aria-label=\"simple table\">\n    <TableBody>\n      <TableRow>\n        <th style={{\"width\" : \"25%\"}}>\n          <label htmlFor=\"fullName\">FULL NAME</label>\n        </th>\n        <TableCell>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            placeholder=\"Add your characters full name here\"\n            value={character.fullName}\n            name=\"fullName\"\n            onChange={event => setCharacter(character => ({...character,fullName: event.target.value}))}/>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <th style={{\"width\" : \"25%\"}}>\n          <label htmlFor=\"backstory\">BACKSTORY</label>\n        </th>\n        <TableCell>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            placeholder=\"Describe your character's backstory and anything else about your characters identity here\"\n            value={character.backstory}\n            name=\"backstory\"\n            onChange={event => setCharacter(character => ({...character,backstory: event.target.value}))}/>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <th style={{\"width\" : \"25%\"}}>\n          <label htmlFor=\"look\">LOOK</label>\n        </th>\n        <TableCell>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            placeholder=\"Describe your character's appearance here\"\n            name=\"look\"\n            value={character.look}\n            onChange={event => setCharacter(character => ({...character,look: event.target.value}))}/>\n        </TableCell>\n      </TableRow>\n    </TableBody>\n  </Table></TableContainer></AccordionDetails>\n</Accordion>\n          );\n}\n\nexport default CharacterBasicDetails;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {races} from 'data/raceList';\nimport {dwClasses} from 'data/classList';\nimport {alignments} from 'data/classAlignments';\nimport {classDetails} from 'data/classDetails';\nimport {Accordion,AccordionSummary,AccordionDetails,FormControl,MenuItem,Paper,Select,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TextField} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nfunction CharacterType() {\n\n  const classes = useStyles();\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n  const dwc = character.dwClass;\n  const alig = character.alignment;\n  const race = character.race;\n\n  const raceAttributes = () => {\n    if (character.dwClass && character.race) {\n      return (classDetails.[dwc].raceAttributes.[race]);\n    } else {\n      return ('');\n    }\n  };\n\n  const alignmentAttributes = () => {\n    if (character.dwClass && character.alignment) {\n      return (classDetails.[dwc].alignmentAttributes.[alig]);\n    } else {\n      return ('');\n    }\n  };\n\n  return (\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMore />}>Character Type\n      </AccordionSummary>\n      <AccordionDetails>\n        <TableContainer component={Paper}>\n  <Table className={classes.table} aria-label=\"simple table\">\n    <TableBody>\n      <TableRow>\n        <th>CLASS\n        </th>\n        <TableCell style={{\"width\" : \"25%\"}}>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Select\n            tabIndex={-1}\n            value={character.dwClass || \"null\"}\n            onChange={event => {\n              setCharacter(character => ({...character,dwClass: event.target.value}));\n              setCharacter(character => ({...character,alignment: \"null\"}))}}>\n            <MenuItem disabled value=\"null\" hidden />\n            {\n              dwClasses.map((data, key) => {\n                return (\n                <MenuItem value={data} key={key}>\n                  {data}\n                </MenuItem>);\n              })\n            }\n          </Select>\n          </FormControl>\n        </TableCell>\n        <TableCell style={{\"width\" : \"50%\"}}/>\n      </TableRow>\n      <TableRow>\n        <th>\n          <label htmlFor=\"race\">RACE</label>\n        </th>\n        <TableCell>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Select\n            tabIndex={-1}\n            value={character.race || \"null\"}\n            name=\"race\"\n            onChange={event => setCharacter(character => ({...character,race: event.target.value}))}>\n            <MenuItem disabled value=\"null\" hidden />\n            {\n              races.map((data, key) => {\n                return (\n                <MenuItem value={data} key={key}>\n                  {data}\n                </MenuItem>);\n              })\n            }\n          </Select>\n          </FormControl>\n        </TableCell>\n        <TableCell>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n\n            name=\"raceAttributes\"\n            InputProps={{\n              readOnly: true,\n            }}\n            value={raceAttributes()}/>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <th>\n          <label htmlFor=\"alignment\">ALIGNMENT</label>\n        </th>\n        <TableCell>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Select\n            tabIndex={-1}\n            value={character.alignment || \"null\"}\n            name=\"alignment\"\n            onChange={event => setCharacter(character => ({...character,alignment: event.target.value}))}>\n            <MenuItem disabled value=\"null\" hidden />\n            {\n              character.dwClass && dwc && alignments.[dwc].map((data, key) => {\n              return (\n              <MenuItem value={data} key={key}>\n                {data}\n              </MenuItem>);})\n            }\n          </Select>\n        </FormControl>\n        </TableCell>\n        <TableCell>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n\n            name=\"alignmentAttribute\"\n            InputProps={{\n              readOnly: true,\n            }}\n            value={alignmentAttributes()}/>\n        </TableCell>\n      </TableRow>\n    </TableBody>\n  </Table></TableContainer>\n</AccordionDetails>\n</Accordion>\n          );\n}\n\nexport default CharacterType;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {classDetails} from 'data/classDetails';\nimport {TextField} from '@material-ui/core';\n\nfunction CharacterDamage() {\n\n  // State Variables\n  const [character] = useContext(CharacterState);\n  const dwc = character.dwClass;\n\n  const damage = () => {\n    if (character.dwClass) {\n      return (classDetails.[dwc].damage);\n    } else {\n      return ('');\n    }\n  };\n\n  return (\n            <TextField\n              variant=\"outlined\"\n              name=\"damage\"\n              label=\"Damage\"\n              InputProps={{\n                readOnly: true,\n              }}\n              value={damage()}/>\n  );\n}\nexport default CharacterDamage;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {TextField} from '@material-ui/core';\n\nfunction CharacterArmour() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  return (\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              label=\"Armour\"\n              min={0}\n              name=\"armour\" value={character.armour || ''} onChange={event => setCharacter(character => ({...character,armour: event.target.value}))}/>\n  );\n}\n\nexport default CharacterArmour;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {TextField} from '@material-ui/core';\n\nfunction CharacterFunds() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  return (\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              name=\"funds\"\n              label=\"Funds\"\n              min={0}\n              value={character.funds || ''}\n              onChange={event => setCharacter(character => ({...character,funds: event.target.value}))}/>\n  );\n}\n\nexport default CharacterFunds;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {classDetails} from 'data/classDetails';\nimport {TextField} from '@material-ui/core';\n\nfunction CharacterHP() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  const dwc = character.dwClass;\n  const maxHp = () => {\n    if (character.dwClass && character.abilities) {\n      return (\"/ \" + (classDetails.[dwc].baseHp + parseInt(character.abilities.find(x => x.category === 'CON').score ,10)));\n    } else {\n      return ('');\n    }\n  };\n\n  return (<>\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              label=\"HP\"\n              min={0}\n\n              name=\"hp\"\n              value={character.hp || ''}\n              onChange={event => setCharacter(character => ({...character,hp: event.target.value}))}/>\n            <TextField\n              variant=\"outlined\"\n\n              label=\"Max HP\"\n              name=\"maxHp\"\n              InputProps={{\n                readOnly: true,\n              }}\n              value={maxHp()} />\n            </>\n  );\n}\n\nexport default CharacterHP;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {TextField} from '@material-ui/core';\n\nfunction CharacterLevel() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  return (\n\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              label=\"Level\"\n              min={1}\n\n              name=\"level\"\n              value={character.level || ''}\n              onChange={event => setCharacter(character => ({...character,level: event.target.value}))}/>\n          );\n}\n\nexport default CharacterLevel;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {TextField} from '@material-ui/core';\n\nfunction CharacterXP() {\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  // Total Load\n  const calcMaxXp = () => {\n    if (character.level) {\n      return (\"/ \" + (parseInt(character.level,10) + 7));\n    } else {\n      return ('');\n    }\n  };\n\n  return (<>\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              label=\"XP\"\n              min={0}\n\n              name=\"xp\"\n              value={character.xp || ''}\n              onChange={event => setCharacter(character => ({...character,xp: event.target.value}))}/>\n            <TextField\n              variant=\"outlined\"\n\n              label=\"Max XP\"\n              name=\"maxXp\"\n              InputProps={{\n                readOnly: true,\n              }}\n              value={calcMaxXp()} />\n            </>);\n}\n\nexport default CharacterXP;\n","import React from 'react';\nimport {Accordion,AccordionSummary,AccordionDetails} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport CharacterDamage from 'components/character/CharacterDamage'\nimport CharacterArmour from 'components/character/CharacterArmour'\nimport CharacterFunds from 'components/character/CharacterFunds'\nimport CharacterHP from 'components/character/CharacterHP'\nimport CharacterLevel from 'components/character/CharacterLevel'\nimport CharacterXP from 'components/character/CharacterXP'\n\nfunction CharacterBasicStats() {\n\n  return (\n  <div>\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMore />}>Basic Stats\n      </AccordionSummary>\n      <AccordionDetails>\n    <CharacterLevel/>\n    <CharacterXP/>\n    <CharacterDamage/>\n    <CharacterArmour/>\n    <CharacterFunds/>\n    <CharacterHP/>\n    </AccordionDetails>\n  </Accordion>\n  </div>);\n}\n\nexport default CharacterBasicStats;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {abilityAfflictions} from 'data/abilityAfflictions';\nimport {Accordion,AccordionSummary,AccordionDetails,FormControl,MenuItem,Select,TextField} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction CharacterAbilities() {\n\n  const classes = useStyles();\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  const updateAbilityScore = index => e => {\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {...character.abilities[index], score: e.target.value}; // replace value\n    setCharacter(character => ({...character, abilities: newAbilities})); // set array back\n  }\n\n  const updateAbilityAffliction = index => e => {\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {...character.abilities[index], affliction: e.target.value}; // replace value\n    setCharacter(character => ({...character, abilities: newAbilities})); // set array back\n  }\n\n  const abilityModifier = (abilityScore, abilityAffliction) => {\n\n    if (abilityScore && abilityAffliction) {\n    let baseModifier;\n    let afflicted;\n\n    abilityScore = parseInt(abilityScore,10);\n\n    if ([1, 2, 3].indexOf(abilityScore) > -1) {\n      baseModifier = -3;\n    } else if ([4, 5].indexOf(abilityScore) > -1) {\n      baseModifier = -2;\n    } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n      baseModifier = -1;\n    } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n      baseModifier = 0;\n    } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n      baseModifier = 1;\n    } else if ([16, 17].indexOf(abilityScore) > -1) {\n      baseModifier = 2;\n    } else if (abilityScore === 18) {\n      baseModifier = 3;\n    }\n\n    /*-1 if afflicted*/\n    if (abilityAffliction === \"Unafflicted\") {\n      afflicted = 0;\n    } else {\n      afflicted = 1;\n    }\n\n    let modifier = (baseModifier - afflicted);\n\n    if (modifier > 0) {\n      return(\"[+\" + modifier+ \"]\");\n    } else {\n      return (\"[\" + modifier + \"]\");\n    }\n  } else {\n    return ('')\n  }\n  }\n\n  return (\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMore />}>Abilities\n      </AccordionSummary>\n      <AccordionDetails>\n     <table style={{\"width\":\"100%\"}}>\n       <thead>\n         <tr>\n           {\n            character.abilities && character.abilities.map((abilities, index) => {\n            return (\n              <th key={index}>\n                <label\n                  htmlFor={abilities.category}\n                  value={abilities.category}\n                  name={abilities.category}>\n                  {abilities.category}\n                </label>\n              </th>)\n           })\n         }\n         </tr>\n       </thead>\n       <tbody>\n         <tr>\n           {\n            character.abilities && character.abilities.map((abilities, index) => {\n            return (\n              <td key={index}>\n                <TextField\n                  type=\"number\"\n                  variant=\"outlined\"\n                  min={1} max={18}\n                  name={abilities.category + \"Score\"}\n                  value={abilities.score}\n                  onChange={updateAbilityScore(index)} />\n            </td>)\n           })\n         }\n         </tr>\n         <tr>\n           {\n            character.abilities && character.abilities.map((abilities, index) => {\n            return (\n              <td key={index}>\n                <TextField\n                  variant=\"outlined\"\n                  name={abilities.category + \"Modifier\"}\n                  value={abilityModifier(abilities.score, abilities.affliction)}\n                  InputProps={{\n                    readOnly: true,\n                  }} />\n            </td>)\n           })\n         }\n         </tr>\n         <tr>\n           {\n            character.abilities && character.abilities.map((abilities,index) => {\n            const ab = abilities.category;\n            return (\n              <td key={index}>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classes.formControl}>\n                <Select\n                  tabIndex={-1}\n                  value={abilities.affliction || \"null\"}\n                  name={abilities.category + \"Affliction\"}\n                  onChange={updateAbilityAffliction(index)}>\n                  <MenuItem disabled value=\"null\" hidden />\n                    {\n                      abilityAfflictions.[ab].map((data, key) => {\n                        return (\n                        <MenuItem value={data} key={key}>\n                          {data}\n                        </MenuItem>);\n                      })\n                    }\n                </Select>\n              </FormControl>\n              </td>)\n           })\n         }\n         </tr>\n       </tbody>\n     </table>\n   </AccordionDetails>\n   </Accordion>\n    );\n}\n\nexport default CharacterAbilities;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {Add,Delete} from '@material-ui/icons';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {ExpandMore} from '@material-ui/icons';\nimport {Accordion,AccordionSummary,AccordionDetails,IconButton,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TextField} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nfunction CharacterBonds() {\n\n  const classes = useStyles();\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  // State manipulation\n  const updateBond = index => e => {\n    let newBonds = [...character.bonds]; // copying the old array\n    newBonds[index] = {...character.bonds[index], bond: e.target.value}; // replace value\n    setCharacter(character => ({...character, bonds: newBonds})); // set array back\n  }\n\n  // Delete rows in the table\n  const deleteBondRow = index => {\n    const newBonds = [...character.bonds]; // copying the old array\n    if (character.bonds.length !== 1) { //don't delete last row\n      newBonds.splice(index, 1); // remove item from array\n      setCharacter(character => ({...character, bonds: newBonds})); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  }\n\n  // Add rows in the table\n  const addBondsRow = () => {\n    const newBonds = [...character.bonds, {bond: \"\"}]; // copying the old array and adding blank item\n    setCharacter(character => ({...character, bonds: newBonds})); // set array back\n  }\n\n  return (<Accordion>\n    <AccordionSummary\n      expandIcon={<ExpandMore />}>Bonds\n    </AccordionSummary>\n    <AccordionDetails>\n      <TableContainer component={Paper}>\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>\n          <TableCell align=\"center\">Bond</TableCell>\n          <TableCell>\n            <IconButton aria-label=\"add\">\n            <Add onClick={() => addBondsRow()}/>\n            </IconButton>\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {\n         character.bonds && character.bonds.map((bonds,index) => {\n         return (\n           <TableRow key={index}>\n               <TableCell>\n                 <TextField\n                   multiline\n                   fullWidth\n                   variant=\"outlined\"\n                   aria-label=\"empty textarea\"\n                   placeholder=\"Add 2-3 bonds here\"\n                   value={bonds.bond}\n                   name={\"bond\" + index}\n                   onChange={updateBond(index)}\n                   />\n               </TableCell>\n               <TableCell>\n                 <IconButton aria-label=\"delete\">\n                   <Delete\n                   onClick={() => deleteBondRow(index)}/>\n                 </IconButton>\n               </TableCell>\n           </TableRow>)\n        })\n      }\n      </TableBody>\n      <tfoot/>\n    </Table>\n    </TableContainer>\n  </AccordionDetails>\n  </Accordion>\n    );\n}\n\nexport default CharacterBonds;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {classDetails} from 'data/classDetails';\nimport {Add,Delete} from '@material-ui/icons';\nimport {IconButton,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TextField} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction CharacterGear() {\n\n  const classes = useStyles();\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n  const dwc = character.dwClass;\n\n  // Total Load\n  const totalLoad = () => {\n    if (character.items) {\n      return (character.items.reduce((totalLoad,data) => totalLoad + parseInt((data.weight || 0),10) ,0));\n    } else {\n      return ('');\n    }\n  };\n\n  // Max Load\n  const maxLoad = () => {\n\n    if (character.dwClass && character.abilities.find(x => x.category === 'STR').score && character.abilities.find(x => x.category === 'STR').affliction) {\n      let str = character.abilities.find(x => x.category === 'STR');\n      let baseModifier;\n      let abilityAffliction = str.affliction;\n      let abilityScore = parseInt(str.score,10);\n      let afflicted;\n\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\n        baseModifier = -3;\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\n        baseModifier = -2;\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n        baseModifier = -1;\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n        baseModifier = 0;\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n        baseModifier = 1;\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\n        baseModifier = 2;\n      } else if (abilityScore === 18) {\n        baseModifier = 3;\n      }\n\n      /*-1 if afflicted*/\n      if (abilityAffliction === \"Unafflicted\") {\n        afflicted = 0;\n      } else {\n        afflicted = 1;\n      }\n\n      let modifier = (baseModifier - afflicted);\n\n      return (\"/ \" + (classDetails.[dwc].baseLoad + modifier));\n    } else {\n      return ('');\n    }\n  };\n\n  // State manipulation\n  const updateItem = index => e => {\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = {...character.items[index], item: e.target.value}; // replace value\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n\n  const updateItemWeight = index => e => {\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = {...character.items[index], weight: e.target.value}; // replace value\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n\n  // Delete rows in the table\n  const deleteItemRow = index => {\n    const newItems = [...character.items]; // copying the old array\n    if (character.items.length !== 1) { //don't delete last row\n      newItems.splice(index, 1); // remove item from array\n      setCharacter(character => ({...character, items: newItems})); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  }\n\n  // Add rows in the table\n  const addItemRow = () => {\n    const newItems = [...character.items, {item: \"\", weight: \"\"}]; // copying the old array and adding blank item\n    setCharacter(character => ({...character, items: newItems})); // set array back\n  }\n  //,\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n        <TableRow>\n          <TableCell align=\"center\" colSpan=\"4\">ITEM</TableCell>\n          <TableCell align=\"center\" colSpan=\"2\">WEIGHT</TableCell>\n          <TableCell>\n            <IconButton aria-label=\"add\">\n            <Add\n              onClick={() => addItemRow()}\n            />\n        </IconButton>\n        </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {\n         character.items && character.items.map((items,index) => {\n         return (\n           <TableRow key={index}>\n               <TableCell colSpan=\"4\">\n                 <TextField\n                   multiline\n                   fullWidth\n                   variant=\"outlined\"\n                   aria-label=\"empty textarea\"\n                   placeholder=\"Add any items and descriptions here\"\n                   value={items.item}\n                   name={\"item\" + index}\n                   onChange={updateItem(index)}/>\n               </TableCell>\n               <TableCell colSpan=\"2\">\n                 <TextField\n                   type=\"number\"\n                   fullWidth\n                   variant=\"outlined\"\n                   min={0}\n                   value={items.weight}\n                   name={\"itemWeight\" + index}\n                   onChange={updateItemWeight(index)}/>\n               </TableCell>\n               <TableCell>\n                 <IconButton aria-label=\"delete\">\n                     <Delete\n                   onClick={() => deleteItemRow(index)}/>\n                  </IconButton>\n               </TableCell>\n           </TableRow>)\n        })\n      }\n      <TableRow>\n        <TableCell align=\"right\" colSpan=\"4\">LOAD</TableCell>\n        <TableCell>\n          <TextField\n            type=\"number\"\n            fullWidth\n            variant=\"outlined\"\n            name=\"totalLoad\"\n            InputProps={{\n              readOnly: true,\n            }}\n            value={totalLoad()} />\n        </TableCell>\n        <TableCell>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            name=\"maxLoad\"\n            InputProps={{\n              readOnly: true,\n            }}\n            value={maxLoad()} />\n        </TableCell>\n        <td />\n      </TableRow>\n    </TableBody>\n    </Table>\n  </TableContainer>\n    );\n}\n\nexport default CharacterGear;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {Add,Delete} from '@material-ui/icons';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {ExpandMore} from '@material-ui/icons';\nimport {Accordion,AccordionSummary,AccordionDetails,Checkbox,IconButton,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TextField} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nfunction CharacterClassFeatures() {\n\n  const classes = useStyles();\n\n  // State Variables\n  const [character, setCharacter] = useContext(CharacterState);\n\n  // State manipulation\n  const updateFeatureCheckbox = index => e => {\n    let newFeatures = [...character.classFeatures]; // copying the old array\n    newFeatures[index] = {...character.classFeatures[index], checkbox: e.target.checked}; // replace value\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\n  }\n\n  const updateFeature = index => e => {\n    let newFeatures = [...character.classFeatures]; // copying the old array\n    newFeatures[index] = {...character.classFeatures[index], feature: e.target.value}; // replace value\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\n  }\n\n  // Delete rows in the table\n  const deleteFeatureRow = index => {\n    const newFeatures = [...character.classFeatures]; // copying the old array\n    if (character.classFeatures.length !== 1) { //don't delete last row\n      newFeatures.splice(index, 1); // remove item from array\n      setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  }\n\n  // Add rows in the table\n  const addFeatureRow = () => {\n    const newFeatures = [...character.classFeatures, {feature: \"\", checkbox: false}]; // copying the old array and adding blank item\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\n  }\n\n  return (\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMore />}>Class Features\n      </AccordionSummary>\n      <AccordionDetails>\n        <TableContainer component={Paper}>\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>\n          <TableCell colSpan=\"2\" align=\"center\">Feature</TableCell>\n          <TableCell>\n            <IconButton aria-label=\"add\">\n            <Add\n              onClick={() => addFeatureRow()}\n            />\n          </IconButton>\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n          {\n           character.classFeatures && character.classFeatures.map((classFeatures,index) => {\n           return (\n             <TableRow key={index}>\n               <TableCell>\n                 <Checkbox\n                   name={\"classFeatureCheckbox\" + index}\n                   checked={!!classFeatures.checkbox}\n                   onChange={updateFeatureCheckbox(index)}\n                   color=\"primary\"\n                   />\n               </TableCell>\n                 <TableCell>\n                   <TextField\n                    multiline\n                    fullWidth\n                    variant=\"outlined\"\n                     aria-label=\"empty textarea\"\n                     placeholder=\"Add any Class Features here (e.g. Spell Lists, Poison Recipes, Druid Balance, Paladin Quests or anything else!)\"\n                     value={classFeatures.feature}\n                     name={\"classFeature\" + index}\n                     onChange={updateFeature(index)}/>\n                 </TableCell>\n                 <TableCell>\n                   <IconButton aria-label=\"delete\">\n                     <Delete\n                     onClick={() => deleteFeatureRow(index)}/>\n                   </IconButton>\n                 </TableCell>\n             </TableRow>)\n          })\n        }\n      </TableBody>\n      <tfoot/>\n    </Table>\n    </TableContainer>\n  </AccordionDetails>\n  </Accordion>\n    );\n}\n\nexport default CharacterClassFeatures;\n","import React from 'react';\nimport {Accordion,AccordionSummary,AccordionDetails} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {standardMoves} from 'data/movesList';\n\nfunction CharacterStandardMoves() {\n\n  return (\n  <>\n        {\n          standardMoves.map((data) => {\n            return (\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMore />}>{data.name}\n                </AccordionSummary>\n                <AccordionDetails>\n                      <p dangerouslySetInnerHTML={{__html: data.description }}></p>\n                </AccordionDetails>\n              </Accordion>\n              );\n          })\n        }\n    </>);\n}\n\nexport default CharacterStandardMoves;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Accordion,AccordionSummary,AccordionDetails} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {advancedMoves} from 'data/movesList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction CharacterAdvancedMoves() {\n  const classes = useStyles();\n  return (\n  <>\n        {\n          advancedMoves.map((data) => {\n            return (\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMore />}>{data.name}\n                </AccordionSummary>\n                <AccordionDetails>\n                      <p dangerouslySetInnerHTML={{__html: data.description }}></p>\n                </AccordionDetails>\n              </Accordion>\n              );\n        })\n      }\n    </>);\n}\n\nexport default CharacterAdvancedMoves;\n","import React, {useContext} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Accordion,AccordionSummary,AccordionDetails} from '@material-ui/core';\nimport {ExpandMore} from '@material-ui/icons';\nimport {classMoves} from 'data/movesList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction CharacterClassMoves() {\n  const classes = useStyles();\n\n  // State Variables\n  const [character] = useContext(CharacterState);\n  const dwc = character.dwClass;\n\n  return (\n  <>\n        { dwc && classMoves.[dwc].startingMoves.map((data) => {\n          return (\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMore />}>\n                {data.name}\n              </AccordionSummary>\n              <AccordionDetails>\n                    <p dangerouslySetInnerHTML={{__html: data.description }}></p>\n              </AccordionDetails>\n            </Accordion>\n            );\n      })\n    }\n    </>);\n}\n\nexport default CharacterClassMoves;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {AppBar,Box,Tab,Tabs} from '@material-ui/core';\nimport CharacterStandardMoves from 'components/character/CharacterStandardMoves'\nimport CharacterAdvancedMoves from 'components/character/CharacterAdvancedMoves'\nimport CharacterClassMoves from 'components/character/CharacterClassMoves'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction CharacterMoves() {\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"Standard\" {...a11yProps(0)} />\n            <Tab label=\"Advanced\" {...a11yProps(1)} />\n            <Tab label=\"Class\" {...a11yProps(2)} />\n          </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <CharacterStandardMoves/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <CharacterAdvancedMoves/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <CharacterClassMoves/>\n      </TabPanel>\n    </div>);\n}\n\nexport default CharacterMoves;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {useParams} from \"react-router\";\nimport * as FirebaseService from 'services/firebase';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {AppBar,Box,Tab,Tabs} from '@material-ui/core';\nimport CharacterSheetHeader from 'components/character/CharacterSheetHeader'\nimport CharacterBasicDetails from 'components/character/CharacterBasicDetails'\nimport CharacterType from 'components/character/CharacterType'\nimport CharacterBasicStats from 'components/character/CharacterBasicStats'\nimport CharacterAbilities from 'components/character/CharacterAbilities'\nimport CharacterBonds from 'components/character/CharacterBonds'\nimport CharacterGear from 'components/character/CharacterGear'\nimport CharacterClassFeatures from 'components/character/CharacterClassFeatures'\nimport CharacterMoves from 'components/character/CharacterMoves'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\n// Debounce function\nconst debounce = (callback,delay) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => callback(...args),delay);\n  }\n}\n\nfunction CharacterSheet() {\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n\n  // Definitions for state\n  const [character, setCharacter] = useState({});\n  const [isSaving, setIsSaving] = useState(false);\n\n  // retrieve URL parameters for usage\n  const { campaignURL, characterURL } = useParams();\n\n  // Use an effect hook to subscribe to the character stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    if (campaignURL && characterURL) {\n      const unsubscribe = FirebaseService.streamCharacter(campaignURL, characterURL, {\n          next: documentSnapshot => {\n              setCharacter(documentSnapshot.data());\n          },\n          error: (error) => {\n            alert(\"Failed to load character data correctly, see console error\");\n            console.error(\"Error loading document:\", error);\n          }\n      });\n      return unsubscribe;\n    }\n  }, [campaignURL, characterURL, setCharacter]);\n\n  // Saving character\n  const debouncedSave = useCallback(\n    debounce(character =>\n      FirebaseService.saveCharacter(campaignURL, characterURL, character)\n        .then(() => {\n          setIsSaving(false);\n          console.info('Saved Character:', character );\n        })\n        .catch((error) => {\n          alert(\"Failed to save character data correctly, see console error\");\n          console.error(\"Error saving document:\", error);\n          //If saving fails then it will not retry until the error is rectified\n        })\n    , process.env.DEBOUNCE_SAVE_DELAY_MS),[]);\n\n  useEffect(\n    () => {\n      if (character && Object.keys(character).length >= 1) {\n        setIsSaving(true);\n        debouncedSave(character);\n      }\n    }, [character] //Only trigger effect on change of character\n  );\n\n  console.info(\"CharacterState:\",character);\n  console.info(\"isSaving\",isSaving);\n\n  return (\n  <CharacterState.Provider value={[character, setCharacter]}>\n    <CharacterSheetHeader/>\n    <br/>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n        <Tab label=\"Character\" {...a11yProps(0)} />\n        <Tab label=\"Gear\" {...a11yProps(1)} />\n        <Tab label=\"Moves\" {...a11yProps(2)} />\n        <Tab label=\"Dice Roller\" {...a11yProps(3)} />\n      </Tabs>\n      </AppBar>\n    <TabPanel value={value} index={0}>\n      <CharacterBasicDetails/>\n      <br/>\n      <CharacterType/>\n      <br/>\n      <CharacterBasicStats/>\n      <br/>\n      <CharacterAbilities/>\n      <br/>\n      <CharacterBonds/>\n      <br/>\n      <CharacterClassFeatures/>\n    </TabPanel>\n    <TabPanel value={value} index={1}>\n      <CharacterGear/>\n    </TabPanel>\n    <TabPanel value={value} index={2}>\n      <CharacterMoves/>\n    </TabPanel>\n    <TabPanel value={value} index={3}>\n    </TabPanel>\n  </div>\n  </CharacterState.Provider>);\n}\n\nexport default CharacterSheet;\n","import React from 'react';\n\nconst CampaignState = React.createContext([{}, () => {}]);\n\nexport default CampaignState;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useParams} from 'react-router';\nimport {Breadcrumbs} from '@material-ui/core';\n\nfunction CampaignHeader() {\n\n  // retrieve URL parameters for usage\n  const {campaignURL} = useParams();\n\n  return (\n  <div>\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <Link to=\"/dw-react\">Home</Link>\n      <p>{campaignURL}</p>\n    </Breadcrumbs>\n    <h1>Campaign: {campaignURL}</h1>\n  </div>);\n}\n\nexport default CampaignHeader;\n","import React from 'react';\n\nconst CreateCharacterState = React.createContext();\n\nexport default CreateCharacterState;\n","import React, {useState,useContext} from 'react';\nimport {useParams} from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CreateCharacterState from 'components/contexts/CreateCharacterState';\nimport AuthState from 'components/contexts/AuthState';\nimport {Button,TextField} from '@material-ui/core';\n\nfunction CreateCharacter() {\n\n  const [charaName, setCharaName] = useState(\"\");\n  const [show,setShow] = useContext(CreateCharacterState);\n  const [currentUser] = useContext(AuthState);\n  const {campaignURL} = useParams();\n  const toggleSetShow = () => setShow(!show);\n\n  // Create New Character\n  const saveCharacter = () => {\n    if (campaignURL && charaName) { //don't save unless details present\n      FirebaseService.createCharacter(campaignURL,charaName, currentUser.email)\n      .then(() => {\n        console.info('Created Character:', charaName);\n        toggleSetShow();\n      })\n      .catch((error) => {\n        alert(\"Failed to create character, see console error\");\n        console.error(\"Error creating document:\", error);\n      });\n    } else {\n      alert('Cannot save blank character');\n    }\n  }\n\n  return (\n  <>\n  <table style={{\"width\" : \"100%\"}}>\n    <tbody>\n      <tr>\n        <th style={{\"width\" : \"25%\"}}>\n          <label htmlFor=\"shortName\">SHORT NAME</label>\n        </th>\n        <td>\n          <TextField\n            multiline\n            fullWidth\n            variant=\"outlined\"\n            aria-label=\"empty textarea\"\n            placeholder=\"Add your characters short name here, you wont be able to change this one saved\" name=\"shortName\"\n            onChange={event => setCharaName(event.target.value)}/>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <Button variant=\"contained\" color=\"primary\" onClick={() => saveCharacter()}>Save Character</Button>\n  </>\n);\n}\n\nexport default CreateCharacter;\n","import React, {useContext,useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useParams} from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CreateCharacter from 'components/campaign/CreateCharacter';\nimport CreateCharacterState from 'components/contexts/CreateCharacterState';\nimport CampaignState from 'components/contexts/CampaignState';\nimport {Add,Delete} from '@material-ui/icons';\nimport {IconButton,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction CampaignDetails() {\n\n  const classes = useStyles();\n\n  // State Variables\n  const [campaign] = useContext(CampaignState);\n  const [show, setShow] = useState(false);\n  const toggleSetShow = () => setShow(!show);\n\n  // retrieve URL parameters for usage\n  const {campaignURL} = useParams();\n\n  const deleteCharacter = (campaign,character) => {\n    if (campaign && character) { //don't save unless details present\n      FirebaseService.deleteCharacter(campaign,character)\n      .then(() => {\n        console.info('Deleted Character:', character);\n      })\n      .catch((error) => {\n        alert(\"Failed to delete character, see console error\");\n        console.error(\"Error deleting document:\", error);\n      });\n    } else {\n      alert('Cannot delete blank character');\n    }\n  }\n\n  return (\n    <CreateCharacterState.Provider value={[show, setShow]}>\n      <TableContainer component={Paper}>\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Character</TableCell>\n          <TableCell>Owner</TableCell>\n          <TableCell>HP</TableCell>\n          <TableCell>XP</TableCell>\n          <TableCell><IconButton aria-label=\"add\"><Add onClick={() => toggleSetShow()}/></IconButton></TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {\n          campaign.campaign && campaign.campaign.map((campaign, index) => {\n            return (\n            <TableRow key={index}>\n              <TableCell><Link to={\"/dw-react/\" + campaignURL + \"/\" + campaign.character}>{campaign.character}</Link></TableCell>\n              <TableCell>{campaign.characterData.owner}</TableCell>\n              <TableCell>{campaign.characterData.hp}</TableCell>\n              <TableCell>{campaign.characterData.xp}</TableCell>\n                <TableCell>\n                  <IconButton aria-label=\"delete\">\n                    <Delete onClick={() => deleteCharacter(campaignURL, campaign.character)}/>\n                  </IconButton>\n                </TableCell>\n            </TableRow>)\n          })\n        }\n      </TableBody>\n    </Table>\n  </TableContainer>\n      {show\n        ? <CreateCharacter/>\n        : null\n      }\n    </CreateCharacterState.Provider>\n  );\n}\n\nexport default CampaignDetails;\n","import React, {useState,useEffect} from 'react';\nimport {useParams} from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CampaignState from 'components/contexts/CampaignState';\nimport CampaignHeader from 'components/campaign/CampaignHeader';\nimport CampaignDetails from 'components/campaign/CampaignDetails';\n\nfunction CampaignSheet() {\n\n  // Definitions for state\n  const [campaign, setCampaign] = useState({});\n\n  // retrieve URL parameters for usage\n  const {campaignURL} = useParams();\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    if (campaignURL) {\n      const unsubscribe = FirebaseService.streamCharacters(campaignURL, {\n        next: querySnapshot => {\n          //const updatedCharacterList = querySnapshot.docs.map((docSnapshot) => { return(docSnapshot.data())});\n          const updatedCharacterList = querySnapshot.docs.map((docSnapshot) => { return({character: docSnapshot.id , characterData: docSnapshot.data()})});\n          setCampaign(campaign => ({campaign: updatedCharacterList}));\n        },\n        error: (error) => {\n          alert(\"Failed to load campaign data correctly, see console error\");\n          console.error(\"Error loading document:\", error);\n        }\n      });\n      return unsubscribe;\n    }\n  }, [campaignURL, setCampaign]);\n\n  console.info(\"Campaign State:\", campaign);\n\n  return (\n  <CampaignState.Provider value={[campaign, setCampaign]}>\n    <CampaignHeader/>\n    <br/>\n    <CampaignDetails/>\n  </CampaignState.Provider>);\n}\n\nexport default CampaignSheet;\n","import React from 'react';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\nimport ErrorPage from 'components/ErrorPage'\nimport Homepage from 'components/homepage/Homepage';\nimport NavSidebar from 'components/NavSidebar';\nimport AppHeader from 'components/AppHeader';\nimport CharacterSheet from 'components/character/CharacterSheet';\nimport Campaign from 'components/campaign/Campaign';\nimport {Container,Typography} from '@material-ui/core';\nimport \"@fontsource/roboto\"\n\nfunction App() {\n\n  return (<>\n    <Typography>\n    <Container>\n    <Router>\n      <AppHeader/>\n      <NavSidebar/>\n      <Switch>\n        <Route exact path=\"/dw-react/:campaignURL/:characterURL\" component={CharacterSheet} />\n        <Route exact path=\"/dw-react/:campaignURL\" component={Campaign} />\n        <Route exact path=\"/dw-react\" component={Homepage} />\n        <Route component={ErrorPage} />\n      </Switch>\n    </Router>\n    </Container>\n  </Typography>\n  </>)\n}\n\nexport default App;\n","import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\n//import 'index.css';\n//import 'custom.css';\nimport App from 'components/App';\nimport * as FirebaseService from 'services/firebase';\nimport AuthState from 'components/contexts/AuthState';\nimport {Button} from '@material-ui/core';\n\nfunction Index() {\n\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = FirebaseService.auth.onAuthStateChanged(user => {\n      setCurrentUser(user)\n    });\n    return unsubscribe;\n  }, [])\n\n  return (\n  <AuthState.Provider value={[currentUser]}>\n    {\n      currentUser\n        ? (<div>\n          <App />\n        </div>)\n        : <Button variant=\"contained\" color=\"primary\"  onClick={FirebaseService.SignInWithGoogle}>SIGN IN WITH GOOGLE</Button>\n    }\n  </AuthState.Provider>);\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Index/>, rootElement);\n"],"sourceRoot":""}