{"version":3,"sources":["components/ErrorPage.js","components/NavSidebar.js","components/ProfilePicture.js","components/ProfileDetails.js","components/UserProfile.js","components/AppHeader.js","components/contexts/CharacterState.js","components/SheetHeader.js","components/CharacterDetailsTable.js","components/CharacterTypeTable.js","components/Level.js","components/XP.js","components/BasicAttributesTable.js","components/Damage.js","components/Armour.js","components/Funds.js","components/HP.js","components/ExtraAttributes.js","components/AbilitiesTable.js","components/BondsTable.js","components/GearTable.js","components/ClassFeaturesTable.js","components/CharacterSheet.js","components/App.js","services/firebase.js","index.js"],"names":["ErrorPage","NavSidebar","to","ProfilePicture","props","className","id","src","currentUser","photoURL","alt","ProfileDetails","displayName","email","UserProfile","useState","AppHeader","CharacterState","React","createContext","SheetHeader","useContext","character","charaName","owner","CharacterDetailsTable","setCharacter","style","htmlFor","placeholder","defaultValue","value","backstory","onChange","event","target","look","CharacterTypeTable","dwc","dwClass","tabIndex","disabled","hidden","dwClasses","map","data","key","race","races","readOnly","alignment","alignments","Level","type","min","level","XP","xp","BasicAttributesTable","Damage","Armour","armour","Funds","funds","colSpan","hp","ExtraAttributes","HP","AbilitiesTable","updateAbilityScore","index","e","newAbilities","abilities","score","updateAbilityAffliction","affliction","category","max","ab","abilityAfflictions","BondsTable","updateBond","newBonds","bonds","bond","GearTable","updateItem","newItems","gear","item","updateItemWeight","weight","ClassFeaturesTable","updateFeatureCheckbox","newFeatures","classFeatures","checkbox","checked","updateFeature","feature","CharacterSheet","campaign","useParams","console","log","useEffect","Provider","App","path","children","component","firebase","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","auth","provider","firestore","GoogleAuthProvider","SignInWithGoogle","signInWithPopup","setCustomParameters","prompt","AuthContext","Index","unsubscribeFromAuth","state","this","FirestoreService","onAuthStateChanged","user","setState","onClick","signOut","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.27df56f6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction ErrorPage() {\r\n  return (\r\n      <h1>Oops! Page not found!</h1>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction NavSidebar() {\r\n  return (    <div>\r\n      <Link to=\"/\">Home </Link>\r\n      <Link to=\"/about\">About Us </Link>\r\n      <Link to=\"/shop\">Shop Now </Link>\r\n    </div>);\r\n}\r\n\r\nexport default NavSidebar\r\n","import React from 'react';\r\n\r\nfunction ProfilePicture(props) {\r\n  return (<img\r\n    className=\"profPicture\"\r\n    id=\"userPicture\"\r\n    src={props.currentUser.photoURL}\r\n    alt={props.currentUser.photoURL}/>);\r\n}\r\n\r\nexport default ProfilePicture;\r\n","import React from 'react';\r\n\r\nfunction ProfileDetails(props) {\r\n    return (<div className=\"profDetails\">\r\n    <div>Google Account</div>\r\n    <div id=\"userName\">{props.currentUser.displayName}</div>\r\n    <div id=\"userEmail\">{props.currentUser.email}</div>\r\n  </div>);\r\n}\r\n\r\nexport default ProfileDetails;\r\n","import React, {useState} from 'react';\r\nimport ProfilePicture from './ProfilePicture';\r\nimport ProfileDetails from './ProfileDetails';\r\n\r\nfunction UserProfile(props) {\r\n  const [hidden, setHidden] = useState(true);\r\n  return (<div>\r\n    <ProfilePicture currentUser={props.currentUser}/>\r\n    <ProfileDetails currentUser={props.currentUser}/>\r\n  </div>);\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from 'react';\r\n\r\nfunction AppHeader() {\r\n  return (\r\n      <div>\r\n        <h2>Dungeon World Character Sheet</h2>\r\n        <p>\r\n          <i>v1.0.0-alpha by Godmar02</i>\r\n        </p>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\n\r\nconst CharacterState = React.createContext([{}, () => {}]);\r\n\r\nexport default CharacterState;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction SheetHeader() {\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (\r\n    <div>\r\n      <div>Adventure: {character.charaName} ({character.owner})</div>\r\n    </div>);\r\n}\r\n\r\nexport default SheetHeader;\r\n","import React, {useContext, useEffect} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction CharacterDetailsTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (<table style={{\"width\" : \"100%\"}} id=\"basicInfoTable\">\r\n    <tbody>\r\n      <tr>\r\n        <th style={{\"width\" : \"25%\"}}>\r\n          <label htmlFor=\"backstory\">BACKSTORY</label>\r\n        </th>\r\n        <td>\r\n          <textarea placeholder=\"Describe your character's backstory and anything else about your characters identity here\" defaultValue={\"\"} value={character.backstory} onChange={event => setCharacter(character => ({...character,backstory: event.target.value}))}/>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th style={{\"width\" : \"25%\"}}>\r\n          <label htmlFor=\"look\">LOOK</label>\r\n        </th>\r\n        <td>\r\n          <textarea placeholder=\"Describe your character's appearance here\" defaultValue={\"\"} value={character.look} onChange={event => setCharacter(character => ({...character,look: event.target.value}))}/>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>);\r\n}\r\n\r\nexport default CharacterDetailsTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\nimport {races} from '../data/raceList';\r\nimport {dwClasses} from '../data/classList';\r\nimport {alignments} from '../data/classAlignments';\r\n\r\nfunction CharacterTypeTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n                const dwc = character.dwClass;\r\n\r\n  return (\r\n  <table style={{\"width\" : \"100%\"}} id=\"additionalInfoTable\">\r\n    <tbody>\r\n      <tr>\r\n        <th>\r\n          <label style={{\"width\" : \"25%\"}} htmlFor=\"dwClass\">CLASS</label>\r\n        </th>\r\n        <td style={{\"width\" : \"25%\"}}>\r\n          <select tabIndex={-1} value={character.dwClass || \"null\"} onChange={event => setCharacter(character => ({...character,dwClass: event.target.value}))}>\r\n            <option disabled value=\"null\" hidden />\r\n            {\r\n              dwClasses.map((data, key) => {\r\n                return (\r\n                <option value={data} key={key}>\r\n                  {data}\r\n                </option>);\r\n              })\r\n            }\r\n            </select>\r\n        </td>\r\n        <td style={{\"width\" : \"50%\"}}/>\r\n      </tr>\r\n      <tr>\r\n        <th>\r\n          <label htmlFor=\"race\">RACE</label>\r\n        </th>\r\n        <td>\r\n          <select tabIndex={-1} value={character.race || \"null\"} onChange={event => setCharacter(character => ({...character,race: event.target.value}))}>\r\n            <option disabled value=\"null\" hidden />\r\n            {\r\n              races.map((data, key) => {\r\n                return (\r\n                <option value={data} key={key}>\r\n                  {data}\r\n                </option>);\r\n              })\r\n            }\r\n          </select>\r\n        </td>\r\n        <td>\r\n          <textarea className=\"grey\" readOnly=\"readOnly\" defaultValue={\"\"}/>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>\r\n          <label htmlFor=\"alignment\">ALIGNMENT</label>\r\n        </th>\r\n        <td>\r\n          <select tabIndex={-1} value={character.alignment || \"null\"} onChange={event => setCharacter(character => ({...character,alignment: event.target.value}))}>\r\n            <option disabled value=\"null\" hidden />\r\n            {\r\n              character.dwClass && alignments.[dwc].map((data, key) => {\r\n              return (\r\n              <option value={data} key={key}>\r\n                {data}\r\n              </option>);})\r\n            }\r\n          </select>\r\n        </td>\r\n        <td>\r\n          <textarea className=\"grey\" readOnly=\"readOnly\" defaultValue={\"\"}/>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>);\r\n}\r\n\r\nexport default CharacterTypeTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction Level() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (<table>\r\n    <tbody>\r\n      <tr>\r\n          <th>\r\n            <label htmlFor=\"level\">LEVEL</label>\r\n          </th>\r\n          <td>\r\n            <input type=\"number\" min={1} className=\"shortfield\" id=\"level\" value={character.level || ''} onChange={event => setCharacter(character => ({...character,level: event.target.value}))}/>\r\n          </td>\r\n        </tr></tbody>\r\n        </table>);\r\n}\r\n\r\nexport default Level;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction XP() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (<table>\r\n    <tbody>\r\n      <tr>\r\n          <th>\r\n            <label htmlFor=\"xp\">XP</label>\r\n          </th>\r\n          <td>\r\n            <input type=\"number\" min={0} className=\"shortfield\" id=\"xp\" value={character.xp || ''} onChange={event => setCharacter(character => ({...character,xp: event.target.value}))}/>\r\n          </td>\r\n          <td>\r\n            <input type=\"text\" className=\"shortfield grey\" readOnly=\"readOnly\" id=\"maxXp\"/>\r\n          </td>\r\n        </tr></tbody>\r\n        </table>);\r\n}\r\n\r\nexport default XP;\r\n","import React from 'react';\r\nimport Level from './Level'\r\nimport XP from './XP'\r\n\r\nfunction BasicAttributesTable() {\r\n\r\n  return (<div className='myForm'>\r\n        <div><Level/></div>\r\n          <div><XP/></div>\r\n  </div>);\r\n}\r\n\r\nexport default BasicAttributesTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction Damage() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (\r\n    <table id=\"damage\">\r\n      <thead>\r\n        <tr>\r\n          <th>\r\n            <label htmlFor=\"damage\">DAMAGE</label>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type=\"text\" className=\"shortfield grey\" readOnly=\"readOnly\" id=\"damage\"/>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Damage;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction Armour() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (\r\n    <table id=\"armour\">\r\n      <thead>\r\n        <tr>\r\n          <th>\r\n            <label htmlFor=\"armour\">ARMOUR</label>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type=\"number\" min={0} className=\"shortfield\" id=\"armour\" value={character.armour || ''} onChange={event => setCharacter(character => ({...character,armour: event.target.value}))}/>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Armour;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction Funds() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (\r\n    <table id=\"funds\">\r\n      <thead>\r\n        <tr>\r\n          <th>\r\n            <label htmlFor=\"funds\">FUNDS</label>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type=\"number\" className=\"shortfield\" min={0} id=\"funds\" value={character.funds || ''} onChange={event => setCharacter(character => ({...character,funds: event.target.value}))}/>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Funds;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction Funds() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (\r\n    <table id=\"hp\">\r\n      <thead>\r\n        <tr>\r\n          <th colSpan={2}>\r\n            <label htmlFor=\"hp\">HP</label>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type=\"number\" min={0} className=\"shortfield\" id=\"hp\" value={character.hp || ''} onChange={event => setCharacter(character => ({...character,hp: event.target.value}))}/>\r\n          </td>\r\n          <td>\r\n            <input type=\"text\" className=\"shortfield grey\" readOnly=\"readOnly\" id=\"maxHp\"/>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Funds;\r\n","import React from 'react';\r\nimport Damage from './Damage'\r\nimport Armour from './Armour'\r\nimport Funds from './Funds'\r\nimport HP from './HP'\r\n\r\nfunction ExtraAttributes() {\r\n\r\n  return (\r\n  <div className='myForm'>\r\n    <div><Damage/></div>\r\n    <div><Armour/></div>\r\n    <div><Funds/></div>\r\n    <div><HP/></div>\r\n  </div>);\r\n}\r\n\r\nexport default ExtraAttributes;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\nimport {abilityAfflictions} from '../data/abilityAfflictions';\r\n\r\nfunction AbilitiesTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  const updateAbilityScore = index => e => {\r\n    let newAbilities = [...character.abilities]; // copying the old datas array\r\n    newAbilities[index] = {...character.abilities[index], score: e.target.value}; // replace e.target.value with whatever you want to change it to\r\n    setCharacter(character => ({...character, abilities: newAbilities})); // ??\r\n  }\r\n\r\n  const updateAbilityAffliction = index => e => {\r\n    let newAbilities = [...character.abilities]; // copying the old datas array\r\n    newAbilities[index] = {...character.abilities[index], affliction: e.target.value}; // replace e.target.value with whatever you want to change it to\r\n    setCharacter(character => ({...character, abilities: newAbilities})); // ??\r\n  }\r\n\r\n  return (\r\n     <table style={{\"width\":\"100%\"}} id=\"abilitiesTable\">\r\n       <thead>\r\n         <tr>\r\n           {\r\n            character.abilities && character.abilities.map((abilities, index) => {\r\n            return (\r\n              <th key={index}>\r\n                <label\r\n                  htmlFor={abilities.category}\r\n                  value={abilities.category}\r\n                  key={index}>\r\n                  {abilities.category}\r\n                </label>\r\n              </th>)\r\n           })\r\n         }\r\n         </tr>\r\n       </thead>\r\n       <tbody>\r\n         <tr>\r\n           {\r\n            character.abilities && character.abilities.map((abilities, index) => {\r\n            return (\r\n              <td key={index}>\r\n                <input\r\n                  type=\"number\"\r\n                  min={1} max={18}\r\n                  className=\"ability\"\r\n                  value={abilities.score}\r\n                  onChange={updateAbilityScore(index)} />\r\n            </td>)\r\n           })\r\n         }\r\n         </tr>\r\n         <tr>\r\n           {\r\n            character.abilities && character.abilities.map((abilities, index) => {\r\n            return (\r\n              <td key={index}>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"grey tallfield\"\r\n                  readOnly />\r\n            </td>)\r\n           })\r\n         }\r\n         </tr>\r\n         <tr>\r\n           {\r\n            character.abilities && character.abilities.map((abilities,index) => {\r\n            const ab = abilities.category;\r\n            return (\r\n              <td key={index}>\r\n                <select\r\n                  tabIndex={-1}\r\n                  className=\"abilityAffliction\"\r\n                  value={abilities.affliction || \"null\"}\r\n                  onChange={updateAbilityAffliction(index)}>\r\n                  <option disabled value=\"null\" hidden />\r\n                    {\r\n                      abilityAfflictions.[ab].map((data, key) => {\r\n                        return (\r\n                        <option value={data} key={key}>\r\n                          {data}\r\n                        </option>);\r\n                      })\r\n                    }\r\n                </select>\r\n              </td>)\r\n           })\r\n         }\r\n         </tr>\r\n       </tbody>\r\n     </table>\r\n    );\r\n}\r\n\r\nexport default AbilitiesTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction BondsTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  const updateBond = index => e => {\r\n    let newBonds = [...character.bonds]; // copying the old datas array\r\n    newBonds[index] = {...character.bonds[index], bond: e.target.value}; // replace e.target.value with whatever you want to change it to\r\n    setCharacter(character => ({...character, bonds: newBonds})); // ??\r\n  }\r\n\r\n  return (\r\n    <table style={{\"width\" : \"100%\"}} id=\"bondsTable\">\r\n      <thead>\r\n        <tr>\r\n          <th style={{\"width\" : \"100%\"}}>\r\n            <label>BONDS</label>\r\n          </th>\r\n          <td>\r\n            <button type=\"button\" className=\"addRow\" id=\"addBond\">+</button>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n         character.bonds && character.bonds.map((bonds,index) => {\r\n         return (\r\n           <tr key={index}>\r\n               <td>\r\n                 <textarea\r\n                   placeholder=\"Add 2-3 bonds here\"\r\n                   value={bonds.bond}\r\n                   onChange={updateBond(index)}\r\n                   />\r\n               </td>\r\n               <td>\r\n                 <button\r\n                   type=\"button\"\r\n                   className=\"deleteRow\"/>\r\n               </td>\r\n           </tr>)\r\n        })\r\n      }\r\n      </tbody>\r\n      <tfoot/>\r\n    </table>\r\n    );\r\n}\r\n\r\nexport default BondsTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction GearTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  const updateItem = index => e => {\r\n    let newItems = [...character.gear]; // copying the old datas array\r\n    newItems[index] = {...character.gear[index], item: e.target.value}; // replace e.target.value with whatever you want to change it to\r\n    setCharacter(character => ({...character, gear: newItems}));\r\n  }\r\n\r\n  const updateItemWeight = index => e => {\r\n    let newItems = [...character.gear]; // copying the old datas array\r\n    newItems[index] = {...character.gear[index], weight: e.target.value}; // replace e.target.value with whatever you want to change it to\r\n    setCharacter(character => ({...character, gear: newItems}));\r\n  }\r\n\r\n  return (\r\n    <table style={{\"width\":\"100%\"}} id=\"gearTable\">\r\n      <thead>\r\n        <tr>\r\n          <th colSpan={4}><label>GEAR</label></th>\r\n        </tr>\r\n        <tr>\r\n          <th style={{\"width\":\"100%\"}}><label>ITEM</label></th>\r\n          <th colSpan={2}><label>WEIGHT</label></th>\r\n          <td>\r\n            <button type=\"button\" className=\"addRow\" id=\"addItem\">+</button>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n         character.gear && character.gear.map((gear,index) => {\r\n         return (\r\n           <tr key={index}>\r\n               <td>\r\n                 <textarea\r\n                   placeholder=\"Add any items and descriptions here\"\r\n                   value={gear.item}\r\n                   onChange={updateItem(index)}/>\r\n               </td>\r\n               <td colSpan={2}>\r\n                 <input\r\n                   type=\"number\"\r\n                   min={0}\r\n                   value={gear.weight}\r\n                   onChange={updateItemWeight(index)}/>\r\n               </td>\r\n               <td>\r\n                 <button\r\n                   type=\"button\"\r\n                   className=\"deleteRow\"/>\r\n               </td>\r\n           </tr>)\r\n        })\r\n      }\r\n      </tbody>\r\n      <tfoot>\r\n        <tr>\r\n          <th><label htmlFor=\"load\">LOAD</label></th>\r\n          <td><input type=\"text\" className=\"grey\" readOnly id=\"load\" /></td>\r\n          <td><input type=\"text\" className=\"grey\" readOnly id=\"maxLoad\" /></td>\r\n          <td />\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n    );\r\n}\r\n\r\nexport default GearTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction ClassFeaturesTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  const updateFeatureCheckbox = index => e => {\r\n    let newFeatures = [...character.classFeatures]; // copying the old datas array\r\n    newFeatures[index] = {...character.classFeatures[index], checkbox: e.target.checked}; // replace e.target.value with whatever you want to change it to\r\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // ??\r\n  }\r\n\r\n  const updateFeature = index => e => {\r\n    let newFeatures = [...character.classFeatures]; // copying the old datas array\r\n    newFeatures[index] = {...character.classFeatures[index], feature: e.target.value}; // replace e.target.value with whatever you want to change it to\r\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // ??\r\n  }\r\n\r\n  return (\r\n    <table style={{\r\n        \"width\" : \"100%\"\r\n      }} id=\"classFeaturesTable\">\r\n      <thead>\r\n        <tr>\r\n          <th colSpan={2} style={{\r\n              \"width\" : \"100%\"\r\n            }}>\r\n            <label>CLASS FEATURES</label>\r\n          </th>\r\n          <td>\r\n            <button type=\"button\" className=\"addRow\" id=\"addClassFeature\">+</button>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {\r\n           character.classFeatures && character.classFeatures.map((classFeatures,index) => {\r\n           return (\r\n             <tr key={index}>\r\n               <td>\r\n                 <input\r\n                   type=\"checkbox\"\r\n                   className=\"checkbox\"\r\n                   checked={!!classFeatures.checkbox}\r\n                   onChange={updateFeatureCheckbox(index)}/>\r\n               </td>\r\n                 <td>\r\n                   <textarea\r\n                     placeholder=\"Add any Class Features here (e.g. Spell Lists, Poison Recipes, Druid Balance, Paladin Quests or anything else!)\"\r\n                     value={classFeatures.feature}\r\n                     onChange={updateFeature(index)}/>\r\n                 </td>\r\n                 <td>\r\n                   <button\r\n                     type=\"button\"\r\n                     className=\"deleteRow\"/>\r\n                 </td>\r\n             </tr>)\r\n          })\r\n        }\r\n      </tbody>\r\n      <tfoot/>\r\n    </table>\r\n    );\r\n}\r\n\r\nexport default ClassFeaturesTable;\r\n","import React, {useState, useEffect} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\nimport { useParams } from \"react-router\";\r\nimport SheetHeader from './SheetHeader'\r\nimport CharacterDetailsTable from './CharacterDetailsTable'\r\nimport CharacterTypeTable from './CharacterTypeTable'\r\nimport BasicAttributesTable from './BasicAttributesTable'\r\nimport ExtraAttributes from './ExtraAttributes'\r\nimport AbilitiesTable from './AbilitiesTable'\r\nimport BondsTable from './BondsTable'\r\nimport GearTable from './GearTable'\r\nimport ClassFeaturesTable from './ClassFeaturesTable'\r\n//import useQueryString from './hooks/useQueryString'\r\n\r\nfunction CharacterSheet() {\r\n\r\n  // retrieve URL parameters for usage\r\n  let { campaign } = useParams();\r\n\r\n  console.log(campaign);\r\n\r\n  // Definitions for state\r\n  const [character, setCharacter] = useState({});\r\n\r\n  // Setting state for Character using useEffect hook\r\n  useEffect(() => {\r\n    setCharacter({\r\n          owner: \"owner@email.com\",\r\n          charaName: \"Bob\",\r\n          look: \"scraggly\",\r\n          backstory: \"sad backstory\",\r\n          dwClass: \"Paladin\",\r\n          race: \"Elf\",\r\n          alignment: \"Good\",\r\n          level: 2,\r\n          xp: 2,\r\n          abilities: [\r\n            {category: \"STR\", score: 1, affliction: \"Weak\"},\r\n            {category: \"DEX\", score: 1, affliction: \"Unafflicted\"},\r\n            {category: \"CON\", score: 1, affliction: \"Unafflicted\"},\r\n            {category: \"INT\", score: 1, affliction: \"Unafflicted\"},\r\n            {category: \"WIS\", score: 1, affliction: \"Unafflicted\"},\r\n            {category: \"CHA\", score: 1, affliction: \"Unafflicted\"}\r\n          ],\r\n          armour: 3,\r\n          hp:2,\r\n          funds: 10,\r\n          bonds: [\r\n            {bond: \"bond0\"},\r\n            {bond: \"bond1\"}\r\n          ],\r\n          gear: [\r\n            {item: \"item0\", weight: 1},\r\n            {item: \"item1\", weight: 2}\r\n          ],\r\n          classFeatures: [\r\n            {feature: \"classFeature0\", checkbox: true},\r\n            {feature: \"classFeature1\", checkbox: false},\r\n          ]\r\n        })\r\n  }, [setCharacter]);\r\n  console.log(character);\r\n\r\n  // Use a custom hook to subscribe to the character provided as a URL query parameter\r\n  //const [character, setCharacter] = useQueryString('character');\r\n\r\n  return (\r\n  <CharacterState.Provider value={[character, setCharacter]}>\r\n    <SheetHeader/>\r\n    <br/>\r\n    <CharacterDetailsTable/>\r\n    <br/>\r\n    <CharacterTypeTable/>\r\n    <br/>\r\n    <BasicAttributesTable/>\r\n    <br/>\r\n    <ExtraAttributes/>\r\n    <br/>\r\n    <AbilitiesTable/>\r\n    <br/>\r\n    <BondsTable/>\r\n    <br/>\r\n    <GearTable/>\r\n    <br/>\r\n    <ClassFeaturesTable/>\r\n    <br/>\r\n  </CharacterState.Provider>);\r\n}\r\n\r\nexport default CharacterSheet;\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport ErrorPage from './ErrorPage'\r\nimport NavSidebar from './NavSidebar';\r\nimport UserProfile from './UserProfile';\r\nimport AppHeader from './AppHeader';\r\nimport CharacterSheet from './CharacterSheet';\r\n\r\nfunction App(props) {\r\n  const currentUser = props.currentUser;\r\n\r\n  return (<>\r\n    <UserProfile currentUser={currentUser}/>\r\n    <AppHeader/>\r\n    <Router>\r\n      <NavSidebar/>\r\n      <Switch>\r\n        <Route path=\"/\" children={<CharacterSheet/>} />\r\n        <Route path=\"/:campaign\" children={<CharacterSheet/>} />\r\n        <Route path=\"/:campaign/:character\" children={<CharacterSheet/>} />\r\n        <Route component={ErrorPage} />\r\n      </Switch>\r\n    </Router>\r\n  </>)\r\n}\r\n\r\nexport default App;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// Initialise Firebase and setting up firestore and auth for use later\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\n\r\n// Authenticate with Firebase-auth using the Google provider object\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport function SignInWithGoogle() { auth.signInWithPopup(provider)};\r\n\r\n// Firestore operations\r\nexport function createGroceryList(userName, userId) {\r\n    return db.collection('groceryLists')\r\n        .add({\r\n            created: firebase.firestore.FieldValue.serverTimestamp(),\r\n            createdBy: userId,\r\n            users: [{\r\n                userId: userId,\r\n                name: userName\r\n            }]\r\n        });\r\n};\r\n\r\nexport function getGroceryList(groceryListId) {\r\n    return db.collection('groceryLists')\r\n        .doc(groceryListId)\r\n        .get();\r\n};\r\n\r\nexport function getGroceryListItems(groceryListId) {\r\n    return db.collection('groceryLists')\r\n        .doc(groceryListId)\r\n        .collection('items')\r\n        .get();\r\n}\r\n\r\nexport function streamGroceryListItems(groceryListId, observer) {\r\n    return db.collection('groceryLists')\r\n        .doc(groceryListId)\r\n        .collection('items')\r\n        .orderBy('created')\r\n        .onSnapshot(observer);\r\n};\r\n\r\n// Default Export\r\nexport default firebase;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './custom.css';\r\nimport App from './components/App';\r\nimport * as FirestoreService from './services/firebase';\r\n\r\nexport const AuthContext = React.createContext(null);\r\n\r\nclass Index extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentUser: null\r\n    };\r\n  }\r\n\r\n  unsubscribeFromAuth = null;\r\n\r\n  componentDidMount() {\r\n    this.unsubscribeFromAuth = FirestoreService.auth.onAuthStateChanged(user => {\r\n      this.setState({ currentUser: user });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribeFromAuth();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {\r\n          this.state.currentUser ?\r\n            (<div>\r\n              <App currentUser={this.state.currentUser} />\r\n              <button onClick={() => FirestoreService.auth.signOut()}>LOG OUT</button>\r\n            </div>\r\n            ) :\r\n            <button onClick={FirestoreService.SignInWithGoogle}>SIGN IN WITH GOOGLE</button>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<Index />, rootElement);\r\n"],"sourceRoot":""}