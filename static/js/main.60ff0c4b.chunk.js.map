{"version":3,"sources":["components/ErrorPage.js","components/NavSidebar.js","components/ProfilePicture.js","components/ProfileDetails.js","components/UserProfile.js","components/AppHeader.js","components/contexts/CharacterState.js","services/firebase.js","components/CharacterSheetHeader.js","components/CharacterDetailsTable.js","components/CharacterTypeTable.js","components/CharacterDamage.js","components/CharacterArmour.js","components/CharacterFunds.js","components/CharacterHP.js","components/CharacterLevel.js","components/CharacterXP.js","components/CharacterBasicAttributesTable.js","components/CharacterAbilitiesTable.js","components/CharacterBondsTable.js","components/CharacterItemsTable.js","components/CharacterClassFeaturesTable.js","components/Autosave.js","components/CharacterSheet.js","components/contexts/CampaignState.js","components/CampaignSheetHeader.js","components/CampaignDetails.js","components/CampaignSheet.js","components/Homepage.js","components/App.js","index.js"],"names":["ErrorPage","NavSidebar","ProfilePicture","props","className","id","src","currentUser","photoURL","alt","ProfileDetails","displayName","email","UserProfile","AppHeader","CharacterState","React","createContext","firebase","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","provider","GoogleAuthProvider","SignInWithGoogle","signInWithPopup","setCustomParameters","prompt","CharacterSheetHeader","useContext","character","useParams","campaignURL","characterURL","to","charaFullName","CharacterDetailsTable","setCharacter","style","htmlFor","placeholder","value","backstory","name","onChange","event","target","look","CharacterTypeTable","dwc","dwClass","alig","alignment","race","tabIndex","disabled","hidden","dwClasses","map","data","key","races","readOnly","classDetails","raceAttributes","alignments","alignmentAttributes","CharacterDamage","type","damage","CharacterArmour","min","armour","CharacterFunds","funds","CharacterHP","colSpan","hp","abilities","baseHp","parseInt","find","x","category","score","CharacterLevel","level","CharacterXP","xp","CharacterBasicAttributesTable","CharacterAbilitiesTable","updateAbilityScore","index","e","newAbilities","updateAbilityAffliction","affliction","abilityModifier","abilityScore","abilityAffliction","baseModifier","indexOf","modifier","max","ab","abilityAfflictions","CharacterBondsTable","updateBond","newBonds","bonds","bond","onClick","addBondsRow","length","splice","alert","deleteBondRow","CharacterItemsTable","updateItem","newItems","items","item","updateItemWeight","weight","addItemRow","deleteItemRow","reduce","totalLoad","str","baseLoad","maxLoad","CharacterClassFeaturesTable","updateFeatureCheckbox","newFeatures","classFeatures","checkbox","checked","updateFeature","feature","addFeatureRow","deleteFeatureRow","Autosave","saveCharacter","useState","isSaving","setIsSaving","debounceSave","useRef","_","debounce","campaign","collection","doc","set","FirebaseService","then","results","console","log","catch","error","useEffect","current","CharacterSheet","owner","Provider","CampaignState","CampaignSheetHeader","CampaignDetails","characterData","CampaignSheet","setCampaign","observer","onSnapshot","next","querySnapshot","updatedCharacterList","docs","docSnapshot","Homepage","campaigns","setCampaigns","updatedCampaignList","App","path","component","AuthContext","Index","unsubscribeFromAuth","state","this","onAuthStateChanged","user","setState","signOut","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.60ff0c4b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction ErrorPage() {\r\n  return (\r\n      <h1>Oops! Page not found!</h1>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React from \"react\";\r\n\r\nfunction NavSidebar() {\r\n  return (\r\n    <div>\r\n    </div>);\r\n}\r\n\r\nexport default NavSidebar\r\n","import React from 'react';\r\n\r\nfunction ProfilePicture(props) {\r\n  return (<img\r\n    className=\"profPicture\"\r\n    id=\"userPicture\"\r\n    src={props.currentUser.photoURL}\r\n    alt={props.currentUser.photoURL}/>);\r\n}\r\n\r\nexport default ProfilePicture;\r\n","import React from 'react';\r\n\r\nfunction ProfileDetails(props) {\r\n    return (<div className=\"profDetails\">\r\n    <div>Google Account</div>\r\n    <div id=\"userName\">{props.currentUser.displayName}</div>\r\n    <div id=\"userEmail\">{props.currentUser.email}</div>\r\n  </div>);\r\n}\r\n\r\nexport default ProfileDetails;\r\n","import React from 'react';\r\nimport ProfilePicture from './ProfilePicture';\r\nimport ProfileDetails from './ProfileDetails';\r\n\r\nfunction UserProfile(props) {\r\n\r\n  return (<div>\r\n    <ProfilePicture currentUser={props.currentUser}/>\r\n    <ProfileDetails currentUser={props.currentUser}/>\r\n  </div>);\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from 'react';\r\n\r\nfunction AppHeader() {\r\n\r\n  return (<div>\r\n    <h2>Dungeon World Character Sheet</h2>\r\n    <p>\r\n      <i>v0.10.0 by Godmar02</i>\r\n    </p>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\n\r\nconst CharacterState = React.createContext([{}, () => {}]);\r\n\r\nexport default CharacterState;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// Initialise Firebase and setting up firestore and auth for use later\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\n\r\n// Authenticate with Firebase-auth using the Google provider object\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({\r\n  prompt: 'select_account'\r\n});\r\nexport function SignInWithGoogle() {\r\n  auth.signInWithPopup(provider)\r\n};\r\n\r\n// Firestore operations\r\nexport function createCampaign(campaign) {\r\n  return db.collection(\"campaigns\")\r\n    .add(campaign)\r\n    .collection(\"characters\");\r\n};\r\n\r\nexport function createCharacter(campaign, character) {\r\n  return db.collection(\"campaigns\")\r\n    .doc(campaign)\r\n    .collection(\"characters\")\r\n    .add(character);\r\n};\r\n\r\nexport function saveCharacter(campaign, character, data) {\r\n  return db.collection(\"campaigns\")\r\n    .doc(campaign)\r\n    .collection(\"characters\")\r\n    .doc(character)\r\n    .set(data);\r\n};\r\n\r\nexport function streamCampaigns(observer) {\r\n  return db.collection(\"campaigns\")\r\n    .onSnapshot(observer);\r\n};\r\n\r\nexport function streamCharacters(campaign, observer) {\r\n  return db.collection(\"campaigns\")\r\n    .doc(campaign)\r\n    .collection(\"characters\")\r\n    .onSnapshot(observer);\r\n};\r\n\r\nexport function streamCharacter(campaign, character, observer) {\r\n  return db.collection(\"campaigns\")\r\n    .doc(campaign)\r\n    .collection(\"characters\")\r\n    .doc(character)\r\n    .onSnapshot(observer);\r\n};\r\n\r\n// Default Export\r\nexport default firebase;\r\n","import React, {useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { useParams } from \"react-router\";\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction CharacterSheetHeader() {\r\n\r\n  // Definitions for state\r\n  const [character] = useContext(CharacterState);\r\n\r\n  // retrieve URL parameters for usage\r\n  const { campaignURL, characterURL } = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/dw-react\">Home</Link> >\r\n      <Link to={\"/dw-react/\" + campaignURL}> {campaignURL}</Link> >\r\n      <p> {characterURL}</p>\r\n      <h1>{characterURL}</h1>\r\n      <p>{character.charaFullName}</p>\r\n    </div>);\r\n}\r\n\r\nexport default CharacterSheetHeader;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction CharacterDetailsTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (<table style={{\"width\" : \"100%\"}} id=\"basicInfoTable\">\r\n    <tbody>\r\n      <tr>\r\n        <th style={{\"width\" : \"25%\"}}>\r\n          <label htmlFor=\"backstory\">BACKSTORY</label>\r\n        </th>\r\n        <td>\r\n          <textarea placeholder=\"Describe your character's backstory and anything else about your characters identity here\" value={character.backstory} name=\"backstory\" onChange={event => setCharacter(character => ({...character,backstory: event.target.value}))}/>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th style={{\"width\" : \"25%\"}}>\r\n          <label htmlFor=\"look\">LOOK</label>\r\n        </th>\r\n        <td>\r\n          <textarea placeholder=\"Describe your character's appearance here\" name=\"look\" value={character.look} onChange={event => setCharacter(character => ({...character,look: event.target.value}))}/>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>);\r\n}\r\n\r\nexport default CharacterDetailsTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\nimport {races} from '../data/raceList';\r\nimport {dwClasses} from '../data/classList';\r\nimport {alignments} from '../data/classAlignments';\r\nimport {classDetails} from '../data/classDetails';\r\n\r\nfunction CharacterTypeTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n  const dwc = character.dwClass;\r\n  const alig = character.alignment;\r\n  const race = character.race;\r\n\r\n  const raceAttributes = () => {\r\n    if (character.dwClass && character.race) {\r\n      return (classDetails.[dwc].raceAttributes.[race]);\r\n    } else {\r\n      return ('');\r\n    }\r\n  };\r\n\r\n  const alignmentAttributes = () => {\r\n    if (character.dwClass && character.alignment) {\r\n      return (classDetails.[dwc].alignmentAttributes.[alig]);\r\n    } else {\r\n      return ('');\r\n    }\r\n  };\r\n\r\n  return (\r\n  <table style={{\"width\" : \"100%\"}} id=\"additionalInfoTable\">\r\n    <tbody>\r\n      <tr>\r\n        <th>\r\n          <label style={{\"width\" : \"25%\"}} htmlFor=\"dwClass\">CLASS</label>\r\n        </th>\r\n        <td style={{\"width\" : \"25%\"}}>\r\n          <select\r\n            tabIndex={-1}\r\n            value={character.dwClass || \"null\"}\r\n            name=\"dwClass\"\r\n            onChange={event => {\r\n              setCharacter(character => ({...character,dwClass: event.target.value}));\r\n              setCharacter(character => ({...character,alignment: \"null\"}))}}>\r\n            <option disabled value=\"null\" hidden />\r\n            {\r\n              dwClasses.map((data, key) => {\r\n                return (\r\n                <option value={data} key={key}>\r\n                  {data}\r\n                </option>);\r\n              })\r\n            }\r\n            </select>\r\n        </td>\r\n        <td style={{\"width\" : \"50%\"}}/>\r\n      </tr>\r\n      <tr>\r\n        <th>\r\n          <label htmlFor=\"race\">RACE</label>\r\n        </th>\r\n        <td>\r\n          <select\r\n            tabIndex={-1}\r\n            value={character.race || \"null\"}\r\n            name=\"race\"\r\n            onChange={event => setCharacter(character => ({...character,race: event.target.value}))}>\r\n            <option disabled value=\"null\" hidden />\r\n            {\r\n              races.map((data, key) => {\r\n                return (\r\n                <option value={data} key={key}>\r\n                  {data}\r\n                </option>);\r\n              })\r\n            }\r\n          </select>\r\n        </td>\r\n        <td>\r\n          <textarea className=\"grey\" name=\"raceAttributes\" readOnly=\"readOnly\" value={raceAttributes()}/>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>\r\n          <label htmlFor=\"alignment\">ALIGNMENT</label>\r\n        </th>\r\n        <td>\r\n          <select\r\n            tabIndex={-1}\r\n            value={character.alignment || \"null\"}\r\n            name=\"alignment\"\r\n            onChange={event => setCharacter(character => ({...character,alignment: event.target.value}))}>\r\n            <option disabled value=\"null\" hidden />\r\n            {\r\n              character.dwClass && alignments.[dwc].map((data, key) => {\r\n              return (\r\n              <option value={data} key={key}>\r\n                {data}\r\n              </option>);})\r\n            }\r\n          </select>\r\n        </td>\r\n        <td>\r\n          <textarea className=\"grey\" name=\"alignmentAttribute\" readOnly=\"readOnly\" value={alignmentAttributes()}/>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>);\r\n}\r\n\r\nexport default CharacterTypeTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\nimport {classDetails} from '../data/classDetails';\r\n\r\nfunction CharacterDamage() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character] = useContext(CharacterState);\r\n  const dwc = character.dwClass;\r\n\r\n  const damage = () => {\r\n    if (character.dwClass) {\r\n      return (classDetails.[dwc].damage);\r\n    } else {\r\n      return ('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table id=\"damage\">\r\n      <thead>\r\n        <tr>\r\n          <th>\r\n            <label htmlFor=\"damage\">DAMAGE</label>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type=\"text\" className=\"shortfield grey\" name=\"damage\" readOnly=\"readOnly\" value={damage()}/>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\nexport default CharacterDamage;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction CharacterArmour() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (\r\n    <table id=\"armour\">\r\n      <thead>\r\n        <tr>\r\n          <th>\r\n            <label htmlFor=\"armour\">ARMOUR</label>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type=\"number\" min={0} className=\"shortfield\" name=\"armour\" value={character.armour || ''} onChange={event => setCharacter(character => ({...character,armour: event.target.value}))}/>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default CharacterArmour;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction CharacterFunds() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (\r\n    <table id=\"funds\">\r\n      <thead>\r\n        <tr>\r\n          <th>\r\n            <label htmlFor=\"funds\">FUNDS</label>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type=\"number\" className=\"shortfield\" name=\"funds\"\r\n              min={0} id=\"funds\" value={character.funds || ''} onChange={event => setCharacter(character => ({...character,funds: event.target.value}))}/>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default CharacterFunds;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\nimport {classDetails} from '../data/classDetails';\r\n\r\nfunction CharacterHP() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  const dwc = character.dwClass;\r\n  const maxHp = () => {\r\n    if (character.dwClass && character.abilities) {\r\n      return (\"/ \" + (classDetails.[dwc].baseHp + parseInt(character.abilities.find(x => x.category === 'CON').score ,10)));\r\n    } else {\r\n      return ('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table id=\"hp\">\r\n      <thead>\r\n        <tr>\r\n          <th colSpan={2}>\r\n            <label htmlFor=\"hp\">HP</label>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type=\"number\" min={0} className=\"shortfield\" name=\"hp\" value={character.hp || ''} onChange={event => setCharacter(character => ({...character,hp: event.target.value}))}/>\r\n          </td>\r\n          <td>\r\n            <input type=\"text\" className=\"shortfield grey\" name=\"maxHp\" readOnly=\"readOnly\" value={maxHp()} />\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default CharacterHP;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction CharacterLevel() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th colSpan={2}>\r\n            <label htmlFor=\"level\">LEVEL</label>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type=\"number\" min={1} className=\"shortfield\" name=\"level\" value={character.level || ''} onChange={event => setCharacter(character => ({...character,level: event.target.value}))}/>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>);\r\n}\r\n\r\nexport default CharacterLevel;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction CharacterXP() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  // Total Load\r\n  const calcMaxXp = () => {\r\n    if (character.level) {\r\n      return (\"/ \" + (parseInt(character.level,10) + 7));\r\n    } else {\r\n      return ('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th colSpan={2}>\r\n            <label htmlFor=\"xp\">XP</label>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type=\"number\" min={0} className=\"shortfield\" name=\"xp\" value={character.xp || ''} onChange={event => setCharacter(character => ({...character,xp: event.target.value}))}/>\r\n          </td>\r\n          <td>\r\n            <input type=\"text\" className=\"shortfield grey\" name=\"maxXp\" readOnly=\"readOnly\" value={calcMaxXp()} />\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>);\r\n}\r\n\r\nexport default CharacterXP;\r\n","import React from 'react';\r\nimport CharacterDamage from './CharacterDamage'\r\nimport CharacterArmour from './CharacterArmour'\r\nimport CharacterFunds from './CharacterFunds'\r\nimport CharacterHP from './CharacterHP'\r\nimport CharacterLevel from './CharacterLevel'\r\nimport CharacterXP from './CharacterXP'\r\n\r\nfunction CharacterBasicAttributesTable() {\r\n\r\n  return (\r\n  <div className='myForm'>\r\n    <div><CharacterLevel/></div>\r\n    <div><CharacterXP/></div>\r\n    <div><CharacterDamage/></div>\r\n    <div><CharacterArmour/></div>\r\n    <div><CharacterFunds/></div>\r\n    <div><CharacterHP/></div>\r\n  </div>);\r\n}\r\n\r\nexport default CharacterBasicAttributesTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\nimport {abilityAfflictions} from '../data/abilityAfflictions';\r\n\r\nfunction CharacterAbilitiesTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  const updateAbilityScore = index => e => {\r\n    let newAbilities = [...character.abilities]; // copying the old array\r\n    newAbilities[index] = {...character.abilities[index], score: e.target.value}; // replace value\r\n    setCharacter(character => ({...character, abilities: newAbilities})); // set array back\r\n  }\r\n\r\n  const updateAbilityAffliction = index => e => {\r\n    let newAbilities = [...character.abilities]; // copying the old array\r\n    newAbilities[index] = {...character.abilities[index], affliction: e.target.value}; // replace value\r\n    setCharacter(character => ({...character, abilities: newAbilities})); // set array back\r\n  }\r\n\r\n  const abilityModifier = (abilityScore, abilityAffliction) => {\r\n\r\n    if (abilityScore && abilityAffliction) {\r\n    let baseModifier;\r\n    let afflicted;\r\n\r\n    abilityScore = parseInt(abilityScore,10);\r\n\r\n    if ([1, 2, 3].indexOf(abilityScore) > -1) {\r\n      baseModifier = -3;\r\n    } else if ([4, 5].indexOf(abilityScore) > -1) {\r\n      baseModifier = -2;\r\n    } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\r\n      baseModifier = -1;\r\n    } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\r\n      baseModifier = 0;\r\n    } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\r\n      baseModifier = 1;\r\n    } else if ([16, 17].indexOf(abilityScore) > -1) {\r\n      baseModifier = 2;\r\n    } else if (abilityScore === 18) {\r\n      baseModifier = 3;\r\n    }\r\n\r\n    /*-1 if afflicted*/\r\n    if (abilityAffliction === \"Unafflicted\") {\r\n      afflicted = 0;\r\n    } else {\r\n      afflicted = 1;\r\n    }\r\n\r\n    let modifier = (baseModifier - afflicted);\r\n\r\n    if (modifier > 0) {\r\n      return(\"[+\" + modifier+ \"]\");\r\n    } else {\r\n      return (\"[\" + modifier + \"]\");\r\n    }\r\n  } else {\r\n    return ('')\r\n  }\r\n  }\r\n\r\n  return (\r\n     <table style={{\"width\":\"100%\"}} id=\"abilitiesTable\">\r\n       <thead>\r\n         <tr>\r\n           {\r\n            character.abilities && character.abilities.map((abilities, index) => {\r\n            return (\r\n              <th key={index}>\r\n                <label\r\n                  htmlFor={abilities.category}\r\n                  value={abilities.category}\r\n                  name={abilities.category}>\r\n                  {abilities.category}\r\n                </label>\r\n              </th>)\r\n           })\r\n         }\r\n         </tr>\r\n       </thead>\r\n       <tbody>\r\n         <tr>\r\n           {\r\n            character.abilities && character.abilities.map((abilities, index) => {\r\n            return (\r\n              <td key={index}>\r\n                <input\r\n                  type=\"number\"\r\n                  min={1} max={18}\r\n                  className=\"ability\"\r\n                  name={abilities.category + \"Score\"}\r\n                  value={abilities.score}\r\n                  onChange={updateAbilityScore(index)} />\r\n            </td>)\r\n           })\r\n         }\r\n         </tr>\r\n         <tr>\r\n           {\r\n            character.abilities && character.abilities.map((abilities, index) => {\r\n            return (\r\n              <td key={index}>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"grey tallfield\"\r\n                  name={abilities.category + \"Modifier\"}\r\n                  value={abilityModifier(abilities.score, abilities.affliction)}\r\n                  readOnly />\r\n            </td>)\r\n           })\r\n         }\r\n         </tr>\r\n         <tr>\r\n           {\r\n            character.abilities && character.abilities.map((abilities,index) => {\r\n            const ab = abilities.category;\r\n            return (\r\n              <td key={index}>\r\n                <select\r\n                  tabIndex={-1}\r\n                  className=\"abilityAffliction\"\r\n                  value={abilities.affliction || \"null\"}\r\n                  name={abilities.category + \"Affliction\"}\r\n                  onChange={updateAbilityAffliction(index)}>\r\n                  <option disabled value=\"null\" hidden />\r\n                    {\r\n                      abilityAfflictions.[ab].map((data, key) => {\r\n                        return (\r\n                        <option value={data} key={key}>\r\n                          {data}\r\n                        </option>);\r\n                      })\r\n                    }\r\n                </select>\r\n              </td>)\r\n           })\r\n         }\r\n         </tr>\r\n       </tbody>\r\n     </table>\r\n    );\r\n}\r\n\r\nexport default CharacterAbilitiesTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction CharacterBondsTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  // State manipulation\r\n  const updateBond = index => e => {\r\n    let newBonds = [...character.bonds]; // copying the old array\r\n    newBonds[index] = {...character.bonds[index], bond: e.target.value}; // replace value\r\n    setCharacter(character => ({...character, bonds: newBonds})); // set array back\r\n  }\r\n\r\n  // Delete rows in the table\r\n  const deleteBondRow = index => {\r\n    const newBonds = [...character.bonds]; // copying the old array\r\n    if (character.bonds.length !== 1) { //don't delete last row\r\n      newBonds.splice(index, 1); // remove item from array\r\n      setCharacter(character => ({...character, bonds: newBonds})); // set array back\r\n    } else {\r\n      alert('Cannot delete final row');\r\n    }\r\n  }\r\n\r\n  // Add rows in the table\r\n  const addBondsRow = () => {\r\n    const newBonds = [...character.bonds, {bond: \"\"}]; // copying the old array and adding blank item\r\n    setCharacter(character => ({...character, bonds: newBonds})); // set array back\r\n  }\r\n\r\n  return (\r\n    <table style={{\"width\" : \"100%\"}} id=\"bondsTable\">\r\n      <thead>\r\n        <tr>\r\n          <th style={{\"width\" : \"100%\"}}>\r\n            <label>BONDS</label>\r\n          </th>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              className=\"addRow\"\r\n              onClick={() => addBondsRow()}>\r\n              +\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n         character.bonds && character.bonds.map((bonds,index) => {\r\n         return (\r\n           <tr key={index}>\r\n               <td>\r\n                 <textarea\r\n                   placeholder=\"Add 2-3 bonds here\"\r\n                   value={bonds.bond}\r\n                   name={\"bond\" + index}\r\n                   onChange={updateBond(index)}\r\n                   />\r\n               </td>\r\n               <td>\r\n                 <button\r\n                   type=\"button\"\r\n                   className=\"deleteRow\"\r\n                   onClick={() => deleteBondRow(index)}/>\r\n               </td>\r\n           </tr>)\r\n        })\r\n      }\r\n      </tbody>\r\n      <tfoot/>\r\n    </table>\r\n    );\r\n}\r\n\r\nexport default CharacterBondsTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\nimport {classDetails} from '../data/classDetails';\r\n\r\nfunction CharacterItemsTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n  const dwc = character.dwClass;\r\n\r\n  // Total Load\r\n  const totalLoad = () => {\r\n    if (character.items) {\r\n      return (character.items.reduce((totalLoad,data) => totalLoad + parseInt((data.weight || 0),10) ,0));\r\n    } else {\r\n      return ('');\r\n    }\r\n  };\r\n\r\n  // Max Load\r\n  const maxLoad = () => {\r\n\r\n    if (character.dwClass && character.abilities.find(x => x.category === 'STR').score && character.abilities.find(x => x.category === 'STR').affliction) {\r\n      let str = character.abilities.find(x => x.category === 'STR');\r\n      let baseModifier;\r\n      let abilityAffliction = str.affliction;\r\n      let abilityScore = parseInt(str.score,10);\r\n      let afflicted;\r\n\r\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\r\n        baseModifier = -3;\r\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\r\n        baseModifier = -2;\r\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\r\n        baseModifier = -1;\r\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\r\n        baseModifier = 0;\r\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\r\n        baseModifier = 1;\r\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\r\n        baseModifier = 2;\r\n      } else if (abilityScore === 18) {\r\n        baseModifier = 3;\r\n      }\r\n\r\n      /*-1 if afflicted*/\r\n      if (abilityAffliction === \"Unafflicted\") {\r\n        afflicted = 0;\r\n      } else {\r\n        afflicted = 1;\r\n      }\r\n\r\n      let modifier = (baseModifier - afflicted);\r\n\r\n      return (\"/ \" + (classDetails.[dwc].baseLoad + modifier));\r\n    } else {\r\n      return ('');\r\n    }\r\n  };\r\n\r\n  // State manipulation\r\n  const updateItem = index => e => {\r\n    let newItems = [...character.items]; // copying the old array\r\n    newItems[index] = {...character.items[index], item: e.target.value}; // replace value\r\n    setCharacter(character => ({...character, items: newItems})); // set array back\r\n  }\r\n\r\n  const updateItemWeight = index => e => {\r\n    let newItems = [...character.items]; // copying the old array\r\n    newItems[index] = {...character.items[index], weight: e.target.value}; // replace value\r\n    setCharacter(character => ({...character, items: newItems})); // set array back\r\n  }\r\n\r\n  // Delete rows in the table\r\n  const deleteItemRow = index => {\r\n    const newItems = [...character.items]; // copying the old array\r\n    if (character.items.length !== 1) { //don't delete last row\r\n      newItems.splice(index, 1); // remove item from array\r\n      setCharacter(character => ({...character, items: newItems})); // set array back\r\n    } else {\r\n      alert('Cannot delete final row');\r\n    }\r\n  }\r\n\r\n  // Add rows in the table\r\n  const addItemRow = () => {\r\n    const newItems = [...character.items, {item: \"\", weight: \"\"}]; // copying the old array and adding blank item\r\n    setCharacter(character => ({...character, items: newItems})); // set array back\r\n  }\r\n  //,\r\n\r\n  return (\r\n    <table style={{\"width\":\"100%\"}} id=\"itemsTable\">\r\n      <thead>\r\n        <tr>\r\n          <th colSpan={4}><label>GEAR</label></th>\r\n        </tr>\r\n        <tr>\r\n          <th style={{\"width\":\"100%\"}}><label>ITEM</label></th>\r\n          <th colSpan={2}><label>WEIGHT</label></th>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              className=\"addRow\"\r\n              onClick={() => addItemRow()}>\r\n              +\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n         character.items && character.items.map((items,index) => {\r\n         return (\r\n           <tr key={index}>\r\n               <td>\r\n                 <textarea\r\n                   placeholder=\"Add any items and descriptions here\"\r\n                   value={items.item}\r\n                   name={\"item\" + index}\r\n                   onChange={updateItem(index)}/>\r\n               </td>\r\n               <td colSpan={2}>\r\n                 <input\r\n                   type=\"number\"\r\n                   min={0}\r\n                   value={items.weight}\r\n                   name={\"itemWeight\" + index}\r\n                   onChange={updateItemWeight(index)}/>\r\n               </td>\r\n               <td>\r\n                 <button\r\n                   type=\"button\"\r\n                   className=\"deleteRow\"\r\n                   onClick={() => deleteItemRow(index)}/>\r\n               </td>\r\n           </tr>)\r\n        })\r\n      }\r\n      </tbody>\r\n      <tfoot>\r\n        <tr>\r\n          <th><label htmlFor=\"load\">LOAD</label></th>\r\n          <td>\r\n            <input type=\"number\" className=\"shortfield grey\" name=\"totalLoad\" readOnly value={totalLoad()} />\r\n          </td>\r\n          <td>\r\n            <input type=\"text\" className=\"shortfield grey\" name=\"maxLoad\" readOnly=\"readOnly\" value={maxLoad()} />\r\n          </td>\r\n          <td />\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n    );\r\n}\r\n\r\nexport default CharacterItemsTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction CharacterClassFeaturesTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  // State manipulation\r\n  const updateFeatureCheckbox = index => e => {\r\n    let newFeatures = [...character.classFeatures]; // copying the old array\r\n    newFeatures[index] = {...character.classFeatures[index], checkbox: e.target.checked}; // replace value\r\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\r\n  }\r\n\r\n  const updateFeature = index => e => {\r\n    let newFeatures = [...character.classFeatures]; // copying the old array\r\n    newFeatures[index] = {...character.classFeatures[index], feature: e.target.value}; // replace value\r\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\r\n  }\r\n\r\n  // Delete rows in the table\r\n  const deleteFeatureRow = index => {\r\n    const newFeatures = [...character.classFeatures]; // copying the old array\r\n    if (character.classFeatures.length !== 1) { //don't delete last row\r\n      newFeatures.splice(index, 1); // remove item from array\r\n      setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\r\n    } else {\r\n      alert('Cannot delete final row');\r\n    }\r\n  }\r\n\r\n  // Add rows in the table\r\n  const addFeatureRow = () => {\r\n    const newFeatures = [...character.classFeatures, {feature: \"\", checkbox: false}]; // copying the old array and adding blank item\r\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\r\n  }\r\n\r\n  return (\r\n    <table style={{\r\n        \"width\" : \"100%\"\r\n      }} id=\"classFeaturesTable\">\r\n      <thead>\r\n        <tr>\r\n          <th colSpan={2} style={{\r\n              \"width\" : \"100%\"\r\n            }}>\r\n            <label>CLASS FEATURES</label>\r\n          </th>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              className=\"addRow\"\r\n              onClick={() => addFeatureRow()}>\r\n              +\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {\r\n           character.classFeatures && character.classFeatures.map((classFeatures,index) => {\r\n           return (\r\n             <tr key={index}>\r\n               <td>\r\n                 <input\r\n                   type=\"checkbox\"\r\n                   className=\"checkbox\"\r\n                   name={\"classFeatureCheckbox\" + index}\r\n                   checked={!!classFeatures.checkbox}\r\n                   onChange={updateFeatureCheckbox(index)}/>\r\n               </td>\r\n                 <td>\r\n                   <textarea\r\n                     placeholder=\"Add any Class Features here (e.g. Spell Lists, Poison Recipes, Druid Balance, Paladin Quests or anything else!)\"\r\n                     value={classFeatures.feature}\r\n                     name={\"classFeature\" + index}\r\n                     onChange={updateFeature(index)}/>\r\n                 </td>\r\n                 <td>\r\n                   <button\r\n                     type=\"button\"\r\n                     className=\"deleteRow\"\r\n                     onClick={() => deleteFeatureRow(index)}/>\r\n                 </td>\r\n             </tr>)\r\n          })\r\n        }\r\n      </tbody>\r\n      <tfoot/>\r\n    </table>\r\n    );\r\n}\r\n\r\nexport default CharacterClassFeaturesTable;\r\n","import {\r\n  useState,\r\n  useRef,\r\n  useEffect\r\n} from \"react\";\r\nimport {\r\n  useParams\r\n} from \"react-router\";\r\nimport _ from \"lodash\";\r\nimport * as FirebaseService from '../services/firebase';\r\n\r\nfunction Autosave(character) {\r\n\r\n  // retrieve URL parameters for usage\r\n  const {\r\n    campaignURL,\r\n    characterURL\r\n  } = useParams();\r\n  const saveCharacter = character.character;\r\n\r\n  // State and setters\r\n  // Saving status (whether there is pending save request)\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  const debounceSave = useRef(\r\n    _.debounce(saveCharacter => {\r\n      FirebaseService.saveCharacter(campaignURL, characterURL, saveCharacter)\r\n        .then((results) => {\r\n          setIsSaving(false);\r\n          console.log('Saving Character...');\r\n        })\r\n        .catch((error) => {\r\n          alert(\"Failed to save character data correctly, see console error\");\r\n          console.error(\"Error saving document:\", error);\r\n        });\r\n    }, 10000,)\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (saveCharacter && !isSaving) {\r\n        setIsSaving(true);\r\n        console.log('Triggering Character Save...')\r\n        console.log('isSaving:', isSaving);\r\n        console.log(\"saveCharacter: \", saveCharacter);\r\n        debounceSave.current(saveCharacter);\r\n      }\r\n    },\r\n  );\r\n\r\n  return null;\r\n}\r\n\r\nexport default Autosave;\r\n","import React, {useState, useEffect} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\nimport { useParams } from \"react-router\";\r\nimport * as FirebaseService from '../services/firebase';\r\nimport CharacterSheetHeader from './CharacterSheetHeader'\r\nimport CharacterDetailsTable from './CharacterDetailsTable'\r\nimport CharacterTypeTable from './CharacterTypeTable'\r\nimport CharacterBasicAttributesTable from './CharacterBasicAttributesTable'\r\nimport CharacterAbilitiesTable from './CharacterAbilitiesTable'\r\nimport CharacterBondsTable from './CharacterBondsTable'\r\nimport CharacterItemsTable from './CharacterItemsTable'\r\nimport CharacterClassFeaturesTable from './CharacterClassFeaturesTable'\r\nimport Autosave from './Autosave'\r\n\r\nfunction CharacterSheet() {\r\n\r\n  // Definitions for state\r\n  const [character, setCharacter] = useState({});\r\n\r\n  // retrieve URL parameters for usage\r\n  const { campaignURL, characterURL } = useParams();\r\n\r\n/*\r\n  // Use an effect hook to subscribe to the character stream and\r\n  // automatically unsubscribe when the component unmounts.\r\n  useEffect(() => {\r\n    if (campaignURL && characterURL) {\r\n      const unsubscribe = FirebaseService.streamCharacter(campaignURL, characterURL, {\r\n          next: documentSnapshot => {\r\n              setCharacter(documentSnapshot.data());\r\n          },\r\n          error: (error) => {\r\n    alert(\"Failed to load character data correctly, see console error\");\r\n    console.error(\"Error loading data:\", error);\r\n  }\r\n      });\r\n      return unsubscribe;\r\n    }\r\n  }, [campaignURL, characterURL, setCharacter]);\r\n  */\r\n\r\n  // Setting state for character manually\r\n  useEffect(() => {\r\n    setCharacter({\r\n      abilities: [\r\n        {category: \"STR\", score: 1, affliction: \"Weak\"},\r\n        {category: \"DEX\", score: 1, affliction: \"Unafflicted\"},\r\n        {category: \"CON\", score: 1, affliction: \"Unafflicted\"},\r\n        {category: \"INT\", score: 1, affliction: \"Unafflicted\"},\r\n        {category: \"WIS\", score: 1, affliction: \"Unafflicted\"},\r\n        {category: \"CHA\", score: 1, affliction: \"Unafflicted\"}\r\n      ],\r\n      alignment: \"Good\",\r\n      armour: 3,\r\n      backstory: \"sad backstory\",\r\n      bonds: [\r\n        {bond: \"bond0\"},\r\n        {bond: \"bond1\"}\r\n      ],\r\n      charaFullName: \"Bobesque\",\r\n      classFeatures: [\r\n        {feature: \"classFeature0\", checkbox: true},\r\n        {feature: \"classFeature1\", checkbox: false},\r\n      ],\r\n      dwClass: \"Paladin\",\r\n      funds: 10,\r\n      hp:2,\r\n      items: [\r\n        {item: \"item0\", weight: 1},\r\n        {item: \"item1\", weight: 2}\r\n      ],\r\n      level: 2,\r\n      look: \"scraggly\",\r\n      owner: \"markwgodden@gmail.com\",\r\n      race: \"Elf\",\r\n      xp: 2\r\n    })\r\n  }, [setCharacter]);\r\n\r\n  console.log(\"character state:\",character);\r\n\r\n  return (\r\n  <CharacterState.Provider value={[character, setCharacter]}>\r\n    <CharacterSheetHeader/>\r\n    <Autosave character={character}/>\r\n    <br/>\r\n    <CharacterDetailsTable/>\r\n    <br/>\r\n    <CharacterTypeTable/>\r\n    <br/>\r\n    <CharacterBasicAttributesTable/>\r\n    <br/>\r\n    <CharacterAbilitiesTable/>\r\n    <br/>\r\n    <CharacterBondsTable/>\r\n    <br/>\r\n    <CharacterItemsTable/>\r\n    <br/>\r\n    <CharacterClassFeaturesTable/>\r\n    <br/>\r\n  </CharacterState.Provider>);\r\n}\r\n\r\nexport default CharacterSheet;\r\n","import React from 'react';\r\n\r\nconst CampaignState = React.createContext([{}, () => {}]);\r\n\r\nexport default CampaignState;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {useParams} from \"react-router\";\r\n\r\nfunction CampaignSheetHeader() {\r\n\r\n  // retrieve URL parameters for usage\r\n  const {campaignURL} = useParams();\r\n\r\n  return (<div>\r\n    <Link to=\"/dw-react\">Home</Link> >\r\n    <p>{campaignURL}</p>\r\n    <h1>{campaignURL}\r\n    </h1>\r\n  </div>);\r\n}\r\n\r\nexport default CampaignSheetHeader;\r\n","import React, {useContext} from 'react';\r\nimport CampaignState from './contexts/CampaignState';\r\nimport {Link} from 'react-router-dom';\r\nimport {useParams} from \"react-router\";\r\n\r\nfunction CampaignDetails() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [campaign] = useContext(CampaignState);\r\n\r\n  // retrieve URL parameters for usage\r\n  const {campaignURL} = useParams();\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>CHARACTERS</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          campaign.campaign && campaign.campaign.map((campaign, index) => {\r\n            return (\r\n            <tr key={index}>\r\n              <td><Link to={\"/dw-react/\" + campaignURL + \"/\" + campaign.character}>{campaign.character}</Link></td>\r\n              <td>({campaign.characterData.owner})</td>\r\n              <td>HP: {campaign.characterData.hp}</td>\r\n              <td>XP: {campaign.characterData.xp}</td>\r\n            </tr>)\r\n          })\r\n        }\r\n      </tbody>\r\n    </table>\n  );\n}\n\nexport default CampaignDetails;\n","import React, {useState, useEffect} from 'react';\r\nimport CampaignState from './contexts/CampaignState';\r\nimport {useParams} from \"react-router\";\r\nimport * as FirebaseService from '../services/firebase';\r\nimport CampaignSheetHeader from './CampaignSheetHeader';\r\nimport CampaignDetails from './CampaignDetails'\r\n\r\nfunction CampaignSheet() {\r\n\r\n  // Definitions for state\r\n  const [campaign, setCampaign] = useState({});\r\n\r\n  // retrieve URL parameters for usage\r\n  const {campaignURL} = useParams();\r\n\r\n  // Use an effect hook to subscribe to the campaign stream and\r\n  // automatically unsubscribe when the component unmounts.\r\n  useEffect(() => {\r\n    if (campaignURL) {\r\n      const unsubscribe = FirebaseService.streamCharacters(campaignURL, {\r\n        next: querySnapshot => {\r\n          //const updatedCharacterList = querySnapshot.docs.map((docSnapshot) => { return(docSnapshot.data())});\r\n          const updatedCharacterList = querySnapshot.docs.map((docSnapshot) => { return({character: docSnapshot.id , characterData: docSnapshot.data()})});\r\n          setCampaign(campaign => ({campaign: updatedCharacterList}));\r\n        },\r\n        error: (error) => {\r\n          alert(\"Failed to load campaign data correctly, see console error\");\r\n          console.error(\"Error loading data:\", error);\r\n        }\r\n      });\r\n      return unsubscribe;\r\n    }\r\n  }, [campaignURL, setCampaign]);\r\n\r\n  console.log(\"campaign state:\", campaign);\r\n\r\n  return (<CampaignState.Provider value={[campaign, setCampaign]}>\r\n    <CampaignSheetHeader />\r\n    <br/>\r\n    <CampaignDetails/>\r\n  </CampaignState.Provider>);\r\n}\r\n\r\nexport default CampaignSheet;\r\n","import React, {useState, useEffect} from 'react';\r\nimport * as FirebaseService from '../services/firebase';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Homepage() {\r\n\r\n  // Definitions for state\r\n  const [campaigns, setCampaigns] = useState({});\r\n\r\n  // Use an effect hook to subscribe to the campaign stream and\r\n  // automatically unsubscribe when the component unmounts.\r\n  useEffect(() => {\r\n    const unsubscribe = FirebaseService.streamCampaigns({\r\n      next: querySnapshot => {\r\n        const updatedCampaignList = querySnapshot.docs.map((docSnapshot) => {\r\n          return ({id: docSnapshot.id})\r\n        });\r\n        setCampaigns(campaign => ({campaigns: updatedCampaignList}));\r\n      },\r\n      error: (error) => {\r\n        alert(\"Failed to load data correctly, see console error\");\r\n        console.error(\"Error loading data:\", error);\r\n      }\r\n    });\r\n    return unsubscribe;\r\n  }, [setCampaigns]);\r\n\r\n  console.log(\"campaigns state:\", campaigns)\r\n\r\n  return (<div>\r\n    <br/>\r\n    <h1>WELCOME!</h1>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>CAMPAIGNS</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          campaigns.campaigns && campaigns.campaigns.map((campaign, index) => {\r\n            return (<tr key={index}>\r\n              <Link to={\"/dw-react/\" + campaign.id}>{campaign.id}</Link>\r\n            </tr>)\r\n          })\r\n        }</tbody>\r\n    </table>\r\n  </div>);\r\n}\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport ErrorPage from './ErrorPage'\r\nimport NavSidebar from './NavSidebar';\r\nimport UserProfile from './UserProfile';\r\nimport AppHeader from './AppHeader';\r\nimport CharacterSheet from './CharacterSheet';\r\nimport CampaignSheet from './CampaignSheet';\r\nimport Homepage from './Homepage';\r\n\r\nfunction App(props) {\r\n  const currentUser = props.currentUser;\r\n\r\n  return (<>\r\n    <UserProfile currentUser={currentUser}/>\r\n    <Router>\r\n      <AppHeader/>\r\n      <NavSidebar/>\r\n      <Switch>\r\n        <Route path=\"/dw-react/:campaignURL/:characterURL\" component={CharacterSheet} />\r\n        <Route path=\"/dw-react/:campaignURL\" component={CampaignSheet} />\r\n        <Route path=\"/dw-react\" component={Homepage} />\r\n        <Route component={ErrorPage} />\r\n      </Switch>\r\n    </Router>\r\n  </>)\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './custom.css';\r\nimport App from './components/App';\r\nimport * as FirebaseService from './services/firebase';\r\n\r\nexport const AuthContext = React.createContext(null);\r\n\r\nclass Index extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentUser: null\r\n    };\r\n  }\r\n\r\n  unsubscribeFromAuth = null;\r\n\r\n  componentDidMount() {\r\n    this.unsubscribeFromAuth = FirebaseService.auth.onAuthStateChanged(user => {\r\n      this.setState({ currentUser: user });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribeFromAuth();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {\r\n          this.state.currentUser ?\r\n            (<div>\r\n              <App currentUser={this.state.currentUser} />\r\n              <button onClick={() => FirebaseService.auth.signOut()}>LOG OUT</button>\r\n            </div>\r\n            ) :\r\n            <button onClick={FirebaseService.SignInWithGoogle}>SIGN IN WITH GOOGLE</button>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<Index />, rootElement);\r\n"],"sourceRoot":""}