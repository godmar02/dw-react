{"version":3,"sources":["components/ErrorPage.js","services/firebase.js","components/homepage/HomepageHeader.js","components/contexts/HomepageState.js","components/contexts/AuthState.js","components/homepage/HomepageDetails.js","components/homepage/Homepage.js","components/contexts/ProfileState.js","components/profile/ProfilePicture.js","components/profile/ProfileDetails.js","components/profile/UserProfile.js","components/AppHeader.js","components/contexts/CharacterState.js","components/character/CharacterSheetHeader.js","components/character/CharacterBasicDetails.js","components/character/CharacterDamage.js","components/character/CharacterArmour.js","components/character/CharacterFunds.js","components/character/CharacterHP.js","components/character/CharacterLevel.js","components/character/CharacterXP.js","components/character/CharacterBasicStats.js","components/character/CharacterAbilities.js","components/contexts/AddBondState.js","components/character/AddBond.js","components/character/CharacterBonds.js","components/contexts/AddItemState.js","components/character/AddItem.js","components/character/CharacterGear.js","components/character/CharacterClassFeatures.js","components/character/CharacterStandardMoves.js","components/character/CharacterAdvancedMoves.js","components/contexts/AddMoveState.js","components/character/AddMove.js","components/character/CharacterClassMoves.js","components/character/CharacterMoves.js","components/other/DiceRoller.js","components/character/CharacterSheet.js","components/contexts/CampaignState.js","components/campaign/CampaignHeader.js","components/contexts/CreateCharacterState.js","components/campaign/CreateCharacter.js","components/campaign/CampaignDetails.js","components/campaign/Campaign.js","components/App.js","index.js"],"names":["ErrorPage","firebase","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","provider","GoogleAuthProvider","SignInWithGoogle","signInWithPopup","saveCharacter","campaign","character","data","collection","doc","set","setCustomParameters","prompt","HomepageHeader","Breadcrumbs","aria-label","HomepageState","createContext","AuthState","useStyles","makeStyles","table","minWidth","HomepageDetails","classes","currentUser","useContext","useState","open","setOpen","campaignName","setCampaignName","campaigns","handleCancel","saveCampaign","owner","email","then","console","info","catch","error","alert","deleteCampaign","delete","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","IconButton","onClick","Add","TableBody","map","index","to","id","Delete","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","onChange","event","target","value","DialogActions","Button","color","Homepage","setCampaigns","useEffect","observer","next","querySnapshot","updatedCampaignList","docs","docSnapshot","onSnapshot","ctx","useMemo","Provider","ProfileState","ProfilePicture","show","setShow","Avatar","src","photoURL","alt","ProfileDetails","style","border","WebkitBorderRadius","borderRadius","display","position","top","right","backgroundColor","textAlign","font","letterSpacing","lineHeight","fontWeight","padding","displayName","variant","FirebaseService","signOut","UserProfile","theme","root","flexGrow","menuButton","marginRight","spacing","title","AppHeader","AppBar","Toolbar","edge","Menu","Typography","CharacterState","CharacterSheetHeader","useParams","campaignURL","characterURL","dw_class","level","smallTextField","width","CharacterBasicDetails","setCharacter","dwc","alig","alignment","handleCharacterChange","name","size","multiline","placeholder","full_name","backstory","class_details","suggested_look","suggestedLook","look","readOnly","race","race_move","alignments","find","x","attribute","textField","CharacterDamage","InputProps","damage","CharacterArmour","type","inputProps","min","armour","CharacterFunds","funds","CharacterHP","maxHp","abilities","base_hp","parseInt","category","score","hp","endAdornment","InputAdornment","input","CharacterLevel","CharacterXP","maxXp","xp","CharacterBasicStats","Grid","item","xs","container","justify","card","cardHeader","formControl","CharacterAbilities","updateAbilityScore","e","newAbilities","updateAbilityAffliction","affliction","abilityModifier","abilityScore","abilityAffliction","baseModifier","indexOf","modifier","ab","Card","CardHeader","CardContent","reduce","totalScore","max","fontSize","FormControl","Select","tabIndex","ability_afflictions","MenuItem","AddBondState","AddBond","bond","setBond","addBond","newBonds","bonds","RadioGroup","FormControlLabel","control","Radio","suggested_bonds","CharacterBonds","updateBond","splice","deleteBond","align","colSpan","AddItemState","AddItem","setItem","addItem","newItem","items","Object","assign","checkbox","newItems","Autocomplete","freeSolo","options","option","renderInput","params","chips","flexWrap","chip","maxWidth","borderBottom","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","Row","props","openRow","setOpenRow","updateItem","KeyboardArrowUp","KeyboardArrowDown","Checkbox","checked","updateItemCheckbox","uses","multiple","tags","Input","renderValue","selected","Chip","itemTags","weight","deleteItem","paddingBottom","paddingTop","Collapse","in","timeout","unmountOnExit","Box","itemTypes","description","cost","CharacterGear","totalLoad","maxLoad","str","base_load","CharacterClassFeatures","updateFeatureCheckbox","newFeatures","class_features","updateFeature","feature","deleteFeatureRow","addFeatureRow","CharacterStandardMoves","standard_moves","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","dangerouslySetInnerHTML","__html","CharacterAdvancedMoves","advanced_moves","AddMoveState","AddMove","move","setMove","addMove","newMove","moves","newMoves","starting_moves","CharacterClassStartingMoves","getMove","field","class_moves","TabPanel","children","other","role","hidden","p","a11yProps","palette","background","paper","CharacterMoves","React","setValue","Tabs","newValue","Tab","DiceRoller","dice","setDice","diceNum","setDiceNum","rollResult","setRollResult","singleRoll","sides","Math","floor","random","InputLabel","defaultValue","disabled","total","i","rollDice","CharacterSheet","documentSnapshot","debouncedSave","useCallback","callback","delay","timer","args","clearTimeout","setTimeout","debounce","keys","length","CampaignState","CampaignHeader","CreateCharacterState","backButton","instructions","marginTop","marginBottom","CampaignDetails","stepIndex","charaName","setCharaName","charaClass","setCharaClass","charaRace","setCharaRace","charaAlignment","setCharaAlignment","charaRaceMove","setCharaRaceMove","charaBonds","setCharaBonds","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBondChange","filter","handleSave","startingFunds","String","starting_funds","startingMoves","startingGear","starting_gear","Stepper","alternativeLabel","Step","StepLabel","dw_classes","suggested_names","races","race_moves","gear_details","FormLabel","FormGroup","getStepContent","deleteCharacter","action","subheader","characterData","CampaignSheet","setCampaign","updatedCharacterList","App","Container","exact","path","Campaign","Index","setCurrentUser","onAuthStateChanged","user","rootElement","document","getElementById","ReactDOM","render"],"mappings":"s7zEAEe,SAASA,IACtB,OAAO,uD,0BCYTC,IAASC,cAVc,CACrBC,OAAQC,0CACRC,WAAYD,sCACZE,UAAWF,sBACXG,YAAaH,6EACbI,cAAeJ,kCACfK,kBAAmBL,eACnBM,MAAON,4CACPO,cAAeP,iBAGV,IAAMQ,EAAOX,IAASW,OAChBC,EAAKZ,IAASa,YAGrBC,EAAW,IAAId,IAASW,KAAKI,mBAI5B,SAASC,IACdL,EAAKM,gBAAgBH,GAWhB,SAASI,EAAcC,EAAUC,EAAWC,GACjD,OAAOT,EACJU,WAAW,aACXC,IAAIJ,GACJG,WAAW,cACXC,IAAIH,GACJI,IAAIH,GArBTP,EAASW,oBAAoB,CAC3BC,OAAQ,mBA+DK1B,EAAf,EAAeA,I,SClFA,SAAS2B,IACtB,OACE,gCACE,cAACC,EAAA,EAAD,CAAaC,aAAW,aAAxB,SACE,uCAEF,uDCPN,IAEeC,EAFOC,0BCEPC,EAFGD,0B,kKCuBZE,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OAIC,SAASC,IACtB,IAAMC,EAAUL,IACRM,EAAgBC,qBAAWR,GAA3BO,YAFgC,EAGhBE,oBAAS,GAHO,mBAGjCC,EAHiC,KAG3BC,EAH2B,OAIAF,mBAAS,IAJT,mBAIjCG,EAJiC,KAInBC,EAJmB,KAKhCC,EAAcN,qBAAWV,GAAzBgB,UAMFC,EAAe,WACnBJ,GAAQ,IASJK,EAAe,WJrBhB,IAAwB7B,EAAU8B,EIsBjCL,GJtBuBzB,EIwBMyB,EJxBIK,EIwBUV,EAAYW,MJvBtDtC,EAAGU,WAAW,aAAaC,IAAIJ,GAAUK,IAAI,CAAEyB,MAAOA,KIwBtDE,MAAK,WACJC,QAAQC,KAAK,oBAAqBT,MAEnCU,OAAM,SAACC,GACNC,MAAM,gDACNJ,QAAQG,MAAM,2BAA4BA,MAG9CC,MAAM,+BAKJC,EAAiB,SAACb,GJCnB,IAAwBzB,EIAvByB,GJAuBzB,EIEMyB,EJD5BhC,EAAGU,WAAW,aAAaC,IAAIJ,GAAUuC,UIEzCP,MAAK,WACJC,QAAQC,KAAK,oBAAqBT,MAEnCU,OAAM,SAACC,GACNC,MAAM,gDACNJ,QAAQG,MAAM,2BAA4BA,MAG9CC,MAAM,iCAIV,OACE,qCACE,cAACG,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,UAAWzB,EAAQH,MAAON,aAAW,eAA5C,UACE,cAACmC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYtC,aAAW,MAAMuC,QAxDnB,WACtBzB,GAAQ,IAuDI,SACE,cAAC0B,EAAA,EAAD,aAKR,cAACC,EAAA,EAAD,UACGxB,EAAUA,WACTA,EAAUA,UAAUyB,KAAI,SAACpD,EAAUqD,GACjC,OACE,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAMO,GAAI,aAAetD,EAASuD,GAAlC,SAAuCvD,EAASuD,OAElD,cAACR,EAAA,EAAD,UAAY/C,EAAS8B,QACrB,cAACiB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEtC,aAAW,SACXuC,QAAS,kBAAMX,EAAetC,EAASuD,KAFzC,SAGE,cAACC,EAAA,EAAD,UATSH,aAkB3B,eAACI,EAAA,EAAD,CACElC,KAAMA,EACNmC,QAAS9B,EACT+B,kBAAgB,oBAHlB,UAIE,cAACC,EAAA,EAAD,CAAaL,GAAG,oBAAhB,iCACA,eAACM,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,6HAIA,cAACC,EAAA,EAAD,CACEC,WAAW,EACXC,OAAO,QACPV,GAAG,OACHW,MAAM,gBACNC,WAAS,EACTC,SAAU,SAACC,GAAD,OAAW3C,EAAgB2C,EAAMC,OAAOC,aAGtD,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQxB,QAASrB,EAAc8C,MAAM,UAArC,oBAGA,cAACD,EAAA,EAAD,CAAQxB,QAnGG,WACjBzB,GAAQ,GACRK,KAiGmC6C,MAAM,UAAnC,sCC3IK,SAASC,IAAY,IAAD,EACCrD,mBAAS,IADV,mBAC1BK,EAD0B,KACfiD,EADe,KAKjCC,qBAAU,WACR,ILkC4BC,EKtB5B,OLsB4BA,EKlCwB,CAClDC,KAAM,SAACC,GACL,IAAMC,EAAsBD,EAAcE,KAAK9B,KAAI,SAAC+B,GAClD,MAAO,CAAE5B,GAAI4B,EAAY5B,GAAIzB,MAAOqD,EAAYjF,OAAO4B,UAEzD8C,GAAa,SAAC5E,GAAD,MAAe,CAAE2B,UAAWsD,OAE3C7C,MAAO,SAACA,GACNC,MAAM,oDACNJ,QAAQG,MAAM,sBAAuBA,KL0BpC3C,EAAGU,WAAW,aAAaiF,WAAWN,KKtB1C,CAACF,IAEJC,qBAAU,WACR5C,QAAQC,KAAK,mBAAoBP,KAChC,CAACA,IAEJ,IAAM0D,EAAMC,mBAAQ,iBAAO,CAAE3D,eAAc,CAACA,IAE5C,OACE,eAAC,EAAc4D,SAAf,CAAwBhB,MAAOc,EAA/B,UACE,cAAC7E,EAAD,IACA,uBACA,cAACU,EAAD,O,+BCjCSsE,EAFM5E,0B,SCGN,SAAS6E,IAAkB,IAChCrE,EAAgBC,qBAAWR,GAA3BO,YAD+B,EAEbC,qBAAWmE,GAA7BE,EAF+B,EAE/BA,KAAMC,EAFyB,EAEzBA,QAGd,OACE,cAACC,EAAA,EAAD,CACEC,IAAKzE,EAAY0E,SACjBC,IAAI,iBACJ9C,QAAS,kBANe0C,GAASD,MCHxB,SAASM,IAAkB,IAChC5E,EAAgBC,qBAAWR,GAA3BO,YAER,OACE,sBACE6E,MAAO,CACLC,OAAQ,IACRC,mBAAoB,MACpBC,aAAc,MACdC,QAAS,eACTpC,OAAQ,IACRqC,SAAU,WACVC,IAAK,OACLC,MAAO,OACP9B,MAAO,UACP+B,gBAAiB,wBACjBC,UAAW,OACXC,KAAM,uCACNC,cAAe,QACfC,WAAY,OACZC,WAAY,OACZC,QAAS,WAjBb,UAmBE,qBACEd,MAAO,CACLvB,MAAO,SAFX,4BAMA,8BAAMtD,EAAY4F,cAClB,8BAAM5F,EAAYW,QAClB,cAAC0C,EAAA,EAAD,CACEwC,QAAQ,YACRvC,MAAM,UACNzB,QAAS,kBAAMiE,EAAqBC,WAHtC,wBC/BS,SAASC,IAAe,IAAD,EACZ9F,oBAAS,GADG,mBAC7BoE,EAD6B,KACvBC,EADuB,KAE9BN,EAAMC,mBAAQ,iBAAO,CAAEI,OAAMC,aAAY,CAACD,IAEhD,OACE,eAAC,EAAaH,SAAd,CAAuBhB,MAAOc,EAA9B,UACE,cAACI,EAAD,IADF,IACsBC,EAAO,cAACM,EAAD,IAAqB,QCLtD,IAAMlF,EAAYC,aAAW,SAACsG,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAIC,SAASK,KACtB,IAAMzG,EAAUL,IAChB,OACE,qBAAK8B,UAAWzB,EAAQmG,KAAxB,SACE,cAACO,EAAA,EAAD,CAAQvB,SAAS,SAAjB,SACE,eAACwB,EAAA,EAAD,WACE,cAAC9E,EAAA,EAAD,CACE+E,KAAK,QACLnF,UAAWzB,EAAQqG,WACnB9C,MAAM,UACNhE,aAAW,OAJb,SAKE,cAACsH,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,CAAYxF,UAAW,OAAQwE,QAAQ,KAAKrE,UAAWzB,EAAQwG,MAA/D,iEAGA,cAACP,EAAD,W,qBC9BKc,GAFQtH,0B,uCCKR,SAASuH,KAAwB,IAAD,EACPC,cAA9BC,EADqC,EACrCA,YAAaC,EADwB,EACxBA,aACbrI,EAAcoB,qBAAW6G,IAAzBjI,UAER,OACE,qCACE,eAACQ,EAAA,EAAD,CAAaC,aAAW,aAAxB,UACE,cAAC,IAAD,CAAM4C,GAAG,YAAT,kBACA,cAAC,IAAD,CAAMA,GAAI,aAAe+E,EAAzB,SAAuCA,IACvC,4BAAIC,OAEN,6BAAKA,IACL,8BACGrI,EAAUsI,SADb,YACgCtI,EAAUuI,Y,aCN1C1H,GAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,KAEZwH,eAAgB,CACdC,MAAO,OAII,SAASC,KAAyB,IAAD,EACVtH,qBAAW6G,IAAvCjI,EADsC,EACtCA,UAAW2I,EAD2B,EAC3BA,aACbzH,EAAUL,KAEV+H,EAAM5I,EAAUsI,SAChBO,EAAO7I,EAAU8I,UAUjBC,EAAwB,SAAC3E,GAC7B,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACf0E,EAAO3E,EAAO2E,KACpBL,GAAa,SAAC3I,GAAD,oBAAC,gBAAoBA,GAArB,mBAAiCgJ,EAAO1E,QAYvD,OACE,qCACE,cAAC/B,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,cAACC,EAAA,EAAD,CAAOC,UAAWzB,EAAQH,MAAOkI,KAAK,QAAQxI,aAAW,eAAzD,SACE,eAACyC,EAAA,EAAD,WACE,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,wBACA,cAACA,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEoF,WAAS,EACThF,WAAS,EACT8C,QAAQ,WACRvG,aAAW,iBACX0I,YAAY,qCACZ7E,MAAOtE,EAAUoJ,UACjBJ,KAAK,YACL7E,SAAU4E,SAIhB,eAAClG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,wBACA,cAACA,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEoF,WAAS,EACThF,WAAS,EACT8C,QAAQ,WACRvG,aAAW,iBACX0I,YAAY,4FACZ7E,MAAOtE,EAAUqJ,UACjBL,KAAK,YACL7E,SAAU4E,SAIhB,eAAClG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEoF,WAAS,EACThF,WAAS,EACT8C,QAAQ,WACRvG,aAAW,iBACX0I,YApDM,WACpB,GAAInJ,EAAUsI,SAAU,CACtB,IAAIM,EAAM5I,EAAUsI,SACpB,OAAOgB,KAAcV,GAAKW,eAE1B,MAAO,GA+CkBC,GACbR,KAAK,OACL1E,MAAOtE,EAAUyJ,KACjBtF,SAAU4E,gBAOtB,uBACA,cAACxG,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,cAACC,EAAA,EAAD,CAAOC,UAAWzB,EAAQH,MAAOkI,KAAK,QAAQxI,aAAW,eAAzD,SACE,eAACyC,EAAA,EAAD,WACE,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEoF,WAAS,EACThF,WAAS,EACTwF,UAAQ,EACR/G,UAAWzB,EAAQsH,eACnBxB,QAAQ,WACRgC,KAAK,UACL1E,MAAOtE,EAAUsI,aAGrB,cAACxF,EAAA,EAAD,OAEF,eAACD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEoF,WAAS,EACThF,WAAS,EACTwF,UAAQ,EACR/G,UAAWzB,EAAQsH,eACnBxB,QAAQ,WACRgC,KAAK,OACL1E,MAAOtE,EAAU2J,SAGrB,cAAC7G,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEoF,WAAS,EACThF,WAAS,EACTwF,UAAQ,EACR1C,QAAQ,WACRgC,KAAK,YACL1E,MAAOtE,EAAU4J,iBAIvB,eAAC/G,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,wBACA,cAACA,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEoF,WAAS,EACThF,WAAS,EACTwF,UAAQ,EACR/G,UAAWzB,EAAQsH,eACnBxB,QAAQ,WACRgC,KAAK,YACL1E,MAAOtE,EAAU8I,cAGrB,cAAChG,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEoF,WAAS,EACThF,WAAS,EACTwF,UAAQ,EACR1C,QAAQ,WACRgC,KAAK,iBACL1E,MA5IVtE,EAAUsI,UAAYtI,EAAU8I,UAC3BQ,KAAcV,GAAKiB,WAAWC,MAAK,SAACC,GAAD,OAAOA,EAAEjB,YAAcD,KAC9DmB,UAEI,oB,cC5BPnJ,GAAYC,aAAW,SAACsG,GAAD,MAAY,CACvC6C,UAAW,CACTxB,MAAO,GACP,UAAW,CACThC,UAAW,eAKF,SAASyD,KAAmB,IACjClK,EAAcoB,qBAAW6G,IAAzBjI,UACF4I,EAAM5I,EAAUsI,SAChBpH,EAAUL,KAUhB,OACE,cAACiD,EAAA,EAAD,CACEkD,QAAQ,WACRiC,KAAK,QACLtG,UAAWzB,EAAQ+I,UACnBjB,KAAK,SACL/E,MAAM,SACNkG,WAAY,CACVT,UAAU,GAEZpF,MAjBEtE,EAAUsI,SACLgB,KAAcV,GAAKwB,OAEnB,KCnBb,IAAMvJ,GAAYC,aAAW,SAACsG,GAAD,MAAY,CACvC6C,UAAW,CACTxB,MAAO,QAII,SAAS4B,KAAmB,IAAD,EACJjJ,qBAAW6G,IAAvCjI,EADgC,EAChCA,UAAW2I,EADqB,EACrBA,aACbzH,EAAUL,KAShB,OACE,cAACiD,EAAA,EAAD,CACEwG,KAAK,SACLtD,QAAQ,WACRiC,KAAK,QACLhF,MAAM,SACNsG,WAAY,CACVvE,MAAO,CAAES,UAAW,UACpB+D,IAAK,GAEPxB,KAAK,SACLrG,UAAWzB,EAAQ+I,UACnB3F,MAAOtE,EAAUyK,QAAU,GAC3BtG,SApB0B,SAACC,GAC7B,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACf0E,EAAO3E,EAAO2E,KACpBL,GAAa,SAAC3I,GAAD,oBAAC,gBAAoBA,GAArB,mBAAiCgJ,EAAO1E,UCdzD,IAAMzD,GAAYC,aAAW,SAACsG,GAAD,MAAY,CACvC6C,UAAW,CACTxB,MAAO,QAII,SAASiC,KAAkB,IAAD,EACHtJ,qBAAW6G,IAAvCjI,EAD+B,EAC/BA,UAAW2I,EADoB,EACpBA,aACbzH,EAAUL,KAShB,OACE,cAACiD,EAAA,EAAD,CACEwG,KAAK,SACLtD,QAAQ,WACRiC,KAAK,QACLtG,UAAWzB,EAAQ+I,UACnBjB,KAAK,QACL/E,MAAM,QACNsG,WAAY,CACVvE,MAAO,CAAES,UAAW,UACpB+D,IAAK,GAEPlG,MAAOtE,EAAU2K,OAAS,GAC1BxG,SApB0B,SAACC,GAC7B,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACf0E,EAAO3E,EAAO2E,KACpBL,GAAa,SAAC3I,GAAD,oBAAC,gBAAoBA,GAArB,mBAAiCgJ,EAAO1E,U,cCbnDzD,GAAYC,aAAW,SAACsG,GAAD,MAAY,CACvC6C,UAAW,CACTxB,MAAO,SAII,SAASmC,KAAe,IAAD,EACAxJ,qBAAW6G,IAAvCjI,EAD4B,EAC5BA,UAAW2I,EADiB,EACjBA,aACbC,EAAM5I,EAAUsI,SAChBpH,EAAUL,KAEVgK,EAAQ,WACZ,OAAI7K,EAAUsI,UAAYtI,EAAU8K,UAEhCxB,KAAcV,GAAKmC,QACnBC,SACEhL,EAAU8K,UAAUhB,MAAK,SAACC,GAAD,MAAsB,QAAfA,EAAEkB,YAAoBC,MACtD,IAIG,IAoBX,OACE,mCACE,cAACpH,EAAA,EAAD,CACEwG,KAAK,SACLtD,QAAQ,WACR/C,MAAM,KACN9B,MApBA6I,SAAShL,EAAUmL,GAAI,IAAMN,IAqB7BV,WAAY,CACViB,aACE,cAACC,GAAA,EAAD,CAAgBhF,SAAS,MAAzB,SAAgC,MAAQwE,MAE1ClI,UAAWzB,EAAQoK,OAErBrC,KAAK,QACLtG,UAAWzB,EAAQ+I,UACnBM,WAAY,CACVvE,MAAO,CAAES,UAAW,UACpB+D,IAAK,GAEPxB,KAAK,KACL1E,MAAOtE,EAAUmL,IAAM,GACvBhH,SA5BwB,SAACC,GAC7B,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACf0E,EAAO3E,EAAO2E,KACpBL,GAAa,SAAC3I,GAAD,oBAAC,gBAAoBA,GAArB,mBAAiCgJ,EAAO1E,YCvCzD,IAAMzD,GAAYC,aAAW,SAACsG,GAAD,MAAY,CACvC6C,UAAW,CACTxB,MAAO,QAII,SAAS8C,KAAkB,IAAD,EACHnK,qBAAW6G,IAAvCjI,EAD+B,EAC/BA,UAAW2I,EADoB,EACpBA,aACbzH,EAAUL,KAShB,OACE,cAACiD,EAAA,EAAD,CACEwG,KAAK,SACLtD,QAAQ,WACRiC,KAAK,QACLhF,MAAM,QACNtB,UAAWzB,EAAQ+I,UACnBM,WAAY,CACVvE,MAAO,CAAES,UAAW,UACpB+D,IAAK,GAEPxB,KAAK,QACL1E,MAAOtE,EAAUuI,OAAS,GAC1BpE,SApB0B,SAACC,GAC7B,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACf0E,EAAO3E,EAAO2E,KACpBL,GAAa,SAAC3I,GAAD,oBAAC,gBAAoBA,GAArB,mBAAiCgJ,EAAO1E,UCdzD,IAAMzD,GAAYC,aAAW,SAACsG,GAAD,MAAY,CACvC6C,UAAW,CACTxB,MAAO,SAII,SAAS+C,KAAe,IAAD,EACApK,qBAAW6G,IAAvCjI,EAD4B,EAC5BA,UAAW2I,EADiB,EACjBA,aACbzH,EAAUL,KAGV4K,EAAQ,WACZ,OAAIzL,EAAUuI,MACLyC,SAAShL,EAAUuI,MAAO,IAAM,EAEhC,IAoBX,OACE,mCACE,cAACzE,EAAA,EAAD,CACEwG,KAAK,SACLtD,QAAQ,WACR/C,MAAM,KACN9B,MApBA6I,SAAShL,EAAU0L,GAAI,IAAMD,IAqB7BtB,WAAY,CACViB,aACE,cAACC,GAAA,EAAD,CAAgBhF,SAAS,MAAzB,SAAgC,MAAQoF,MAE1C9I,UAAWzB,EAAQoK,OAErBrC,KAAK,QACLtG,UAAWzB,EAAQ+I,UACnBM,WAAY,CACVvE,MAAO,CAAES,UAAW,UACpB+D,IAAK,GAEPxB,KAAK,KACL1E,MAAOtE,EAAU0L,IAAM,GACvBvH,SA5BwB,SAACC,GAC7B,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACf0E,EAAO3E,EAAO2E,KACpBL,GAAa,SAAC3I,GAAD,oBAAC,gBAAoBA,GAArB,mBAAiCgJ,EAAO1E,YC3BzD,IAAMzD,GAAYC,aAAW,SAACsG,GAAD,MAAY,CACvCC,KAAM,CACJrG,SAAU,SAIC,SAAS2K,KACtB,IAAMzK,EAAUL,KAEhB,OACE,cAAC+K,GAAA,EAAD,CAAMjJ,UAAWzB,EAAQmG,KAAMI,QAAS,EAAxC,SACE,cAACmE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,eAACF,GAAA,EAAD,CAAMG,WAAS,EAACC,QAAQ,SAASvE,QAAS,EAA1C,UACE,cAACmE,GAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAACN,GAAD,MAEF,cAACK,GAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAACL,GAAD,MAEF,cAACI,GAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAAC3B,GAAD,MAEF,cAAC0B,GAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAACxB,GAAD,MAEF,cAACuB,GAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAACnB,GAAD,MAEF,cAACkB,GAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAACjB,GAAD,a,kFCxBN/J,GAAYC,aAAW,SAACsG,GAAD,MAAY,CACvC6E,KAAM,CACJxD,MAAO,IACP3B,QAAS,GAEXoF,WAAY,CACVzF,UAAW,UAEb0F,YAAa,CACXnI,OAAQ,EACRyE,MAAO,IACPhC,UAAW,UAEbwD,UAAW,CACTxB,MAAO,SAII,SAAS2D,KACtB,IAAMlL,EAAUL,KAD2B,EAEPO,qBAAW6G,IAAvCjI,EAFmC,EAEnCA,UAAW2I,EAFwB,EAExBA,aAEb0D,EAAqB,SAACjJ,GAAD,OAAW,SAACkJ,GACrC,IAAIC,EAAY,aAAOvM,EAAU8K,WACjCyB,EAAanJ,GAAb,6BACKpD,EAAU8K,UAAU1H,IADzB,IAEE8H,MAAOoB,EAAEjI,OAAOC,QAElBqE,GAAa,SAAC3I,GAAD,oBAAC,gBACTA,GADQ,IAEX8K,UAAWyB,SAITC,EAA0B,SAACpJ,GAAD,OAAW,SAACkJ,GAC1C,IAAIC,EAAY,aAAOvM,EAAU8K,WACjCyB,EAAanJ,GAAb,6BACKpD,EAAU8K,UAAU1H,IADzB,IAEEqJ,WAAYH,EAAEjI,OAAOC,QAEvBqE,GAAa,SAAC3I,GAAD,oBAAC,gBACTA,GADQ,IAEX8K,UAAWyB,SAITG,EAAkB,SAACC,EAAcC,GACrC,GAAID,GAAgBC,EAAmB,CACrC,IAAIC,EAGJF,EAAe3B,SAAS2B,EAAc,IAElC,CAAC,EAAG,EAAG,GAAGG,QAAQH,IAAiB,EACrCE,GAAgB,EACP,CAAC,EAAG,GAAGC,QAAQH,IAAiB,EACzCE,GAAgB,EACP,CAAC,EAAG,EAAG,GAAGC,QAAQH,IAAiB,EAC5CE,GAAgB,EACP,CAAC,EAAG,GAAI,GAAI,IAAIC,QAAQH,IAAiB,EAClDE,EAAe,EACN,CAAC,GAAI,GAAI,IAAIC,QAAQH,IAAiB,EAC/CE,EAAe,EACN,CAAC,GAAI,IAAIC,QAAQH,IAAiB,EAC3CE,EAAe,EACW,KAAjBF,IACTE,EAAe,GAUjB,IAAIE,EAAWF,GANW,gBAAtBD,EACU,EAEA,GAKd,OAAIG,EAAW,EACN,KAAOA,EAAW,IAElB,IAAMA,EAAW,IAG1B,MAAO,IAiBX,OACE,cAACnB,GAAA,EAAD,CAAMjJ,UAAWzB,EAAQmG,KAAMI,QAAS,EAAxC,SACE,cAACmE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACF,GAAA,EAAD,CAAMG,WAAS,EAACC,QAAQ,SAASvE,QAAS,EAA1C,SACGzH,EAAU8K,WACT9K,EAAU8K,UAAU3H,KAAI,SAAC2H,EAAW1H,GAClC,IAAM4J,EAAKlC,EAAUG,SACrB,OACE,cAACW,GAAA,EAAD,CAAMC,MAAI,EAAV,SACE,eAACoB,GAAA,EAAD,CAAMtK,UAAWzB,EAAQ+K,KAAzB,UACE,cAACiB,GAAA,EAAD,CACExF,MAAOoD,EAAUG,SACjBtI,UAAWzB,EAAQgL,aAErB,eAACiB,GAAA,EAAD,WACE,cAACrJ,EAAA,EAAD,CACEwG,KAAK,SACLtD,QAAQ,WACR7E,MAzBD,KAJAnC,EAAU8K,UAAUsC,QACrC,SAACC,EAAYpN,GAAb,OAAsBoN,EAAarC,SAAS/K,EAAKiL,OAAS,EAAG,MAC7D,GA4BkBjC,KAAK,QACLjF,OAAO,OACPgF,KAAM8B,EAAUG,SAAW,QAC3B3G,MAAOwG,EAAUI,MACjBvI,UAAWzB,EAAQ+I,UACnBM,WAAY,CACVvE,MAAO,CAAES,UAAW,UACpB+D,IAAK,EACL8C,IAAK,IAEPnJ,SAAUkI,EAAmBjJ,KAE/B,cAACU,EAAA,EAAD,CACEkD,QAAQ,WACRgC,KAAM8B,EAAUG,SAAW,WAC3B3G,MAAOoI,EACL5B,EAAUI,MACVJ,EAAU2B,YAEZtC,WAAY,CAAET,UAAU,GACxBa,WAAY,CACVvE,MAAO,CACLS,UAAW,SACXI,WAAY,OACZ0G,SAAU,KAGd5K,UAAWzB,EAAQ+I,YAErB,cAACuD,GAAA,EAAD,CACExG,QAAQ,WACRiC,KAAK,QACLtG,UAAWzB,EAAQiL,YAHrB,SAIE,cAACsB,GAAA,EAAD,CACEC,UAAW,EACXpJ,MAAOwG,EAAU2B,YAAc,OAC/BzD,KAAM8B,EAAUG,SAAW,aAC3B9G,SAAUqI,EAAwBpJ,GAJpC,SAKGuK,KAAoBX,GAAI7J,KAAI,SAAClD,EAAMmD,GAClC,OACE,cAACwK,GAAA,EAAD,CAAUtJ,MAAOrE,EAAjB,SACGA,GADyBmD,iBAnD1BA,YC1HhC,IAEeyK,GAFMlN,0B,8BCgBfE,GAAYC,aAAW,SAACsG,GAAD,MAAY,CACvC+E,YAAa,CACXnI,OAAQoD,EAAMK,QAAQ,GACtBzG,SAAU,SAIC,SAAS8M,KACtB,IAAM5M,EAAUL,KADgB,EAENO,qBAAWyM,IAA7BvM,EAFwB,EAExBA,KAAMC,EAFkB,EAElBA,QAFkB,EAGIH,qBAAW6G,IAAvCjI,EAHwB,EAGxBA,UAAW2I,EAHa,EAGbA,aAHa,EAIRtH,mBAAS,IAJD,mBAIzB0M,EAJyB,KAInBC,EAJmB,KAK1BpF,EAAM5I,EAAUsI,SAEhB3G,EAAe,WACnBqM,EAAQ,IACRzM,GAAQ,IASJ0M,EAAU,WACd,IAAMC,EAAQ,uBAAOlO,EAAUmO,OAAjB,CAAwBJ,IACtCpF,GAAa,SAAC3I,GAAD,oBAAC,gBAAoBA,GAArB,IAAgCmO,MAAOD,QAGtD,OACE,eAAC1K,EAAA,EAAD,CACElC,KAAMA,EACNmC,QAAS9B,EACT+B,kBAAgB,oBAHlB,UAIE,cAACC,EAAA,EAAD,CAAaL,GAAG,oBAAhB,0BAA+D,IAC/D,eAACM,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,8FAIA,cAAC2J,GAAA,EAAD,CAAahL,UAAU,WAAWG,UAAWzB,EAAQiL,YAArD,SACE,eAACiC,GAAA,EAAD,CACE3N,aAAW,OACXuI,KAAK,OACL1E,MAAOyJ,EACP5J,SAAU,SAACC,GAAD,OAAW4J,EAAQ5J,EAAMC,OAAOC,QAJ5C,UAKE,cAAC+J,GAAA,EAAD,CAAkB/J,MAAM,GAAGgK,QAAS,cAACC,GAAA,EAAD,IAAWtK,MAAM,WACpDjE,EAAUsI,UACTgB,KAAcV,GAAK4F,gBAAgBrL,KAAI,SAAClD,EAAMmD,GAC5C,OACE,cAACiL,GAAA,EAAD,CAEE/J,MAAOrE,EACPqO,QAAS,cAACC,GAAA,EAAD,IACTtK,MAAOhE,GAHFmD,cAUnB,eAACmB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQxB,QAASrB,EAAc8C,MAAM,UAArC,oBAGA,cAACD,EAAA,EAAD,CAAQxB,QA/CK,WACjBiL,IACAD,EAAQ,IACRzM,GAAQ,IA4CyBkD,MAAM,UAAnC,4BClER,IAAM5D,GAAYC,aAAW,SAACsG,GAAD,MAAY,CACvCrG,MAAO,CACLC,SAAU,SAIC,SAASyN,KACtB,IAAMvN,EAAUL,KADuB,EAEHO,qBAAW6G,IAAvCjI,EAF+B,EAE/BA,UAAW2I,EAFoB,EAEpBA,aAFoB,EAGftH,oBAAS,GAHM,mBAGhCC,EAHgC,KAG1BC,EAH0B,KAIjC6D,EAAMC,mBAAQ,iBAAO,CAAE/D,OAAMC,aAAY,CAACD,IAE1CoN,EAAa,SAACtL,GAAD,OAAW,SAACkJ,GAC7B,IAAI4B,EAAQ,aAAOlO,EAAUmO,OAC7BD,EAAS9K,GAASkJ,EAAEjI,OAAOC,MAC3BqE,GAAa,SAAC3I,GAAD,oBAAC,gBAAoBA,GAArB,IAAgCmO,MAAOD,SActD,OACE,qCACE,cAAC,GAAa5I,SAAd,CAAuBhB,MAAOc,EAA9B,SACE,cAAC0I,GAAD,MAEF,cAACvL,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,cAACC,EAAA,EAAD,CAAOC,UAAWzB,EAAQH,MAAON,aAAW,eAA5C,SACE,eAACyC,EAAA,EAAD,WACGlD,EAAUmO,OACTnO,EAAUmO,MAAMhL,KAAI,SAAC4K,EAAM3K,GACzB,OACE,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEoF,WAAS,EACThF,WAAS,EACT8C,QAAQ,WACRvG,aAAW,iBACX0I,YAAY,uBACZ7E,MAAOyJ,EACP/E,KAAM,OAAS5F,EACfe,SAAUuK,EAAWtL,OAGzB,cAACN,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEtC,aAAW,SACXuC,QAAS,kBAtCZ,SAACI,GAClB,IAAM8K,EAAQ,aAAOlO,EAAUmO,OAE/BD,EAASS,OAAOvL,EAAO,GACvBuF,GAAa,SAAC3I,GAAD,oBAAC,gBAAoBA,GAArB,IAAgCmO,MAAOD,OAkCjBU,CAAWxL,IAF5B,SAGE,cAACG,EAAA,EAAD,UAjBSH,MAuBrB,cAACP,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAW+L,MAAM,SAASC,QAAQ,IAAlC,SACE,cAAC/L,EAAA,EAAD,CAAYtC,aAAW,MAAMuC,QAxCnB,WACtBzB,GAAQ,IAuCI,SACE,cAAC0B,EAAA,EAAD,oBClFlB,IAEe8L,GAFMpO,0B,mBCaN,SAASqO,KAAW,IAAD,EACN5N,qBAAW2N,IAA7BzN,EADwB,EACxBA,KAAMC,EADkB,EAClBA,QADkB,EAEIH,qBAAW6G,IAAvCjI,EAFwB,EAExBA,UAAW2I,EAFa,EAEbA,aAFa,EAGRtH,mBAAS,IAHD,mBAGzBwK,EAHyB,KAGnBoD,EAHmB,KAK1BtN,EAAe,WACnBsN,EAAQ,IACR1N,GAAQ,IASJ2N,EAAU,WACd,IAAIC,EAAUC,KAAMtF,MAAK,SAACC,GAAD,OAAOA,EAAEf,OAAS6C,KAC3C,GAAIsD,EAAS,CACXA,EAAUE,OAAOC,OAAO,GAAIH,EAAS,CAAEI,UAAU,IACjD,IAAMC,EAAQ,uBAAOxP,EAAUoP,OAAjB,CAAwBD,IACtCxG,GAAa,SAAC3I,GAAD,oBAAC,gBAAoBA,GAArB,IAAgCoP,MAAOI,SAIxD,OACE,eAAChM,EAAA,EAAD,CACElC,KAAMA,EACNmC,QAAS9B,EACT+B,kBAAgB,oBAHlB,UAIE,cAACC,EAAA,EAAD,CAAaL,GAAG,oBAAhB,0BAA+D,IAC/D,eAACM,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,yFAIA,cAAC4L,GAAA,EAAD,CACEC,UAAQ,EACRvL,SAAU,SAACC,EAAOE,GAAR,OAAkB2K,EAAQ3K,IACpCqL,QAASP,KAAMjM,KAAI,SAACyM,GAAD,OAAYA,EAAO5G,QACtC6G,YAAa,SAACC,GAAD,OACX,cAAChM,EAAA,EAAD,6BACMgM,GADN,IAEE7L,MAAM,QACND,OAAO,SACPgD,QAAQ,oBAKhB,eAACzC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQxB,QAASrB,EAAc8C,MAAM,UAArC,oBAGA,cAACD,EAAA,EAAD,CAAQxB,QA5CK,WACjBkM,IACAD,EAAQ,IACR1N,GAAQ,IAyCyBkD,MAAM,UAAnC,4B,oFCnCF5D,GAAYC,aAAW,SAACsG,GAAD,MAAY,CACvC2I,MAAO,CACL3J,QAAS,OACT4J,SAAU,QAEZC,KAAM,CACJjM,OAAQ,GAEVmI,YAAa,CACXnI,OAAQoD,EAAMK,QAAQ,GACtBzG,SAAU,IACVkP,SAAU,KAEZnP,MAAO,CACLC,SAAU,KAEZiJ,UAAW,CACTxB,MAAO,KAETpB,KAAM,CACJ,QAAS,CACP8I,aAAc,cAOdC,GAAY,CAChBC,WAAY,CACVrK,MAAO,CACLsK,UAAWC,IACX9H,MAAO,OAKb,SAAS+H,GAAIC,GAAQ,IACX5E,EAAS4E,EAAT5E,KACAzI,EAAUqN,EAAVrN,MACFlC,EAAUL,KAHE,EAIYQ,oBAAS,GAJrB,mBAIXqP,EAJW,KAIFC,EAJE,OAKkBvP,qBAAW6G,IAAvCjI,EALU,EAKVA,UAAW2I,EALD,EAKCA,aAEbiI,EAAa,SAACxM,EAAOhB,GACzB,IAAMiB,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACf0E,EAAO3E,EAAO2E,KAChBwG,EAAQ,aAAOxP,EAAUoP,OAC7BI,EAASpM,GAAT,6BAAuBpD,EAAUoP,MAAMhM,IAAvC,mBAAgD4F,EAAO1E,IACvDqE,GAAa,SAAC3I,GAAD,oBAAC,gBAAoBA,GAArB,IAAgCoP,MAAOI,QAqBtD,OACE,qCACE,eAAC3M,EAAA,EAAD,CAAUF,UAAWzB,EAAQmG,KAA7B,UACE,cAACvE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEtC,aAAW,aACXwI,KAAK,QACLjG,QAAS,kBAAM2N,GAAYD,IAH7B,SAIGA,EAAU,cAACG,GAAA,EAAD,IAAsB,cAACC,GAAA,EAAD,QAGrC,cAAChO,EAAA,EAAD,UACE,cAACiO,GAAA,EAAD,CACE/H,KAAM,gBAAkB5F,EACxB4N,UAAWnF,EAAK0D,SAChBpL,SAjCiB,SAACf,GAAD,OAAW,SAACkJ,GACrC,IAAIkD,EAAQ,aAAOxP,EAAUoP,OAC7BI,EAASpM,GAAT,6BACKpD,EAAUoP,MAAMhM,IADrB,IAEEmM,SAAUjD,EAAEjI,OAAO2M,UAErBrI,GAAa,SAAC3I,GAAD,oBAAC,gBACTA,GADQ,IAEXoP,MAAOI,QAyBSyB,CAAmB7N,GAC7BqB,MAAM,cAGV,cAAC3B,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEI,WAAS,EACT+E,KAAK,QACLjC,QAAQ,WACRvG,aAAW,iBACX6D,MAAOuH,EAAK7C,KACZA,KAAK,OACL7E,SAAU,SAACC,GAAD,OAAWwM,EAAWxM,EAAOhB,QAG3C,cAACN,EAAA,EAAD,CAAW+L,MAAM,SAAjB,SACE,cAAC/K,EAAA,EAAD,CACEwG,KAAK,SACLpG,WAAS,EACT+E,KAAK,QACLjC,QAAQ,WACRrE,UAAWzB,EAAQ+I,UACnBM,WAAY,CACVvE,MAAO,CAAES,UAAW,UACpB+D,IAAK,GAEPxB,KAAK,OACL1E,MAAOuH,EAAKqF,KACZ/M,SAAU,SAACC,GAAD,OAAWwM,EAAWxM,EAAOhB,QAG3C,cAACN,EAAA,EAAD,UACE,cAAC0K,GAAA,EAAD,CAAa7K,UAAWzB,EAAQiL,YAAhC,SACE,cAACsB,GAAA,EAAD,CACE0D,UAAQ,EACR7M,MAAOuH,EAAKuF,KACZpI,KAAK,OACL7E,SAAU,SAACC,GAAD,OAAWwM,EAAWxM,EAAOhB,IACvCkI,MAAO,cAAC+F,GAAA,EAAD,IACPC,YAAa,SAACC,GAAD,OACX,qBAAK5O,UAAWzB,EAAQ6O,MAAxB,SACGwB,EAASpO,KAAI,SAACmB,EAAOlB,GAAR,OACZ,cAACoO,GAAA,EAAD,CAAkBvN,MAAOK,EAAO3B,UAAWzB,EAAQ+O,MAAxC7M,SAIjBgN,UAAWA,GAbb,SAcGqB,KAAStO,KAAI,SAAC6F,EAAM5F,GAAP,OACZ,cAACwK,GAAA,EAAD,CAAsBtJ,MAAO0E,EAA7B,SACGA,GADY5F,YAOvB,cAACN,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEwG,KAAK,SACLpG,WAAS,EACT+E,KAAK,QACLjC,QAAQ,WACRrE,UAAWzB,EAAQ+I,UACnBM,WAAY,CACVvE,MAAO,CAAES,UAAW,UACpB+D,IAAK,GAEPlG,MAAOuH,EAAK6F,OACZ1I,KAAK,SACL7E,SAAU,SAACC,GAAD,OAAWwM,EAAWxM,EAAOhB,QAG3C,cAACN,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYtC,aAAW,SAASuC,QAAS,kBA7F9B,SAACI,GAClB,IAAMoM,EAAQ,aAAOxP,EAAUoP,OAC/BI,EAASb,OAAOvL,EAAO,GACvBuF,GAAa,SAAC3I,GAAD,oBAAC,gBAAoBA,GAArB,IAAgCoP,MAAOI,OA0FCmC,CAAWvO,IAA1D,SACE,cAACG,EAAA,EAAD,WAIN,cAACV,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWkD,MAAO,CAAE4L,cAAe,EAAGC,WAAY,GAAK/C,QAAS,EAAhE,SACE,cAACgD,GAAA,EAAD,CAAUC,GAAIrB,EAASsB,QAAQ,OAAOC,eAAa,EAAnD,SACE,cAACC,GAAA,EAAD,CAAKlO,OAAQ,EAAb,SACE,eAACtB,EAAA,EAAD,CAAOuG,KAAK,QAAQxI,aAAW,YAA/B,UACE,cAACmC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAW+L,MAAM,SAAjB,kBACA,cAAC/L,EAAA,EAAD,0BACA,cAACA,EAAA,EAAD,CAAW+L,MAAM,SAAjB,uBAGJ,eAAC3L,EAAA,EAAD,WACE,cAACJ,EAAA,EAAD,CAAW+L,MAAM,SAAjB,SACE,cAACrB,GAAA,EAAD,CACExG,QAAQ,WACRiC,KAAK,QACLtG,UAAWzB,EAAQiL,YAHrB,SAIE,cAACsB,GAAA,EAAD,CACEC,UAAW,EACXpJ,MAAOuH,EAAKvB,KACZtB,KAAK,OACL7E,SAAU,SAACC,GAAD,OAAWwM,EAAWxM,EAAOhB,IAJzC,SAKG+O,KAAUhP,KAAI,SAACmH,EAAMlH,GAAP,OACb,cAACwK,GAAA,EAAD,CAAsBtJ,MAAOgG,EAA7B,SACGA,GADYlH,YAOvB,cAACN,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEoF,WAAS,EACThF,WAAS,EACT+E,KAAK,QACLjC,QAAQ,WACRvG,aAAW,iBACX6D,MAAOuH,EAAKuG,YACZpJ,KAAK,cACL7E,SAAU,SAACC,GAAD,OAAWwM,EAAWxM,EAAOhB,QAG3C,cAACN,EAAA,EAAD,CAAW+L,MAAM,SAAjB,SACE,cAAC/K,EAAA,EAAD,CACEwG,KAAK,SACLpG,WAAS,EACT+E,KAAK,QACLjC,QAAQ,WACRrE,UAAWzB,EAAQ+I,UACnBM,WAAY,CACVvE,MAAO,CAAES,UAAW,UACpB+D,IAAK,GAEPxB,KAAK,OACL1E,MAAOuH,EAAKwG,KACZlO,SAAU,SAACC,GAAD,OAAWwM,EAAWxM,EAAOhB,yBAa9C,SAASkP,KACtB,IAAMpR,EAAUL,KACRb,EAAcoB,qBAAW6G,IAAzBjI,UACF4I,EAAM5I,EAAUsI,SAHgB,EAIdjH,oBAAS,GAJK,mBAI/BC,EAJ+B,KAIzBC,EAJyB,KAMhC6D,EAAMC,mBAAQ,iBAAO,CAAE/D,OAAMC,aAAY,CAACD,IAE1CiR,EAAY,WAChB,OAAIvS,EAAUoP,MACLpP,EAAUoP,MAAMhC,QACrB,SAACmF,EAAWtS,GAAZ,OAAqBsS,EAAYvH,SAAS/K,EAAKyR,QAAU,EAAG,MAC5D,GAGK,IAILc,EAAU,WACd,GACExS,EAAUsI,UACVtI,EAAU8K,UAAUhB,MAAK,SAACC,GAAD,MAAsB,QAAfA,EAAEkB,YAAoBC,OACtDlL,EAAU8K,UAAUhB,MAAK,SAACC,GAAD,MAAsB,QAAfA,EAAEkB,YAAoBwB,WACtD,CACA,IACII,EADA4F,EAAMzS,EAAU8K,UAAUhB,MAAK,SAACC,GAAD,MAAsB,QAAfA,EAAEkB,YAExC2B,EAAoB6F,EAAIhG,WACxBE,EAAe3B,SAASyH,EAAIvH,MAAO,IAGnC,CAAC,EAAG,EAAG,GAAG4B,QAAQH,IAAiB,EACrCE,GAAgB,EACP,CAAC,EAAG,GAAGC,QAAQH,IAAiB,EACzCE,GAAgB,EACP,CAAC,EAAG,EAAG,GAAGC,QAAQH,IAAiB,EAC5CE,GAAgB,EACP,CAAC,EAAG,GAAI,GAAI,IAAIC,QAAQH,IAAiB,EAClDE,EAAe,EACN,CAAC,GAAI,GAAI,IAAIC,QAAQH,IAAiB,EAC/CE,EAAe,EACN,CAAC,GAAI,IAAIC,QAAQH,IAAiB,EAC3CE,EAAe,EACW,KAAjBF,IACTE,EAAe,GAUjB,IAAIE,EAAWF,GANW,gBAAtBD,EACU,EAEA,GAKd,OAAOtD,KAAcV,GAAK8J,UAAY3F,EAEtC,MAAO,IAgBX,OACE,qCACE,cAAC,GAAazH,SAAd,CAAuBhB,MAAOc,EAA9B,SACE,cAAC4J,GAAD,MAEF,cAACzM,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,UAAWzB,EAAQH,MAAON,aAAW,eAA5C,UACE,cAACmC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CAAW+L,MAAM,SAAjB,sBACA,cAAC/L,EAAA,EAAD,CAAW+L,MAAM,SAAjB,kBACA,cAAC/L,EAAA,EAAD,CAAW+L,MAAM,SAAjB,kBACA,cAAC/L,EAAA,EAAD,CAAW+L,MAAM,SAAjB,kBACA,cAAC/L,EAAA,EAAD,CAAW+L,MAAM,SAAjB,oBACA,cAAC/L,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYtC,aAAW,MAAMuC,QApBnB,WACtBzB,GAAQ,IAmBI,SACE,cAAC0B,EAAA,EAAD,aAKR,eAACC,EAAA,EAAD,WACGlD,EAAUoP,OACTpP,EAAUoP,MAAMjM,KAAI,SAAC0I,EAAMzI,GAAP,OAClB,cAACoN,GAAD,CAAiBpN,MAAOA,EAAOyI,KAAMA,GAA3BzI,MAEd,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAW+L,MAAM,QAAQC,QAAQ,IAAjC,kBAGA,cAAChM,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEI,WAAS,EACT/B,MA7CVoQ,IAAcC,IA8CJvJ,KAAK,QACLjC,QAAQ,WACRgC,KAAK,YACLrG,UAAWzB,EAAQ+I,UACnBE,WAAY,CACVT,UAAU,GAEZa,WAAY,CACVvE,MAAO,CAAES,UAAW,WAEtBnC,MAAOiO,IAAc,MAAQC,QAGjC,cAAC1P,EAAA,EAAD,kBClXd,IAAMjC,GAAYC,aAAW,SAACsG,GAAD,MAAY,CACvCrG,MAAO,CACLC,SAAU,SAIC,SAAS2R,KACtB,IAAMzR,EAAUL,KAD+B,EAEXO,qBAAW6G,IAAvCjI,EAFuC,EAEvCA,UAAW2I,EAF4B,EAE5BA,aAGbiK,EAAwB,SAACxP,GAAD,OAAW,SAACkJ,GACxC,IAAIuG,EAAW,aAAO7S,EAAU8S,gBAChCD,EAAYzP,GAAZ,6BACKpD,EAAU8S,eAAe1P,IAD9B,IAEEmM,SAAUjD,EAAEjI,OAAO2M,UAErBrI,GAAa,SAAC3I,GAAD,oBAAC,gBACTA,GADQ,IAEX8S,eAAgBD,SAIdE,EAAgB,SAAC3P,GAAD,OAAW,SAACkJ,GAChC,IAAIuG,EAAW,aAAO7S,EAAU8S,gBAChCD,EAAYzP,GAAZ,6BACKpD,EAAU8S,eAAe1P,IAD9B,IAEE4P,QAAS1G,EAAEjI,OAAOC,QAEpBqE,GAAa,SAAC3I,GAAD,oBAAC,gBACTA,GADQ,IAEX8S,eAAgBD,SA0BpB,OACE,cAACtQ,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,cAACC,EAAA,EAAD,CAAOC,UAAWzB,EAAQH,MAAON,aAAW,eAA5C,SACE,eAACyC,EAAA,EAAD,WACGlD,EAAU8S,gBACT9S,EAAU8S,eAAe3P,KAAI,SAAC2P,EAAgB1P,GAC5C,OACE,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACiO,GAAA,EAAD,CACE/H,KAAM,yBAA2B5F,EACjC4N,UAAW8B,EAAevD,SAC1BpL,SAAUyO,EAAsBxP,GAChCqB,MAAM,cAGV,cAAC3B,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEoF,WAAS,EACThF,WAAS,EACT8C,QAAQ,WACRvG,aAAW,iBACX0I,YAAY,uGACZ7E,MAAOwO,EAAeE,QACtBhK,KAAM,gBAAkB5F,EACxBe,SAAU4O,EAAc3P,OAG5B,cAACN,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEtC,aAAW,SACXuC,QAAS,kBApDJ,SAACI,GACxB,IAAMyP,EAAW,aAAO7S,EAAU8S,gBAClCD,EAAYlE,OAAOvL,EAAO,GAC1BuF,GAAa,SAAC3I,GAAD,oBAAC,gBACTA,GADQ,IAEX8S,eAAgBD,OA+CeI,CAAiB7P,IAFlC,SAGE,cAACG,EAAA,EAAD,UAzBSH,MA+BrB,cAACP,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWgM,QAAQ,IAAID,MAAM,SAA7B,SACE,cAAC9L,EAAA,EAAD,CAAYtC,aAAW,MAAMuC,QAAS,kBAnD5B,WACpB,IAAM6P,EAAW,uBACZ7S,EAAU8S,gBADE,CAEf,CAAEE,QAAS,GAAIzD,UAAU,KAE3B5G,GAAa,SAAC3I,GAAD,oBAAC,gBACTA,GADQ,IAEX8S,eAAgBD,OA4CoCK,IAA5C,SACE,cAACjQ,EAAA,EAAD,iB,sDC3GD,SAASkQ,KACtB,OACE,mCACGC,KAAejQ,KAAI,SAAClD,EAAMmD,GACzB,OACE,eAACiQ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAkBC,WAAY,cAACC,GAAA,EAAD,IAA9B,SACGvT,EAAK+I,OAER,cAACyK,GAAA,EAAD,UACE,mBAAGC,wBAAyB,CAAEC,OAAQ1T,EAAKmS,mBAL/BhP,Q,cCLX,SAASwQ,KACtB,OACE,mCACGC,KAAe1Q,KAAI,SAAClD,EAAMmD,GACzB,OACE,eAACiQ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAkBC,WAAY,cAACC,GAAA,EAAD,IAA9B,SACGvT,EAAK+I,OAER,cAACyK,GAAA,EAAD,UACE,mBAAGC,wBAAyB,CAAEC,OAAQ1T,EAAKmS,mBAL/BhP,QCZ1B,IAEe0Q,GAFMnT,0BCaN,SAASoT,KAAW,IAAD,EACN3S,qBAAW0S,IAA7BxS,EADwB,EACxBA,KAAMC,EADkB,EAClBA,QADkB,EAEIH,qBAAW6G,IAAvCjI,EAFwB,EAExBA,UAAW2I,EAFa,EAEbA,aAFa,EAGRtH,mBAAS,IAHD,mBAGzB2S,EAHyB,KAGnBC,EAHmB,KAI1BrL,EAAM5I,EAAUsI,SAEhB3G,EAAe,WACnBsS,EAAQ,IACR1S,GAAQ,IASJ2S,EAAU,WACd,IAAMC,EAAU7K,KAAc8K,MAAMtK,MAAK,SAACC,GAAD,OAAOA,EAAEf,OAASgL,KAC3D,GAAIG,EAAS,CACX,IAAME,EAAQ,uBAAOrU,EAAUoU,OAAjB,CAAwBD,IACtCxL,GAAa,SAAC3I,GAAD,oBAAC,gBAAoBA,GAArB,IAAgCoU,MAAOC,SAOxD,OACE,eAAC7Q,EAAA,EAAD,CACElC,KAAMA,EACNmC,QAAS9B,EACT+B,kBAAgB,oBAHlB,UAIE,cAACC,EAAA,EAAD,CAAaL,GAAG,oBAAhB,0BAA+D,IAC/D,eAACM,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,yCACA,cAAC4L,GAAA,EAAD,CACEC,UAAQ,EACRvL,SAAU,SAACC,EAAOE,GAAR,OAAkB2P,EAAQ3P,IACpCqL,QAASrG,KAAcV,GAAK0L,eAAenR,KACzC,SAACyM,GAAD,OAAYA,EAAO5G,QAErB6G,YAAa,SAACC,GAAD,OACX,cAAChM,EAAA,EAAD,6BACMgM,GADN,IAEE7L,MAAM,QACND,OAAO,SACPgD,QAAQ,oBAKhB,eAACzC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQxB,QAASrB,EAAc8C,MAAM,UAArC,oBAGA,cAACD,EAAA,EAAD,CAAQxB,QA7CK,WACjBkR,IACAD,EAAQ,IACR1S,GAAQ,IA0CyBkD,MAAM,UAAnC,4B,cC1DO,SAAS8P,KAA+B,IAAD,EAChBnT,qBAAW6G,IAAvCjI,EAD4C,EAC5CA,UAD4C,EACjC2I,aACnB,SAAS6L,EAAQR,EAAMS,GACrB,OAAOC,KAAY5K,MAAK,SAACC,GAAD,OAAOA,EAAEf,OAASgL,KAAMS,GAHE,MAK5BpT,oBAAS,GALmB,mBAK7CC,EAL6C,KAKvCC,EALuC,KAM9C6D,EAAMC,mBAAQ,iBAAO,CAAE/D,OAAMC,aAAY,CAACD,IAiBhD,OACE,qCACE,cAAC,GAAagE,SAAd,CAAuBhB,MAAOc,EAA9B,SACE,cAAC2O,GAAD,MAED/T,EAAUoU,MAAMjR,KAAI,SAAClD,EAAMmD,GAC1B,OACE,eAACiQ,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAkBC,WAAY,cAACC,GAAA,EAAD,IAA9B,UACGvT,EADH,KACWuU,EAAQvU,EAAM,SADzB,OAGA,cAACwT,GAAA,EAAD,UACE,mBACEC,wBAAyB,CACvBC,OAAQa,EAAQvU,EAAM,sBAPdmD,MAapB,cAACiQ,GAAA,EAAD,CAAW5M,UAAU,SAArB,SACE,cAAC6M,GAAA,EAAD,UACE,cAACvQ,EAAA,EAAD,CAAYtC,aAAW,MAAMuC,QA1Bb,WACtBzB,GAAQ,IAyBF,SACE,cAAC0B,EAAA,EAAD,aCnDZ,SAAS0R,GAASlE,GAAQ,IAChBmE,EAAqCnE,EAArCmE,SAAUtQ,EAA2BmM,EAA3BnM,MAAOlB,EAAoBqN,EAApBrN,MAAUyR,EADZ,aACsBpE,EADtB,8BAGvB,OACE,+CACEqE,KAAK,WACLC,OAAQzQ,IAAUlB,EAClBE,GAAE,0BAAqBF,GACvBM,kBAAA,qBAA+BN,IAC3ByR,GALN,aAMGvQ,IAAUlB,GAAS,cAAC8O,GAAA,EAAD,CAAK8C,EAAG,EAAR,SAAYJ,OAWtC,SAASK,GAAU7R,GACjB,MAAO,CACLE,GAAG,cAAD,OAAgBF,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIxC,IAAMvC,GAAYC,aAAW,SAACsG,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVd,gBAAiBY,EAAM8N,QAAQC,WAAWC,WAI/B,SAASC,KACtB,IAAMnU,EAAUL,KADuB,EAEbyU,IAAMjU,SAAS,GAFF,mBAEhCiD,EAFgC,KAEzBiR,EAFyB,KAQvC,OACE,sBAAK5S,UAAWzB,EAAQmG,KAAxB,UACE,cAACO,EAAA,EAAD,CAAQvB,SAAS,SAAjB,SACE,eAACmP,GAAA,EAAD,CAAMlR,MAAOA,EAAOH,SAPF,SAACC,EAAOqR,GAC9BF,EAASE,IAML,UACE,cAACC,GAAA,EAAD,cAAKzR,MAAM,YAAegR,GAAU,KACpC,cAACS,GAAA,EAAD,cAAKzR,MAAM,YAAegR,GAAU,KACpC,cAACS,GAAA,EAAD,cAAKzR,MAAM,SAAYgR,GAAU,UAGrC,cAACN,GAAD,CAAUrQ,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAAC+P,GAAD,MAEF,cAACwB,GAAD,CAAUrQ,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAACwQ,GAAD,MAEF,cAACe,GAAD,CAAUrQ,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAAC,GAAD,S,cCxDFvC,GAAYC,aAAW,SAACsG,GAAD,MAAY,CACvC+E,YAAa,CACXnI,OAAQoD,EAAMK,QAAQ,GACtBgB,MAAO,IACPhC,UAAW,UAEbwD,UAAW,CACTxB,MAAO,IACP,UAAW,CACThC,UAAW,eAKF,SAASkP,KAAc,IAAD,EACXtU,qBADW,mBAC5BuU,EAD4B,KACtBC,EADsB,OAELxU,qBAFK,mBAE5ByU,EAF4B,KAEnBC,EAFmB,OAGC1U,mBAAS,GAHV,mBAG5B2U,EAH4B,KAGhBC,EAHgB,KAI7B/U,EAAUL,KAEhB,SAASqV,EAAWC,GAElB,OADaC,KAAKC,MAAMD,KAAKE,SAAWH,GAAS,EAcnD,OACE,qCACE,eAAC3I,GAAA,EAAD,CACExG,QAAQ,WACRiC,KAAK,QACLtG,UAAWzB,EAAQiL,YAHrB,UAIE,cAACoK,GAAA,EAAD,mBACA,eAAC9I,GAAA,EAAD,CACEC,UAAW,EACX8I,aAAa,OACbvS,MAAM,OACNE,SAAU,SAACC,GACTyR,EAAQzR,EAAMC,OAAOC,QALzB,UAOE,cAACsJ,GAAA,EAAD,CAAU6I,SAAS,WAAWnS,MAAM,OAAOyQ,OAAO,WAClD,cAACnH,GAAA,EAAD,CAAUtJ,MAAM,IAAhB,gBACA,cAACsJ,GAAA,EAAD,CAAUtJ,MAAM,IAAhB,gBACA,cAACsJ,GAAA,EAAD,CAAUtJ,MAAM,KAAhB,uBAGJ,uBACA,eAACkJ,GAAA,EAAD,CACExG,QAAQ,WACRiC,KAAK,QACLtG,UAAWzB,EAAQiL,YAHrB,UAIE,cAACoK,GAAA,EAAD,qBACA,eAAC9I,GAAA,EAAD,CACEC,UAAW,EACX8I,aAAa,OACbvS,MAAM,SACNE,SAAU,SAACC,GACT2R,EAAW3R,EAAMC,OAAOC,QAL5B,UAOE,cAACsJ,GAAA,EAAD,CAAU6I,SAAS,WAAWnS,MAAM,OAAOyQ,OAAO,WAClD,cAACnH,GAAA,EAAD,CAAUtJ,MAAM,IAAhB,eACA,cAACsJ,GAAA,EAAD,CAAUtJ,MAAM,IAAhB,eACA,cAACsJ,GAAA,EAAD,CAAUtJ,MAAM,IAAhB,qBAGJ,cAACE,EAAA,EAAD,CAAQxB,QAAS,kBAjDrB,SAAkBmT,EAAOL,GACvBK,EAAQnL,SAASmL,EAAO,IACxBL,EAAU9K,SAAS8K,EAAS,IAE5B,IADA,IAAIY,EAAQ,EACHC,EAAI,EAAGA,EAAIb,EAASa,IAC3BD,GAAgBR,EAAWC,GAE7B,OAAOF,EAAcS,GA0CIE,CAAShB,EAAME,IAAtC,kBACA,cAAChS,EAAA,EAAD,CACEkD,QAAQ,WACRiC,KAAK,QACLhF,MAAM,SACNtB,UAAWzB,EAAQ+I,UACnB3F,MAAO0R,OClEf,SAASrB,GAASlE,GAAQ,IAChBmE,EAAqCnE,EAArCmE,SAAUtQ,EAA2BmM,EAA3BnM,MAAOlB,EAAoBqN,EAApBrN,MAAUyR,EADZ,aACsBpE,EADtB,8BAGvB,OACE,+CACEqE,KAAK,WACLC,OAAQzQ,IAAUlB,EAClBE,GAAE,0BAAqBF,GACvBM,kBAAA,qBAA+BN,IAC3ByR,GALN,aAMGvQ,IAAUlB,GAAS,cAAC8O,GAAA,EAAD,CAAK8C,EAAG,EAAR,SAAYJ,OAWtC,SAASK,GAAU7R,GACjB,MAAO,CACLE,GAAG,cAAD,OAAgBF,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIxC,IAAMvC,GAAYC,aAAW,SAACsG,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVd,gBAAiBY,EAAM8N,QAAQC,WAAWC,WAa/B,SAASyB,KACtB,IAAM3V,EAAUL,KADuB,EAEbQ,mBAAS,GAFI,mBAEhCiD,EAFgC,KAEzBiR,EAFyB,OAGLlU,mBAAS,IAHJ,mBAGhCrB,EAHgC,KAGrB2I,EAHqB,OAIDR,cAA9BC,EAJ+B,EAI/BA,YAAaC,EAJkB,EAIlBA,aACblH,EAAgBC,qBAAWR,GAA3BO,YAORyD,qBAAU,WACR,GAAIwD,GAAeC,EAcjB,OpCpCC,SAAyBtI,EAAUC,EAAW6E,GACnD,OAAOrF,EACJU,WAAW,aACXC,IAAIJ,GACJG,WAAW,cACXC,IAAIH,GACJmF,WAAWN,GoCiBUoC,CAClBmB,EACAC,EACA,CACEvD,KAAM,SAACgS,GACLnO,EAAamO,EAAiB7W,SAEhCkC,MAAO,SAACA,GACNC,MAAM,8DACNJ,QAAQG,MAAM,0BAA2BA,QAMhD,CAACiG,EAAaC,EAAcM,IAG/B,IAAMoO,EAAgBC,sBAxCP,SAACC,EAAUC,GAC1B,IAAIC,EACJ,OAAO,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAClBC,aAAaF,GACbA,EAAQG,YAAW,kBAAML,EAAQ,WAAR,EAAYG,KAAOF,IAqC5CK,EACE,SAACvX,GAAD,OACEiH,EAA8BmB,EAAaC,EAAcrI,GACtD+B,MAAK,WACJC,QAAQC,KAAK,mBAAoBjC,MAElCkC,OAAM,SAACC,GACNC,MAAM,8DACNJ,QAAQG,MAAM,yBAA0BA,QAE9C,KAEF,IAIFyC,qBAAU,WAEN5E,GACAqP,OAAOmI,KAAKxX,GAAWyX,QAAU,GACjCtW,EAAYW,QAAU9B,EAAU6B,QAEhCG,QAAQC,KAAK,kBAAmBjC,GAChC+W,EAAc/W,MAEf,CAACA,IAEJ,IAAMoF,EAAMC,mBAAQ,iBAAO,CAAErF,YAAW2I,kBAAiB,CAAC3I,IAE1D,OACE,eAAC,GAAesF,SAAhB,CAAyBhB,MAAOc,EAAhC,UACE,cAAC8C,GAAD,IACA,uBACA,sBAAKvF,UAAWzB,EAAQmG,KAAxB,UACE,cAACsE,GAAD,IACA,uBACA,cAACS,GAAD,IACA,uBACA,cAACxE,EAAA,EAAD,CAAQvB,SAAS,SAAjB,SACE,eAACmP,GAAA,EAAD,CAAMlR,MAAOA,EAAOH,SAjEJ,SAACC,EAAOqR,GAC9BF,EAASE,IAgEH,UACE,cAACC,GAAA,EAAD,cAAKzR,MAAM,SAAYgR,GAAU,KACjC,cAACS,GAAA,EAAD,cAAKzR,MAAM,SAAYgR,GAAU,KACjC,cAACS,GAAA,EAAD,cAAKzR,MAAM,YAAegR,GAAU,KACpC,cAACS,GAAA,EAAD,cAAKzR,MAAM,QAAWgR,GAAU,KAChC,cAACS,GAAA,EAAD,cAAKzR,MAAM,SAAYgR,GAAU,KACjC,cAACS,GAAA,EAAD,cAAKzR,MAAM,eAAkBgR,GAAU,UAG3C,cAAC,GAAD,CAAU3Q,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAACsF,GAAD,MAEF,cAAC,GAAD,CAAUpE,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAACqL,GAAD,MAEF,cAAC,GAAD,CAAUnK,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAACuP,GAAD,MAEF,cAAC,GAAD,CAAUrO,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAACkP,GAAD,MAEF,cAAC,GAAD,CAAUhO,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAACiS,GAAD,MAEF,cAAC,GAAD,CAAU/Q,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAACuS,GAAD,YCpKV,IAEe+B,GAFO/W,0BCGP,SAASgX,KAAkB,IAChCvP,EAAgBD,cAAhBC,YAER,OACE,gCACE,eAAC5H,EAAA,EAAD,CAAaC,aAAW,aAAxB,UACE,cAAC,IAAD,CAAM4C,GAAG,YAAT,kBACA,4BAAI+E,OAEN,4CAAeA,QCZrB,IAEewP,GAFcjX,0B,sEC6BvBE,GAAYC,aAAW,SAACsG,GAAD,MAAY,CACvCC,KAAM,CACJoB,MAAO,QAET0D,YAAa,CACXnI,OAAQoD,EAAMK,QAAQ,GACtBzG,SAAU,KAEZ6W,WAAY,CACVrQ,YAAaJ,EAAMK,QAAQ,IAE7BqQ,aAAc,CACZC,UAAW3Q,EAAMK,QAAQ,GACzBuQ,aAAc5Q,EAAMK,QAAQ,QAejB,SAASwQ,KACtB,IA+RqBC,EA/RfhX,EAAUL,KADwB,EAEdO,qBAAWwW,IAA7BtW,EAFgC,EAEhCA,KAAMC,EAF0B,EAE1BA,QAF0B,EAGNF,mBAAS,IAHH,mBAGjC8W,EAHiC,KAGtBC,EAHsB,OAIJ/W,mBAAS,IAJL,mBAIjCgX,EAJiC,KAIrBC,EAJqB,OAKNjX,mBAAS,IALH,mBAKjCkX,EALiC,KAKtBC,EALsB,OAMInX,mBAAS,IANb,mBAMjCoX,EANiC,KAMjBC,EANiB,OAOErX,mBAAS,IAPX,mBAOjCsX,EAPiC,KAOlBC,EAPkB,OAQJvX,mBAAS,IARL,mBAQjCwX,EARiC,KAQrBC,EARqB,KAShC3X,EAAgBC,qBAAWR,GAA3BO,YACAiH,EAAgBD,cAAhBC,YAVgC,EAWJ/G,mBAAS,GAXL,mBAWjC0X,EAXiC,KAWrBC,EAXqB,KAYlCC,EAtBC,CACL,2BACA,cACA,0BACA,cACA,qBACA,aAkBIC,EAAa,WACjBF,GAAc,SAACG,GAAD,OAAoBA,EAAiB,MAO/CC,EAAmB,SAAChV,GACxB,IAAIC,EAASD,EAAMC,OACnB,GAAIA,EAAO2M,QAAS,CAElB,IAAM9C,EAAQ,uBAAO2K,GAAP,CAAmBxU,EAAO2E,OACxC8P,EAAc5K,OACT,CAEL,IAAIA,EAAW2K,EAAWQ,QAAO,SAACtL,GAAD,OAAUA,IAAS1J,EAAO2E,QAC3D8P,EAAc5K,KAIZvM,EAAe,WACnByW,EAAa,IACbE,EAAc,IACdE,EAAa,IACbE,EAAkB,IAClBE,EAAiB,IACjBE,EAAc,IACdE,EAAc,GACdzX,GAAQ,IAGJ+X,EAAa,WACjBxZ,IACA6B,KAqCI7B,EAAgB,WACpB,GACEsI,GACA+P,GACAE,GACAI,GACAF,GACAI,EACA,CACA,IAAMY,EAAgBC,OAAOlQ,KAAc+O,GAAYoB,gBACjDC,EAAgBpQ,KAAc+O,GAAY/D,eAC1CqF,EAAerQ,KAAc+O,GAAYuB,cAAczW,KAC3D,SAAC0I,GAAD,OACEwD,OAAOC,OACL,GACAF,KAAMtF,MAAK,SAACC,GAAD,OAAOA,EAAEf,OAAS6C,KAC7B,CAAE0D,UAAU,OAKlBtI,EAA8BmB,EAAa+P,EAAW,CACpDrN,UAAW,CACT,CAAEG,SAAU,MAAOC,MAAO,IAAKuB,WAAY,eAC3C,CAAExB,SAAU,MAAOC,MAAO,IAAKuB,WAAY,eAC3C,CAAExB,SAAU,MAAOC,MAAO,IAAKuB,WAAY,eAC3C,CAAExB,SAAU,MAAOC,MAAO,IAAKuB,WAAY,eAC3C,CAAExB,SAAU,MAAOC,MAAO,IAAKuB,WAAY,eAC3C,CAAExB,SAAU,MAAOC,MAAO,IAAKuB,WAAY,gBAE7C3D,UAAW2P,EACXhO,OAAQ,IACRpB,UAAW,GACX8E,MAAO0K,EACP/F,eAAgB,GAChBxK,SAAU+P,EACVjP,UAAW,GACXuB,MAAO4O,EACPpO,GAAI,GACJiE,MAAOuK,EACPpR,MAAO,IACPkB,KAAM,GACN2K,MAAOsF,EACP7X,MAAOV,EAAYW,MACnB6H,KAAM4O,EACN3O,UAAW+O,EACXjN,GAAI,MAEH3J,MAAK,WACJC,QAAQC,KAAK,qBAAsBkW,MAEpCjW,OAAM,SAACC,GACNC,MAAM,iDACNJ,QAAQG,MAAM,2BAA4BA,WAG9CC,MAAM,gCAsLV,OACE,cAACoB,EAAA,EAAD,CAAQlC,KAAMA,EAAMmC,QAAS9B,EAA7B,SACE,cAACiC,EAAA,EAAD,UACE,sBAAKjB,UAAWzB,EAAQmG,KAAxB,UACE,cAACwS,GAAA,EAAD,CAASd,WAAYA,EAAYe,kBAAgB,EAAjD,SACGb,EAAM9V,KAAI,SAACc,GAAD,OACT,cAAC8V,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UAAY/V,KADHA,QAKf,gCACE,8BACE,cAAC+D,EAAA,EAAD,CAAYxF,UAAW,OAAQG,UAAWzB,EAAQ4W,aAAlD,SA/LZ,SAAwBI,GACtB,OAAQA,GACN,KAAK,EACH,OACE,qCACE,eAAC1K,GAAA,EAAD,CAAaxG,QAAQ,WAAWrE,UAAWzB,EAAQiL,YAAnD,UACE,cAACoK,GAAA,EAAD,oBACA,cAAC9I,GAAA,EAAD,CACExJ,MAAM,QACNK,MAAO+T,EACPrP,KAAK,QACL7E,SAAU,SAACC,GACTsU,EAAkB,IAClBJ,EAAclU,EAAMC,OAAOC,QAN/B,SAQG2V,KAAW9W,KAAI,SAAClD,EAAMmD,GACrB,OACE,cAACwK,GAAA,EAAD,CAAUtJ,MAAOrE,EAAjB,SACGA,GADyBmD,QAMlC,mBAAGsQ,wBAAyB,CAAEC,OA1GpC0E,EACK/O,KAAc+O,GAAYjG,YAE1B,SAyGD,uBACA,eAAC5E,GAAA,EAAD,CAAaxG,QAAQ,WAAWrE,UAAWzB,EAAQiL,YAAnD,UACE,cAACoK,GAAA,EAAD,wBACA,cAAC9I,GAAA,EAAD,CACExJ,MAAM,YACNK,MAAOmU,EACPzP,KAAK,YACL7E,SAAU,SAACC,GAAD,OAAWsU,EAAkBtU,EAAMC,OAAOC,QAJtD,SAKG+T,GACC/O,KAAc+O,GAAYxO,WAAW1G,KAAI,SAAClD,EAAMmD,GAC9C,OACE,cAACwK,GAAA,EAAD,CAAUtJ,MAAOrE,EAAK6I,UAAtB,SACG7I,EAAK6I,WAD8B1F,QAM9C,mBAAGsQ,wBAAyB,CAAEC,OAvIpC0E,GAAcI,EACTnP,KAAc+O,GAAYxO,WAAWC,MAC1C,SAACC,GAAD,OAAOA,EAAEjB,YAAc2P,KACvBzO,UAEK,YAsIP,KAAK,EACH,OACE,qCACE,cAAClG,EAAA,EAAD,CACEC,WAAW,EACXC,OAAO,QACPV,GAAG,OACHW,MAAM,uBACNC,WAAS,EACTC,SAAU,SAACC,GAAD,OAAWgU,EAAahU,EAAMC,OAAOC,UAEjD,kDACA,mBAAGoP,wBAAyB,CAAEC,OArIlC0E,EACK/O,KAAc+O,GAAY6B,gBAE1B,SAqIP,KAAK,EACH,OACE,qCACE,eAAC1M,GAAA,EAAD,CAAaxG,QAAQ,WAAWrE,UAAWzB,EAAQiL,YAAnD,UACE,cAACoK,GAAA,EAAD,mBACA,cAAC9I,GAAA,EAAD,CACExJ,MAAM,OACNK,MAAOiU,EACPvP,KAAK,OACL7E,SAAU,SAACC,GAAD,OAAWoU,EAAapU,EAAMC,OAAOC,QAJjD,SAKG6V,KAAMhX,KAAI,SAAClD,EAAMmD,GAChB,OACE,cAACwK,GAAA,EAAD,CAAUtJ,MAAOrE,EAAjB,SACGA,GADyBmD,WAOpC,uBACA,cAACoK,GAAA,EAAD,CAAahL,UAAU,WAAWG,UAAWzB,EAAQiL,YAArD,SACE,cAACiC,GAAA,EAAD,CACE3N,aAAW,YACXuI,KAAK,YACL1E,MAAOqU,EACPxU,SAAU,SAACC,GAAD,OAAWwU,EAAiBxU,EAAMC,OAAOC,QAJrD,SAKG+T,GACC/O,KAAc+O,GAAY+B,WAAWjX,KAAI,SAAClD,EAAMmD,GAC9C,OACE,cAACiL,GAAA,EAAD,CAEE/J,MAAOrE,EAAK+T,KACZ1F,QAAS,cAACC,GAAA,EAAD,IACTtK,MAAOhE,EAAK+T,KAAO,KAAO/T,EAAK0J,KAAO,KAHjCvG,aAWvB,KAAK,EACH,OAAO,mBAAGsQ,wBAAyB,CAAEC,OA1KrC0E,EACK/O,KAAc+O,GAAYgC,aAE1B,MAwKP,KAAK,EACH,MAAO,sBACT,KAAK,EACH,OACE,qBAAK1X,UAAWzB,EAAQmG,KAAxB,SACE,eAACmG,GAAA,EAAD,CAAahL,UAAU,WAAWG,UAAWzB,EAAQiL,YAArD,UACE,cAACmO,GAAA,EAAD,CAAW9X,UAAU,SAArB,gFAIA,cAAC+X,GAAA,EAAD,UACGlC,GACC/O,KAAc+O,GAAY7J,gBAAgBrL,KACxC,SAAClD,EAAMmD,GACL,OACE,cAACiL,GAAA,EAAD,CAEEC,QACE,cAACyC,GAAA,EAAD,CAEE5M,SAAUiV,EACV3U,MAAM,UACNuE,KAAM/I,GAHDmD,GAMTa,MAAOhE,GATFmD,aAkBzB,QACE,MAAO,qBAqDEoX,CAAezB,OAGpB,cAACvU,EAAA,EAAD,CACEiS,SAAyB,IAAfsC,EACV/V,QApUO,WACjBgW,GAAc,SAACG,GAAD,OAAoBA,EAAiB,MAoUzCxW,UAAWzB,EAAQ2W,WAHrB,mBApDWK,EA0DEa,EAzDjBb,IAAce,EAAMxB,OAAS,EAE7BrP,GACA+P,GACAE,GACAI,GACAF,GACAI,EAGE,cAACnU,EAAA,EAAD,CAAQwC,QAAQ,YAAYvC,MAAM,UAAUzB,QAASsW,EAArD,8BAMA,cAAC9U,EAAA,EAAD,CACEiS,UAAQ,EACRzP,QAAQ,YACRvC,MAAM,UACNzB,QAASsW,EAJX,8BAWF,cAAC9U,EAAA,EAAD,CAAQwC,QAAQ,YAAYvC,MAAM,UAAUzB,QAASkW,EAArD,6BCrWR,IAAMrY,GAAYC,YAAW,CAC3BuG,KAAM,CACJrG,SAAU,OAIC,SAASiX,KACtB,IAAM/W,EAAUL,KACRd,EAAaqB,qBAAWsW,IAAxB3X,SACAqI,EAAgBD,cAAhBC,YAHgC,EAIhB/G,oBAAS,GAJO,mBAIjCC,EAJiC,KAI3BC,EAJ2B,KAKlC6D,EAAMC,mBAAQ,iBAAO,CAAE/D,OAAMC,aAAY,CAACD,IAO1CmZ,EAAkB,SAAC1a,EAAUC,GAC7BD,GAAYC,EzCsCb,SAAyBD,EAAUC,GACxC,OAAOR,EACJU,WAAW,aACXC,IAAIJ,GACJG,WAAW,cACXC,IAAIH,GACJsC,SyC1CC2E,CAAgClH,EAAUC,GACvC+B,MAAK,WACJC,QAAQC,KAAK,qBAAsBjC,MAEpCkC,OAAM,SAACC,GACNC,MAAM,iDACNJ,QAAQG,MAAM,2BAA4BA,MAG9CC,MAAM,kCAIV,OACE,eAAC,GAAqBkD,SAAtB,CAA+BhB,MAAOc,EAAtC,UACE,cAACwG,GAAA,EAAD,CAAMjJ,UAAWzB,EAAQmG,KAAMI,QAAS,EAAxC,SACE,cAACmE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,eAACF,GAAA,EAAD,CAAMG,WAAS,EAACC,QAAQ,SAASvE,QAAS,EAA1C,UACG1H,EAASA,UACRA,EAASA,SAASoD,KAAI,SAACpD,EAAUqD,GAC/B,OACE,cAACwI,GAAA,EAAD,CAAMC,MAAI,EAAV,SACE,eAACoB,GAAA,EAAD,CAAMtK,UAAWzB,EAAQmG,KAAzB,UACE,cAAC6F,GAAA,EAAD,CACEwN,OACE,cAAC3X,EAAA,EAAD,CACEtC,aAAW,SACXuC,QAAS,kBACPyX,EAAgBrS,EAAarI,EAASC,YAH1C,SAKE,cAACuD,EAAA,EAAD,MAGJmE,MACE,cAAC,IAAD,CACErE,GACE,aACA+E,EACA,IACArI,EAASC,UALb,SAOGD,EAASC,YAGd2a,UAAW5a,EAAS6a,cAAc/Y,QAEpC,eAACsL,GAAA,EAAD,WACE,cAACnF,EAAA,EAAD,CAAYhB,QAAQ,QAAQxE,UAAU,IAAtC,SACGzC,EAAS6a,cAActS,WAE1B,cAACN,EAAA,EAAD,CAAYhB,QAAQ,QAAQxE,UAAU,IAAtC,SACGzC,EAAS6a,cAAcjR,OAE1B,cAAC3B,EAAA,EAAD,CAAYhB,QAAQ,QAAQxE,UAAU,IAAtC,SACGzC,EAAS6a,cAAc9R,YAE1B,uBACA,eAACd,EAAA,EAAD,CAAYhB,QAAQ,QAAQxE,UAAU,IAAtC,iBACOzC,EAAS6a,cAAczP,MAE9B,eAACnD,EAAA,EAAD,CAAYhB,QAAQ,QAAQxE,UAAU,IAAtC,iBACOzC,EAAS6a,cAAclP,MAE9B,eAAC1D,EAAA,EAAD,CAAYhB,QAAQ,QAAQxE,UAAU,IAAtC,oBACUzC,EAAS6a,cAAcjQ,gBA3CvBvH,MAkDtB,cAACwI,GAAA,EAAD,CAAMC,MAAI,EAAV,SACE,eAACoB,GAAA,EAAD,CAAMtK,UAAWzB,EAAQmG,KAAzB,UACE,cAAC6F,GAAA,EAAD,CAAYzG,UAAU,SAASiB,MAAM,kBACrC,cAACyF,GAAA,EAAD,CAAa1G,UAAU,SAAvB,SACE,cAAC1D,EAAA,EAAD,CAAYtC,aAAW,MAAMuC,QAnFrB,WACtBzB,GAAQ,IAkFM,SACE,cAAC0B,EAAA,EAAD,oBAQd,cAAC,GAAD,OCpHS,SAAS4X,KAAiB,IAAD,EACNxZ,mBAAS,IADH,mBAC/BtB,EAD+B,KACrB+a,EADqB,KAE9B1S,EAAgBD,cAAhBC,YAIRxD,qBAAU,WACR,GAAIwD,EAgBF,O1CqBC,SAA0BrI,EAAU8E,GACzC,OAAOrF,EACJU,WAAW,aACXC,IAAIJ,GACJG,WAAW,cACXiF,WAAWN,G0CzCUoC,CAAiCmB,EAAa,CAChEtD,KAAM,SAACC,GACL,IAAMgW,EAAuBhW,EAAcE,KAAK9B,KAAI,SAAC+B,GACnD,MAAO,CACLlF,UAAWkF,EAAY5B,GACvBsX,cAAe1V,EAAYjF,WAG/B6a,GAAY,SAAC/a,GAAD,MAAe,CAAEA,SAAUgb,OAEzC5Y,MAAO,SAACA,GACNC,MAAM,6DACNJ,QAAQG,MAAM,0BAA2BA,QAK9C,CAACiG,EAAa0S,IAEjBlW,qBAAU,WACR5C,QAAQC,KAAK,kBAAmBlC,KAC/B,CAACA,IAEJ,IAAMqF,EAAMC,mBAAQ,iBAAO,CAAEtF,WAAU+a,iBAAgB,CAAC/a,IAExD,OACE,eAAC,GAAcuF,SAAf,CAAwBhB,MAAOc,EAA/B,UACE,cAACuS,GAAD,IACA,uBACA,cAAC,GAAD,O,OClCS,SAASqD,KACtB,OACE,cAAChT,EAAA,EAAD,CAAYxF,UAAW,OAAvB,SACE,cAACyY,EAAA,EAAD,UACE,eAAC,IAAD,WACE,cAACtT,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEuT,OAAO,EACPC,KAAK,uCACL3Y,UAAWqU,KAEb,cAAC,IAAD,CACEqE,OAAO,EACPC,KAAK,yBACL3Y,UAAW4Y,KAEb,cAAC,IAAD,CAAOF,OAAO,EAAMC,KAAK,YAAY3Y,UAAWkC,IAChD,cAAC,IAAD,CAAOlC,UAAW7D,cCrB9B,SAAS0c,KAAS,IAAD,EACuBha,mBAAS,MADhC,mBACRF,EADQ,KACKma,EADL,KAGTlW,EAAMC,mBAAQ,iBAAO,CAAElE,iBAAgB,CAACA,IAS9C,OAPAyD,qBAAU,WAIR,OAHoBqC,EAAqBsU,oBAAmB,SAACC,GAC3DF,EAAeE,QAGhB,IAGD,cAAC,EAAUlW,SAAX,CAAoBhB,MAAOc,EAA3B,SACGjE,EACC,cAAC6Z,GAAD,IAEA,cAACxW,EAAA,EAAD,CACEwC,QAAQ,YACRvC,MAAM,UACNzB,QAASiE,EAHX,mCAWR,IAAMwU,GAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACR,GAAD,IAAWI,K","file":"static/js/main.b67ec0e3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function ErrorPage() {\r\n  return <h1>Oops! Page not found!</h1>;\r\n}\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialise Firebase and setting up firestore and auth for use later\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\n\r\n// Authenticate with Firebase-auth using the Google provider object\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({\r\n  prompt: 'select_account',\r\n});\r\nexport function SignInWithGoogle() {\r\n  auth.signInWithPopup(provider);\r\n}\r\n\r\n// Firestore operations\r\n\r\n// Create new campaign\r\nexport function createCampaign(campaign, owner) {\r\n  return db.collection('campaigns').doc(campaign).set({ owner: owner });\r\n}\r\n\r\n// Save/Create Character\r\nexport function saveCharacter(campaign, character, data) {\r\n  return db\r\n    .collection('campaigns')\r\n    .doc(campaign)\r\n    .collection('characters')\r\n    .doc(character)\r\n    .set(data);\r\n}\r\n\r\n// Stream Campaign Data (all Campaigns)\r\nexport function streamCampaigns(observer) {\r\n  return db.collection('campaigns').onSnapshot(observer);\r\n}\r\n\r\n// Stream Character Data (all Characters)\r\nexport function streamCharacters(campaign, observer) {\r\n  return db\r\n    .collection('campaigns')\r\n    .doc(campaign)\r\n    .collection('characters')\r\n    .onSnapshot(observer);\r\n}\r\n\r\n// Stream Character Data (selected Characters)\r\nexport function streamCharacter(campaign, character, observer) {\r\n  return db\r\n    .collection('campaigns')\r\n    .doc(campaign)\r\n    .collection('characters')\r\n    .doc(character)\r\n    .onSnapshot(observer);\r\n}\r\n\r\n// Delete Campaign\r\nexport function deleteCampaign(campaign) {\r\n  return db.collection('campaigns').doc(campaign).delete();\r\n}\r\n\r\n// Delete Characters\r\nexport function deleteCharacter(campaign, character) {\r\n  return db\r\n    .collection('campaigns')\r\n    .doc(campaign)\r\n    .collection('characters')\r\n    .doc(character)\r\n    .delete();\r\n}\r\n\r\n// Default Export\r\nexport default firebase;\r\n","import React from 'react';\r\nimport { Breadcrumbs } from '@material-ui/core';\r\n\r\nexport default function HomepageHeader() {\r\n  return (\r\n    <div>\r\n      <Breadcrumbs aria-label='breadcrumb'>\r\n        <p>Home</p>\r\n      </Breadcrumbs>\r\n      <h1>Campaigns Homepage</h1>\r\n    </div>\r\n  );\r\n}\r\n","import { createContext } from 'react';\r\n\r\nconst HomepageState = createContext();\r\n\r\nexport default HomepageState;\r\n","import { createContext } from 'react';\r\n\r\nconst AuthState = createContext();\r\n\r\nexport default AuthState;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as FirebaseService from 'services/firebase';\r\nimport HomepageState from 'components/contexts/HomepageState';\r\nimport AuthState from 'components/contexts/AuthState';\r\nimport { Add, Delete } from '@material-ui/icons';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function HomepageDetails() {\r\n  const classes = useStyles();\r\n  const { currentUser } = useContext(AuthState);\r\n  const [open, setOpen] = useState(false);\r\n  const [campaignName, setCampaignName] = useState('');\r\n  const { campaigns } = useContext(HomepageState);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setOpen(false);\r\n    saveCampaign();\r\n  };\r\n\r\n  // Create New Campaign\r\n  const saveCampaign = () => {\r\n    if (campaignName) {\r\n      //don't save unless details present\r\n      FirebaseService.createCampaign(campaignName, currentUser.email)\r\n        .then(() => {\r\n          console.info('Created Campaign:', campaignName);\r\n        })\r\n        .catch((error) => {\r\n          alert('Failed to create campaign, see console error');\r\n          console.error('Error creating document:', error);\r\n        });\r\n    } else {\r\n      alert('Cannot save blank campaign');\r\n    }\r\n  };\r\n\r\n  // Delete Campaign\r\n  const deleteCampaign = (campaignName) => {\r\n    if (campaignName) {\r\n      //don't save unless details present\r\n      FirebaseService.deleteCampaign(campaignName)\r\n        .then(() => {\r\n          console.info('Deleted Campaign:', campaignName);\r\n        })\r\n        .catch((error) => {\r\n          alert('Failed to delete campaign, see console error');\r\n          console.error('Error deleting document:', error);\r\n        });\r\n    } else {\r\n      alert('Cannot delete blank campaign');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label='simple table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Campaign</TableCell>\r\n              <TableCell>Owner</TableCell>\r\n              <TableCell>\r\n                <IconButton aria-label='add' onClick={handleClickOpen}>\r\n                  <Add />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {campaigns.campaigns &&\r\n              campaigns.campaigns.map((campaign, index) => {\r\n                return (\r\n                  <TableRow key={index}>\r\n                    <TableCell>\r\n                      <Link to={'/dw-react/' + campaign.id}>{campaign.id}</Link>\r\n                    </TableCell>\r\n                    <TableCell>{campaign.owner}</TableCell>\r\n                    <TableCell>\r\n                      <IconButton\r\n                        aria-label='delete'\r\n                        onClick={() => deleteCampaign(campaign.id)}>\r\n                        <Delete />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCancel}\r\n        aria-labelledby='form-dialog-title'>\r\n        <DialogTitle id='form-dialog-title'>Create new campaign</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To create a campaign, please enter the new campaign name here. You\r\n            will not be able to change this once saved.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus={true}\r\n            margin='dense'\r\n            id='name'\r\n            label='Campaign Name'\r\n            fullWidth\r\n            onChange={(event) => setCampaignName(event.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color='primary'>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave} color='primary'>\r\n            Create Campaign\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport * as FirebaseService from 'services/firebase';\r\nimport HomepageHeader from 'components/homepage/HomepageHeader';\r\nimport HomepageDetails from 'components/homepage/HomepageDetails';\r\nimport HomepageState from 'components/contexts/HomepageState';\r\n\r\nexport default function Homepage() {\r\n  const [campaigns, setCampaigns] = useState({});\r\n\r\n  // Use an effect hook to subscribe to the campaign stream and\r\n  // automatically unsubscribe when the component unmounts.\r\n  useEffect(() => {\r\n    const unsubscribe = FirebaseService.streamCampaigns({\r\n      next: (querySnapshot) => {\r\n        const updatedCampaignList = querySnapshot.docs.map((docSnapshot) => {\r\n          return { id: docSnapshot.id, owner: docSnapshot.data().owner };\r\n        });\r\n        setCampaigns((campaign) => ({ campaigns: updatedCampaignList }));\r\n      },\r\n      error: (error) => {\r\n        alert('Failed to load data correctly, see console error');\r\n        console.error('Error loading data:', error);\r\n      },\r\n    });\r\n    return unsubscribe;\r\n  }, [setCampaigns]);\r\n\r\n  useEffect(() => {\r\n    console.info('Campaigns State:', campaigns);\r\n  }, [campaigns]); //Only log to console if state actually changes\r\n\r\n  const ctx = useMemo(() => ({ campaigns }), [campaigns]); //Memo-ised state for performance\r\n\r\n  return (\r\n    <HomepageState.Provider value={ctx}>\r\n      <HomepageHeader />\r\n      <br />\r\n      <HomepageDetails />\r\n    </HomepageState.Provider>\r\n  );\r\n}\r\n","import { createContext } from 'react';\r\n\r\nconst ProfileState = createContext();\r\n\r\nexport default ProfileState;\r\n","import React, { useContext } from \"react\";\r\nimport AuthState from \"components/contexts/AuthState\";\r\nimport ProfileState from \"components/contexts/ProfileState\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nexport default function ProfilePicture() {\r\n  const { currentUser } = useContext(AuthState);\r\n  const { show, setShow } = useContext(ProfileState);\r\n  const toggleSetShow = () => setShow(!show);\r\n\r\n  return (\r\n    <Avatar\r\n      src={currentUser.photoURL}\r\n      alt=\"Google Profile\"\r\n      onClick={() => toggleSetShow()}\r\n    />\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport AuthState from 'components/contexts/AuthState';\r\nimport * as FirebaseService from 'services/firebase';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport default function ProfileDetails() {\r\n  const { currentUser } = useContext(AuthState);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '0',\r\n        WebkitBorderRadius: '50%',\r\n        borderRadius: '5px',\r\n        display: 'inline-block',\r\n        margin: '0',\r\n        position: 'absolute',\r\n        top: '50px',\r\n        right: '20px',\r\n        color: '#bdc1c6',\r\n        backgroundColor: 'rgba(60, 64, 67, 0.9)',\r\n        textAlign: 'left',\r\n        font: \"500 12px 'Roboto', arial, sans-serif\",\r\n        letterSpacing: '0.8px',\r\n        lineHeight: '16px',\r\n        fontWeight: 'bold',\r\n        padding: '8px 8px',\r\n      }}>\r\n      <div\r\n        style={{\r\n          color: 'white',\r\n        }}>\r\n        Google Account\r\n      </div>\r\n      <div>{currentUser.displayName}</div>\r\n      <div>{currentUser.email}</div>\r\n      <Button\r\n        variant='contained'\r\n        color='primary'\r\n        onClick={() => FirebaseService.auth.signOut()}>\r\n        LOG OUT\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useMemo } from 'react';\r\nimport ProfilePicture from 'components/profile/ProfilePicture';\r\nimport ProfileDetails from 'components/profile/ProfileDetails';\r\nimport ProfileState from 'components/contexts/ProfileState';\r\n\r\nexport default function UserProfile() {\r\n  const [show, setShow] = useState(false);\r\n  const ctx = useMemo(() => ({ show, setShow }), [show]); //Memo-ised state for performance\r\n\r\n  return (\r\n    <ProfileState.Provider value={ctx}>\r\n      <ProfilePicture /> {show ? <ProfileDetails /> : null}\r\n    </ProfileState.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Menu } from '@material-ui/icons';\r\nimport UserProfile from 'components/profile/UserProfile';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function AppHeader() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge='start'\r\n            className={classes.menuButton}\r\n            color='inherit'\r\n            aria-label='menu'>\r\n            <Menu />\r\n          </IconButton>\r\n          <Typography component={'span'} variant='h6' className={classes.title}>\r\n            Dungeon World Character Sheet (v0.10.0 by Godmar02)\r\n          </Typography>\r\n          <UserProfile />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import { createContext } from 'react';\r\n\r\nconst CharacterState = createContext();\r\n\r\nexport default CharacterState;\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router';\r\nimport { Breadcrumbs } from '@material-ui/core';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport { class_details } from 'data/classDetails';\r\n\r\nexport default function CharacterSheetHeader() {\r\n  const { campaignURL, characterURL } = useParams();\r\n  const { character } = useContext(CharacterState);\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumbs aria-label='breadcrumb'>\r\n        <Link to='/dw-react'>Home</Link>\r\n        <Link to={'/dw-react/' + campaignURL}>{campaignURL}</Link>\r\n        <p>{characterURL}</p>\r\n      </Breadcrumbs>\r\n      <h1>{characterURL}</h1>\r\n      <p>\r\n        {character.dw_class} - Level {character.level}\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport { class_details } from 'data/classDetails';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  smallTextField: {\r\n    width: 120,\r\n  },\r\n});\r\n\r\nexport default function CharacterBasicDetails() {\r\n  const { character, setCharacter } = useContext(CharacterState);\r\n  const classes = useStyles();\r\n\r\n  const dwc = character.dw_class;\r\n  const alig = character.alignment;\r\n  const alignmentAttribute = () => {\r\n    if (character.dw_class && character.alignment) {\r\n      return class_details[dwc].alignments.find((x) => x.alignment === alig)\r\n        .attribute;\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const handleCharacterChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    setCharacter((character) => ({ ...character, [name]: value }));\r\n  };\r\n\r\n  const suggestedLook = () => {\r\n    if (character.dw_class) {\r\n      let dwc = character.dw_class;\r\n      return class_details[dwc].suggested_look;\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} size='small' aria-label='simple table'>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>FULL NAME</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  multiline\r\n                  fullWidth\r\n                  variant='outlined'\r\n                  aria-label='empty textarea'\r\n                  placeholder='Add your characters full name here'\r\n                  value={character.full_name}\r\n                  name='full_name'\r\n                  onChange={handleCharacterChange}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>BACKSTORY</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  multiline\r\n                  fullWidth\r\n                  variant='outlined'\r\n                  aria-label='empty textarea'\r\n                  placeholder=\"Describe your character's backstory and anything else about your characters identity here\"\r\n                  value={character.backstory}\r\n                  name='backstory'\r\n                  onChange={handleCharacterChange}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>LOOK</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  multiline\r\n                  fullWidth\r\n                  variant='outlined'\r\n                  aria-label='empty textarea'\r\n                  placeholder={suggestedLook()}\r\n                  name='look'\r\n                  value={character.look}\r\n                  onChange={handleCharacterChange}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <br />\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} size='small' aria-label='simple table'>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>CLASS</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  multiline\r\n                  fullWidth\r\n                  readOnly\r\n                  className={classes.smallTextField}\r\n                  variant='outlined'\r\n                  name='dwClass'\r\n                  value={character.dw_class}\r\n                />\r\n              </TableCell>\r\n              <TableCell></TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>RACE</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  multiline\r\n                  fullWidth\r\n                  readOnly\r\n                  className={classes.smallTextField}\r\n                  variant='outlined'\r\n                  name='race'\r\n                  value={character.race}\r\n                />\r\n              </TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  multiline\r\n                  fullWidth\r\n                  readOnly\r\n                  variant='outlined'\r\n                  name='race_move'\r\n                  value={character.race_move}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>ALIGNMENT</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  multiline\r\n                  fullWidth\r\n                  readOnly\r\n                  className={classes.smallTextField}\r\n                  variant='outlined'\r\n                  name='alignment'\r\n                  value={character.alignment}\r\n                />\r\n              </TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  multiline\r\n                  fullWidth\r\n                  readOnly\r\n                  variant='outlined'\r\n                  name='alignment_move'\r\n                  value={alignmentAttribute()}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport { class_details } from 'data/classDetails';\r\nimport { TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    width: 80,\r\n    '& input': {\r\n      textAlign: 'center',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CharacterDamage() {\r\n  const { character } = useContext(CharacterState);\r\n  const dwc = character.dw_class;\r\n  const classes = useStyles();\r\n\r\n  const damage = () => {\r\n    if (character.dw_class) {\r\n      return class_details[dwc].damage;\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      variant='outlined'\r\n      size='small'\r\n      className={classes.textField}\r\n      name='damage'\r\n      label='Damage'\r\n      InputProps={{\r\n        readOnly: true,\r\n      }}\r\n      value={damage()}\r\n    />\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport { TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    width: 80,\r\n  },\r\n}));\r\n\r\nexport default function CharacterArmour() {\r\n  const { character, setCharacter } = useContext(CharacterState);\r\n  const classes = useStyles();\r\n\r\n  const handleCharacterChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    setCharacter((character) => ({ ...character, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      type='number'\r\n      variant='outlined'\r\n      size='small'\r\n      label='Armour'\r\n      inputProps={{\r\n        style: { textAlign: 'center' },\r\n        min: 0,\r\n      }}\r\n      name='armour'\r\n      className={classes.textField}\r\n      value={character.armour || ''}\r\n      onChange={handleCharacterChange}\r\n    />\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport { TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    width: 80,\r\n  },\r\n}));\r\n\r\nexport default function CharacterFunds() {\r\n  const { character, setCharacter } = useContext(CharacterState);\r\n  const classes = useStyles();\r\n\r\n  const handleCharacterChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    setCharacter((character) => ({ ...character, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      type='number'\r\n      variant='outlined'\r\n      size='small'\r\n      className={classes.textField}\r\n      name='funds'\r\n      label='Funds'\r\n      inputProps={{\r\n        style: { textAlign: 'center' },\r\n        min: 0,\r\n      }}\r\n      value={character.funds || ''}\r\n      onChange={handleCharacterChange}\r\n    />\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport { class_details } from 'data/classDetails';\r\nimport { InputAdornment, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    width: 100,\r\n  },\r\n}));\r\n\r\nexport default function CharacterHP() {\r\n  const { character, setCharacter } = useContext(CharacterState);\r\n  const dwc = character.dw_class;\r\n  const classes = useStyles();\r\n\r\n  const maxHp = () => {\r\n    if (character.dw_class && character.abilities) {\r\n      return (\r\n        class_details[dwc].base_hp +\r\n        parseInt(\r\n          character.abilities.find((x) => x.category === 'CON').score,\r\n          10\r\n        )\r\n      );\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  // Validate XP\r\n  const validateHp = () => {\r\n    if (parseInt(character.hp, 10) > maxHp()) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleCharacterChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    setCharacter((character) => ({ ...character, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        type='number'\r\n        variant='outlined'\r\n        label='HP'\r\n        error={validateHp()}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position='end'>{' / ' + maxHp()}</InputAdornment>\r\n          ),\r\n          className: classes.input,\r\n        }}\r\n        size='small'\r\n        className={classes.textField}\r\n        inputProps={{\r\n          style: { textAlign: 'center' },\r\n          min: 0,\r\n        }}\r\n        name='hp'\r\n        value={character.hp || ''}\r\n        onChange={handleCharacterChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport { TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    width: 80,\r\n  },\r\n}));\r\n\r\nexport default function CharacterLevel() {\r\n  const { character, setCharacter } = useContext(CharacterState);\r\n  const classes = useStyles();\r\n\r\n  const handleCharacterChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    setCharacter((character) => ({ ...character, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      type='number'\r\n      variant='outlined'\r\n      size='small'\r\n      label='Level'\r\n      className={classes.textField}\r\n      inputProps={{\r\n        style: { textAlign: 'center' },\r\n        min: 1,\r\n      }}\r\n      name='level'\r\n      value={character.level || ''}\r\n      onChange={handleCharacterChange}\r\n    />\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport { InputAdornment, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    width: 100,\r\n  },\r\n}));\r\n\r\nexport default function CharacterXP() {\r\n  const { character, setCharacter } = useContext(CharacterState);\r\n  const classes = useStyles();\r\n\r\n  // Total Load\r\n  const maxXp = () => {\r\n    if (character.level) {\r\n      return parseInt(character.level, 10) + 7;\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  // Validate XP\r\n  const validateXp = () => {\r\n    if (parseInt(character.xp, 10) > maxXp()) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleCharacterChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    setCharacter((character) => ({ ...character, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        type='number'\r\n        variant='outlined'\r\n        label='XP'\r\n        error={validateXp()}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position='end'>{' / ' + maxXp()}</InputAdornment>\r\n          ),\r\n          className: classes.input,\r\n        }}\r\n        size='small'\r\n        className={classes.textField}\r\n        inputProps={{\r\n          style: { textAlign: 'center' },\r\n          min: 0,\r\n        }}\r\n        name='xp'\r\n        value={character.xp || ''}\r\n        onChange={handleCharacterChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CharacterDamage from 'components/character/CharacterDamage';\r\nimport CharacterArmour from 'components/character/CharacterArmour';\r\nimport CharacterFunds from 'components/character/CharacterFunds';\r\nimport CharacterHP from 'components/character/CharacterHP';\r\nimport CharacterLevel from 'components/character/CharacterLevel';\r\nimport CharacterXP from 'components/character/CharacterXP';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n}));\r\n\r\nexport default function CharacterBasicStats() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid className={classes.root} spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Grid container justify='center' spacing={1}>\r\n          <Grid item>\r\n            <CharacterLevel />\r\n          </Grid>\r\n          <Grid item>\r\n            <CharacterXP />\r\n          </Grid>\r\n          <Grid item>\r\n            <CharacterDamage />\r\n          </Grid>\r\n          <Grid item>\r\n            <CharacterArmour />\r\n          </Grid>\r\n          <Grid item>\r\n            <CharacterFunds />\r\n          </Grid>\r\n          <Grid item>\r\n            <CharacterHP />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport { ability_afflictions } from 'data/abilityAfflictions';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  FormControl,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    width: 160,\r\n    padding: 0,\r\n  },\r\n  cardHeader: {\r\n    textAlign: 'center',\r\n  },\r\n  formControl: {\r\n    margin: 0,\r\n    width: 126,\r\n    textAlign: 'center',\r\n  },\r\n  textField: {\r\n    width: 126,\r\n  },\r\n}));\r\n\r\nexport default function CharacterAbilities() {\r\n  const classes = useStyles();\r\n  const { character, setCharacter } = useContext(CharacterState);\r\n\r\n  const updateAbilityScore = (index) => (e) => {\r\n    let newAbilities = [...character.abilities]; // copying the old array\r\n    newAbilities[index] = {\r\n      ...character.abilities[index],\r\n      score: e.target.value,\r\n    }; // replace value\r\n    setCharacter((character) => ({\r\n      ...character,\r\n      abilities: newAbilities,\r\n    })); // set array back\r\n  };\r\n\r\n  const updateAbilityAffliction = (index) => (e) => {\r\n    let newAbilities = [...character.abilities]; // copying the old array\r\n    newAbilities[index] = {\r\n      ...character.abilities[index],\r\n      affliction: e.target.value,\r\n    }; // replace value\r\n    setCharacter((character) => ({\r\n      ...character,\r\n      abilities: newAbilities,\r\n    })); // set array back\r\n  };\r\n\r\n  const abilityModifier = (abilityScore, abilityAffliction) => {\r\n    if (abilityScore && abilityAffliction) {\r\n      let baseModifier;\r\n      let afflicted;\r\n\r\n      abilityScore = parseInt(abilityScore, 10);\r\n\r\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\r\n        baseModifier = -3;\r\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\r\n        baseModifier = -2;\r\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\r\n        baseModifier = -1;\r\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\r\n        baseModifier = 0;\r\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\r\n        baseModifier = 1;\r\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\r\n        baseModifier = 2;\r\n      } else if (abilityScore === 18) {\r\n        baseModifier = 3;\r\n      }\r\n\r\n      /* -1 if afflicted */\r\n      if (abilityAffliction === 'Unafflicted') {\r\n        afflicted = 0;\r\n      } else {\r\n        afflicted = 1;\r\n      }\r\n\r\n      let modifier = baseModifier - afflicted;\r\n\r\n      if (modifier > 0) {\r\n        return '[+' + modifier + ']';\r\n      } else {\r\n        return '[' + modifier + ']';\r\n      }\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  // Validate Score\r\n  const validateScore = () => {\r\n    const totalScore = character.abilities.reduce(\r\n      (totalScore, data) => totalScore + parseInt(data.score || 0, 10),\r\n      0\r\n    );\r\n    if (totalScore !== 73) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid className={classes.root} spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Grid container justify='center' spacing={1}>\r\n          {character.abilities &&\r\n            character.abilities.map((abilities, index) => {\r\n              const ab = abilities.category;\r\n              return (\r\n                <Grid item key={index}>\r\n                  <Card className={classes.card}>\r\n                    <CardHeader\r\n                      title={abilities.category}\r\n                      className={classes.cardHeader}\r\n                    />\r\n                    <CardContent>\r\n                      <TextField\r\n                        type='number'\r\n                        variant='outlined'\r\n                        error={validateScore()}\r\n                        size='small'\r\n                        margin='none'\r\n                        name={abilities.category + 'Score'}\r\n                        value={abilities.score}\r\n                        className={classes.textField}\r\n                        inputProps={{\r\n                          style: { textAlign: 'center' },\r\n                          min: 1,\r\n                          max: 18,\r\n                        }}\r\n                        onChange={updateAbilityScore(index)}\r\n                      />\r\n                      <TextField\r\n                        variant='outlined'\r\n                        name={abilities.category + 'Modifier'}\r\n                        value={abilityModifier(\r\n                          abilities.score,\r\n                          abilities.affliction\r\n                        )}\r\n                        InputProps={{ readOnly: true }}\r\n                        inputProps={{\r\n                          style: {\r\n                            textAlign: 'center',\r\n                            fontWeight: 'bold',\r\n                            fontSize: 25,\r\n                          },\r\n                        }}\r\n                        className={classes.textField}\r\n                      />\r\n                      <FormControl\r\n                        variant='outlined'\r\n                        size='small'\r\n                        className={classes.formControl}>\r\n                        <Select\r\n                          tabIndex={-1}\r\n                          value={abilities.affliction || 'null'}\r\n                          name={abilities.category + 'Affliction'}\r\n                          onChange={updateAbilityAffliction(index)}>\r\n                          {ability_afflictions[ab].map((data, index) => {\r\n                            return (\r\n                              <MenuItem value={data} key={index}>\r\n                                {data}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              );\r\n            })}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { createContext } from 'react';\r\n\r\nconst AddBondState = createContext();\r\n\r\nexport default AddBondState;\r\n","import React, { useContext, useState } from 'react';\r\nimport AddBondState from 'components/contexts/AddBondState';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport { class_details } from 'data/classDetails';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  Radio,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function AddBond() {\r\n  const classes = useStyles();\r\n  const { open, setOpen } = useContext(AddBondState);\r\n  const { character, setCharacter } = useContext(CharacterState);\r\n  const [bond, setBond] = useState('');\r\n  const dwc = character.dw_class;\r\n\r\n  const handleCancel = () => {\r\n    setBond('');\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    addBond();\r\n    setBond('');\r\n    setOpen(false);\r\n  };\r\n\r\n  const addBond = () => {\r\n    const newBonds = [...character.bonds, bond]; // copying the old array and adding new bond depending upon selection\r\n    setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleCancel}\r\n      aria-labelledby='form-dialog-title'>\r\n      <DialogTitle id='form-dialog-title'>Add new bond</DialogTitle>{' '}\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Choose a suggested bond to add. If you wish to create your own choose\r\n          'CUSTOM'.\r\n        </DialogContentText>\r\n        <FormControl component='fieldset' className={classes.formControl}>\r\n          <RadioGroup\r\n            aria-label='bond'\r\n            name='bond'\r\n            value={bond}\r\n            onChange={(event) => setBond(event.target.value)}>\r\n            <FormControlLabel value='' control={<Radio />} label='CUSTOM' />\r\n            {character.dw_class &&\r\n              class_details[dwc].suggested_bonds.map((data, index) => {\r\n                return (\r\n                  <FormControlLabel\r\n                    key={index}\r\n                    value={data}\r\n                    control={<Radio />}\r\n                    label={data}\r\n                  />\r\n                );\r\n              })}\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCancel} color='primary'>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleSave} color='primary'>\r\n          Add Bond\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useContext, useMemo, useState } from 'react';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport AddBondState from 'components/contexts/AddBondState';\r\nimport AddBond from 'components/character/AddBond';\r\nimport {\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Add, Delete } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nexport default function CharacterBonds() {\r\n  const classes = useStyles();\r\n  const { character, setCharacter } = useContext(CharacterState);\r\n  const [open, setOpen] = useState(false);\r\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\r\n\r\n  const updateBond = (index) => (e) => {\r\n    let newBonds = [...character.bonds]; // copying the old array\r\n    newBonds[index] = e.target.value; // replace value\r\n    setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\r\n  };\r\n\r\n  const deleteBond = (index) => {\r\n    const newBonds = [...character.bonds]; // copying the old array\r\n    //don't delete last row\r\n    newBonds.splice(index, 1); // remove item from array\r\n    setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AddBondState.Provider value={ctx}>\r\n        <AddBond />\r\n      </AddBondState.Provider>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label='simple table'>\r\n          <TableBody>\r\n            {character.bonds &&\r\n              character.bonds.map((bond, index) => {\r\n                return (\r\n                  <TableRow key={index}>\r\n                    <TableCell>\r\n                      <TextField\r\n                        multiline\r\n                        fullWidth\r\n                        variant='outlined'\r\n                        aria-label='empty textarea'\r\n                        placeholder='Add bond detail here'\r\n                        value={bond}\r\n                        name={'bond' + index}\r\n                        onChange={updateBond(index)}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <IconButton\r\n                        aria-label='delete'\r\n                        onClick={() => deleteBond(index)}>\r\n                        <Delete />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            <TableRow>\r\n              <TableCell align='center' colSpan='2'>\r\n                <IconButton aria-label='add' onClick={handleClickOpen}>\r\n                  <Add />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import { createContext } from 'react';\r\n\r\nconst AddItemState = createContext();\r\n\r\nexport default AddItemState;\r\n","import React, { useContext, useState } from 'react';\r\nimport AddItemState from 'components/contexts/AddItemState';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { items } from 'data/items';\r\n\r\nexport default function AddItem() {\r\n  const { open, setOpen } = useContext(AddItemState);\r\n  const { character, setCharacter } = useContext(CharacterState);\r\n  const [item, setItem] = useState('');\r\n\r\n  const handleCancel = () => {\r\n    setItem('');\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    addItem();\r\n    setItem('');\r\n    setOpen(false);\r\n  };\r\n\r\n  const addItem = () => {\r\n    let newItem = items.find((x) => x.name === item);\r\n    if (newItem) {\r\n      newItem = Object.assign({}, newItem, { checkbox: false }); //Adding blank checkbox\r\n      const newItems = [...character.items, newItem]; // copying the old array and adding new item depending upon selection\r\n      setCharacter((character) => ({ ...character, items: newItems })); // set array back\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleCancel}\r\n      aria-labelledby='form-dialog-title'>\r\n      <DialogTitle id='form-dialog-title'>Add new item</DialogTitle>{' '}\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Search for an item to add. If you wish to create your own choose\r\n          'CUSTOM'.\r\n        </DialogContentText>\r\n        <Autocomplete\r\n          freeSolo\r\n          onChange={(event, value) => setItem(value)}\r\n          options={items.map((option) => option.name)}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label='Items'\r\n              margin='normal'\r\n              variant='outlined'\r\n            />\r\n          )}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCancel} color='primary'>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleSave} color='primary'>\r\n          Add Item\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useContext, useMemo, useState } from 'react';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport AddItemState from 'components/contexts/AddItemState';\r\nimport AddItem from 'components/character/AddItem';\r\nimport { class_details } from 'data/classDetails';\r\nimport { itemTypes } from 'data/itemTypes';\r\nimport { itemTags } from 'data/itemTags';\r\nimport {\r\n  Box,\r\n  Chip,\r\n  Checkbox,\r\n  Collapse,\r\n  FormControl,\r\n  IconButton,\r\n  Input,\r\n  Paper,\r\n  Select,\r\n  MenuItem,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Add,\r\n  Delete,\r\n  KeyboardArrowDown,\r\n  KeyboardArrowUp,\r\n} from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 250,\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  textField: {\r\n    width: 120,\r\n  },\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction Row(props) {\r\n  const { item } = props;\r\n  const { index } = props;\r\n  const classes = useStyles();\r\n  const [openRow, setOpenRow] = useState(false);\r\n  const { character, setCharacter } = useContext(CharacterState);\r\n\r\n  const updateItem = (event, index) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let newItems = [...character.items]; // copying the old array\r\n    newItems[index] = { ...character.items[index], [name]: value }; // replace value\r\n    setCharacter((character) => ({ ...character, items: newItems })); // set array back\r\n  };\r\n\r\n  const updateItemCheckbox = (index) => (e) => {\r\n    let newItems = [...character.items]; // copying the old array\r\n    newItems[index] = {\r\n      ...character.items[index],\r\n      checkbox: e.target.checked,\r\n    }; // replace value\r\n    setCharacter((character) => ({\r\n      ...character,\r\n      items: newItems,\r\n    })); // set array back\r\n  };\r\n\r\n  const deleteItem = (index) => {\r\n    const newItems = [...character.items]; // copying the old array\r\n    newItems.splice(index, 1); // remove item from array\r\n    setCharacter((character) => ({ ...character, items: newItems })); // set array back\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label='expand row'\r\n            size='small'\r\n            onClick={() => setOpenRow(!openRow)}>\r\n            {openRow ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Checkbox\r\n            name={'item_checkbox' + index}\r\n            checked={!!item.checkbox}\r\n            onChange={updateItemCheckbox(index)}\r\n            color='primary'\r\n          />\r\n        </TableCell>\r\n        <TableCell>\r\n          <TextField\r\n            fullWidth\r\n            size='small'\r\n            variant='outlined'\r\n            aria-label='empty textarea'\r\n            value={item.name}\r\n            name='name'\r\n            onChange={(event) => updateItem(event, index)}\r\n          />\r\n        </TableCell>\r\n        <TableCell align='center'>\r\n          <TextField\r\n            type='number'\r\n            fullWidth\r\n            size='small'\r\n            variant='outlined'\r\n            className={classes.textField}\r\n            inputProps={{\r\n              style: { textAlign: 'center' },\r\n              min: 0,\r\n            }}\r\n            name='uses'\r\n            value={item.uses}\r\n            onChange={(event) => updateItem(event, index)}\r\n          />\r\n        </TableCell>\r\n        <TableCell>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              multiple\r\n              value={item.tags}\r\n              name='tags'\r\n              onChange={(event) => updateItem(event, index)}\r\n              input={<Input />}\r\n              renderValue={(selected) => (\r\n                <div className={classes.chips}>\r\n                  {selected.map((value, index) => (\r\n                    <Chip key={index} label={value} className={classes.chip} />\r\n                  ))}\r\n                </div>\r\n              )}\r\n              MenuProps={MenuProps}>\r\n              {itemTags.map((name, index) => (\r\n                <MenuItem key={index} value={name}>\r\n                  {name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </TableCell>\r\n        <TableCell>\r\n          <TextField\r\n            type='number'\r\n            fullWidth\r\n            size='small'\r\n            variant='outlined'\r\n            className={classes.textField}\r\n            inputProps={{\r\n              style: { textAlign: 'center' },\r\n              min: 0,\r\n            }}\r\n            value={item.weight}\r\n            name='weight'\r\n            onChange={(event) => updateItem(event, index)}\r\n          />\r\n        </TableCell>\r\n        <TableCell>\r\n          <IconButton aria-label='delete' onClick={() => deleteItem(index)}>\r\n            <Delete />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={openRow} timeout='auto' unmountOnExit>\r\n            <Box margin={1}>\r\n              <Table size='small' aria-label='purchases'>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell align='center'>TYPE</TableCell>\r\n                    <TableCell>DESCRIPTION</TableCell>\r\n                    <TableCell align='center'>COST</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <TableCell align='center'>\r\n                    <FormControl\r\n                      variant='outlined'\r\n                      size='small'\r\n                      className={classes.formControl}>\r\n                      <Select\r\n                        tabIndex={-1}\r\n                        value={item.type}\r\n                        name='type'\r\n                        onChange={(event) => updateItem(event, index)}>\r\n                        {itemTypes.map((type, index) => (\r\n                          <MenuItem key={index} value={type}>\r\n                            {type}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <TextField\r\n                      multiline\r\n                      fullWidth\r\n                      size='small'\r\n                      variant='outlined'\r\n                      aria-label='empty textarea'\r\n                      value={item.description}\r\n                      name='description'\r\n                      onChange={(event) => updateItem(event, index)}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align='center'>\r\n                    <TextField\r\n                      type='number'\r\n                      fullWidth\r\n                      size='small'\r\n                      variant='outlined'\r\n                      className={classes.textField}\r\n                      inputProps={{\r\n                        style: { textAlign: 'center' },\r\n                        min: 0,\r\n                      }}\r\n                      name='cost'\r\n                      value={item.cost}\r\n                      onChange={(event) => updateItem(event, index)}\r\n                    />\r\n                  </TableCell>\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function CharacterGear() {\r\n  const classes = useStyles();\r\n  const { character } = useContext(CharacterState);\r\n  const dwc = character.dw_class;\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\r\n\r\n  const totalLoad = () => {\r\n    if (character.items) {\r\n      return character.items.reduce(\r\n        (totalLoad, data) => totalLoad + parseInt(data.weight || 0, 10),\r\n        0\r\n      );\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const maxLoad = () => {\r\n    if (\r\n      character.dw_class &&\r\n      character.abilities.find((x) => x.category === 'STR').score &&\r\n      character.abilities.find((x) => x.category === 'STR').affliction\r\n    ) {\r\n      let str = character.abilities.find((x) => x.category === 'STR');\r\n      let baseModifier;\r\n      let abilityAffliction = str.affliction;\r\n      let abilityScore = parseInt(str.score, 10);\r\n      let afflicted;\r\n\r\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\r\n        baseModifier = -3;\r\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\r\n        baseModifier = -2;\r\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\r\n        baseModifier = -1;\r\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\r\n        baseModifier = 0;\r\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\r\n        baseModifier = 1;\r\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\r\n        baseModifier = 2;\r\n      } else if (abilityScore === 18) {\r\n        baseModifier = 3;\r\n      }\r\n\r\n      /*-1 if afflicted*/\r\n      if (abilityAffliction === 'Unafflicted') {\r\n        afflicted = 0;\r\n      } else {\r\n        afflicted = 1;\r\n      }\r\n\r\n      let modifier = baseModifier - afflicted;\r\n\r\n      return class_details[dwc].base_load + modifier;\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const validateLoad = () => {\r\n    if (totalLoad() > maxLoad()) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AddItemState.Provider value={ctx}>\r\n        <AddItem />\r\n      </AddItemState.Provider>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label='simple table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell></TableCell>\r\n              <TableCell align='center'>EQUIPPED</TableCell>\r\n              <TableCell align='center'>NAME</TableCell>\r\n              <TableCell align='center'>USES</TableCell>\r\n              <TableCell align='center'>TAGS</TableCell>\r\n              <TableCell align='center'>WEIGHT</TableCell>\r\n              <TableCell>\r\n                <IconButton aria-label='add' onClick={handleClickOpen}>\r\n                  <Add />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {character.items &&\r\n              character.items.map((item, index) => (\r\n                <Row key={index} index={index} item={item} />\r\n              ))}\r\n            <TableRow>\r\n              <TableCell align='right' colSpan='5'>\r\n                LOAD\r\n              </TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  error={validateLoad()}\r\n                  size='small'\r\n                  variant='outlined'\r\n                  name='totalLoad'\r\n                  className={classes.textField}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  inputProps={{\r\n                    style: { textAlign: 'center' },\r\n                  }}\r\n                  value={totalLoad() + ' / ' + maxLoad()}\r\n                />\r\n              </TableCell>\r\n              <TableCell></TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport { Add, Delete } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport {\r\n  Checkbox,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nexport default function CharacterClassFeatures() {\r\n  const classes = useStyles();\r\n  const { character, setCharacter } = useContext(CharacterState);\r\n\r\n  // State manipulation\r\n  const updateFeatureCheckbox = (index) => (e) => {\r\n    let newFeatures = [...character.class_features]; // copying the old array\r\n    newFeatures[index] = {\r\n      ...character.class_features[index],\r\n      checkbox: e.target.checked,\r\n    }; // replace value\r\n    setCharacter((character) => ({\r\n      ...character,\r\n      class_features: newFeatures,\r\n    })); // set array back\r\n  };\r\n\r\n  const updateFeature = (index) => (e) => {\r\n    let newFeatures = [...character.class_features]; // copying the old array\r\n    newFeatures[index] = {\r\n      ...character.class_features[index],\r\n      feature: e.target.value,\r\n    }; // replace value\r\n    setCharacter((character) => ({\r\n      ...character,\r\n      class_features: newFeatures,\r\n    })); // set array back\r\n  };\r\n\r\n  // Delete rows in the table\r\n  const deleteFeatureRow = (index) => {\r\n    const newFeatures = [...character.class_features]; // copying the old array\r\n    newFeatures.splice(index, 1); // remove item from array\r\n    setCharacter((character) => ({\r\n      ...character,\r\n      class_features: newFeatures,\r\n    })); // set array back\r\n  };\r\n\r\n  // Add rows in the table\r\n  const addFeatureRow = () => {\r\n    const newFeatures = [\r\n      ...character.class_features,\r\n      { feature: '', checkbox: false },\r\n    ]; // copying the old array and adding blank item\r\n    setCharacter((character) => ({\r\n      ...character,\r\n      class_features: newFeatures,\r\n    })); // set array back\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label='simple table'>\r\n        <TableBody>\r\n          {character.class_features &&\r\n            character.class_features.map((class_features, index) => {\r\n              return (\r\n                <TableRow key={index}>\r\n                  <TableCell>\r\n                    <Checkbox\r\n                      name={'class_feature_checkbox' + index}\r\n                      checked={!!class_features.checkbox}\r\n                      onChange={updateFeatureCheckbox(index)}\r\n                      color='primary'\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <TextField\r\n                      multiline\r\n                      fullWidth\r\n                      variant='outlined'\r\n                      aria-label='empty textarea'\r\n                      placeholder='Add class features detail here (e.g. Spell Lists, Poison Recipes, Druid Balance, Paladin Quests etc)'\r\n                      value={class_features.feature}\r\n                      name={'class_feature' + index}\r\n                      onChange={updateFeature(index)}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <IconButton\r\n                      aria-label='delete'\r\n                      onClick={() => deleteFeatureRow(index)}>\r\n                      <Delete />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          <TableRow>\r\n            <TableCell colSpan='3' align='center'>\r\n              <IconButton aria-label='add' onClick={() => addFeatureRow()}>\r\n                <Add />\r\n              </IconButton>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { standard_moves } from 'data/standardMoves';\r\n\r\nexport default function CharacterStandardMoves() {\r\n  return (\r\n    <>\r\n      {standard_moves.map((data, index) => {\r\n        return (\r\n          <Accordion key={index}>\r\n            <AccordionSummary expandIcon={<ExpandMore />}>\r\n              {data.name}\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <p dangerouslySetInnerHTML={{ __html: data.description }}></p>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { advanced_moves } from 'data/advancedMoves';\r\n\r\nexport default function CharacterAdvancedMoves() {\r\n  return (\r\n    <>\r\n      {advanced_moves.map((data, index) => {\r\n        return (\r\n          <Accordion key={index}>\r\n            <AccordionSummary expandIcon={<ExpandMore />}>\r\n              {data.name}\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <p dangerouslySetInnerHTML={{ __html: data.description }}></p>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n","import { createContext } from 'react';\r\n\r\nconst AddMoveState = createContext();\r\n\r\nexport default AddMoveState;\r\n","import React, { useContext, useState } from 'react';\r\nimport AddMoveState from 'components/contexts/AddMoveState';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { class_details } from 'data/classDetails';\r\n\r\nexport default function AddMove() {\r\n  const { open, setOpen } = useContext(AddMoveState);\r\n  const { character, setCharacter } = useContext(CharacterState);\r\n  const [move, setMove] = useState('');\r\n  const dwc = character.dw_class;\r\n\r\n  const handleCancel = () => {\r\n    setMove('');\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    addMove();\r\n    setMove('');\r\n    setOpen(false);\r\n  };\r\n\r\n  const addMove = () => {\r\n    const newMove = class_details.moves.find((x) => x.name === move);\r\n    if (newMove) {\r\n      const newMoves = [...character.moves, newMove]; // copying the old array and adding new move depending upon selection\r\n      setCharacter((character) => ({ ...character, moves: newMoves })); // set array back\r\n    }\r\n  };\r\n\r\n  //TODO, MAKE THIS A RADIO SELECTION WITH DETAILS FOR DIFFERENT LEVELS\r\n  //REPLACE EXISTING OPTION ON SELECTION\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleCancel}\r\n      aria-labelledby='form-dialog-title'>\r\n      <DialogTitle id='form-dialog-title'>Add new move</DialogTitle>{' '}\r\n      <DialogContent>\r\n        <DialogContentText>Search for an move to add.</DialogContentText>\r\n        <Autocomplete\r\n          freeSolo\r\n          onChange={(event, value) => setMove(value)}\r\n          options={class_details[dwc].starting_moves.map(\r\n            (option) => option.name\r\n          )}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label='Moves'\r\n              margin='normal'\r\n              variant='outlined'\r\n            />\r\n          )}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCancel} color='primary'>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleSave} color='primary'>\r\n          Add Move\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useContext, useMemo, useState } from 'react';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport AddMoveState from 'components/contexts/AddMoveState';\r\nimport AddMove from 'components/character/AddMove';\r\nimport { class_moves } from 'data/classMoves';\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport { Add, Delete, ExpandMore } from '@material-ui/icons';\r\n\r\nexport default function CharacterClassStartingMoves() {\r\n  const { character, setCharacter } = useContext(CharacterState);\r\n  function getMove(move, field) {\r\n    return class_moves.find((x) => x.name === move)[field];\r\n  }\r\n  const [open, setOpen] = useState(false);\r\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\r\n\r\n  const deleteMove = (index) => {\r\n    const newMoves = [...character.moves]; // copying the old array\r\n    if (character.moves.length !== 1) {\r\n      //TODO don't delete if starting move\r\n      newMoves.splice(index, 1); // remove item from array\r\n      setCharacter((character) => ({ ...character, moves: newMoves })); // set array back\r\n    } else {\r\n      alert('Cannot delete starting move');\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AddMoveState.Provider value={ctx}>\r\n        <AddMove />\r\n      </AddMoveState.Provider>\r\n      {character.moves.map((data, index) => {\r\n        return (\r\n          <Accordion key={index}>\r\n            <AccordionSummary expandIcon={<ExpandMore />}>\r\n              {data} ({getMove(data, 'level')})\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <p\r\n                dangerouslySetInnerHTML={{\r\n                  __html: getMove(data, 'description'),\r\n                }}></p>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        );\r\n      })}\r\n      <Accordion textAlign='center'>\r\n        <AccordionSummary>\r\n          <IconButton aria-label='add' onClick={handleClickOpen}>\r\n            <Add />\r\n          </IconButton>\r\n        </AccordionSummary>\r\n      </Accordion>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Box, Tab, Tabs } from '@material-ui/core';\r\nimport CharacterStandardMoves from 'components/character/CharacterStandardMoves';\r\nimport CharacterAdvancedMoves from 'components/character/CharacterAdvancedMoves';\r\nimport CharacterClassMoves from 'components/character/CharacterClassMoves';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role='tabpanel'\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}>\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function CharacterMoves() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <Tabs value={value} onChange={handleTabChange}>\r\n          <Tab label='Standard' {...a11yProps(0)} />\r\n          <Tab label='Advanced' {...a11yProps(1)} />\r\n          <Tab label='Class' {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <CharacterStandardMoves />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <CharacterAdvancedMoves />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <CharacterClassMoves />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: 126,\r\n    textAlign: 'center',\r\n  },\r\n  textField: {\r\n    width: 126,\r\n    '& input': {\r\n      textAlign: 'center',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function DiceRoller() {\r\n  const [dice, setDice] = useState();\r\n  const [diceNum, setDiceNum] = useState();\r\n  const [rollResult, setRollResult] = useState(0);\r\n  const classes = useStyles();\r\n\r\n  function singleRoll(sides) {\r\n    const roll = Math.floor(Math.random() * sides) + 1;\r\n    return roll;\r\n  }\r\n\r\n  function rollDice(sides, diceNum) {\r\n    sides = parseInt(sides, 10);\r\n    diceNum = parseInt(diceNum, 10);\r\n    let total = 0;\r\n    for (let i = 0; i < diceNum; i++) {\r\n      total = total + singleRoll(sides);\r\n    }\r\n    return setRollResult(total);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FormControl\r\n        variant='outlined'\r\n        size='small'\r\n        className={classes.formControl}>\r\n        <InputLabel>Dice</InputLabel>\r\n        <Select\r\n          tabIndex={-1}\r\n          defaultValue='null'\r\n          label='dice'\r\n          onChange={(event) => {\r\n            setDice(event.target.value);\r\n          }}>\r\n          <MenuItem disabled='disabled' value='null' hidden='hidden' />\r\n          <MenuItem value='6'>d6</MenuItem>\r\n          <MenuItem value='8'>d8</MenuItem>\r\n          <MenuItem value='10'>d10</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <br />\r\n      <FormControl\r\n        variant='outlined'\r\n        size='small'\r\n        className={classes.formControl}>\r\n        <InputLabel>Number</InputLabel>\r\n        <Select\r\n          tabIndex={-1}\r\n          defaultValue='null'\r\n          label='Number'\r\n          onChange={(event) => {\r\n            setDiceNum(event.target.value);\r\n          }}>\r\n          <MenuItem disabled='disabled' value='null' hidden='hidden' />\r\n          <MenuItem value='1'>1</MenuItem>\r\n          <MenuItem value='2'>2</MenuItem>\r\n          <MenuItem value='3'>3</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <Button onClick={() => rollDice(dice, diceNum)}>Roll</Button>\r\n      <TextField\r\n        variant='outlined'\r\n        size='small'\r\n        label='Result'\r\n        className={classes.textField}\r\n        value={rollResult}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useContext,\r\n  useMemo,\r\n} from 'react';\r\nimport { useParams } from 'react-router';\r\nimport * as FirebaseService from 'services/firebase';\r\nimport PropTypes from 'prop-types';\r\nimport CharacterState from 'components/contexts/CharacterState';\r\nimport AuthState from 'components/contexts/AuthState';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Box, Tab, Tabs } from '@material-ui/core';\r\nimport CharacterSheetHeader from 'components/character/CharacterSheetHeader';\r\nimport CharacterBasicDetails from 'components/character/CharacterBasicDetails';\r\nimport CharacterBasicStats from 'components/character/CharacterBasicStats';\r\nimport CharacterAbilities from 'components/character/CharacterAbilities';\r\nimport CharacterBonds from 'components/character/CharacterBonds';\r\nimport CharacterGear from 'components/character/CharacterGear';\r\nimport CharacterClassFeatures from 'components/character/CharacterClassFeatures';\r\nimport CharacterMoves from 'components/character/CharacterMoves';\r\nimport DiceRoller from 'components/other/DiceRoller';\r\n\r\n// Tab functions\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role='tabpanel'\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}>\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\n// Debounce function\r\nconst debounce = (callback, delay) => {\r\n  let timer;\r\n  return (...args) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => callback(...args), delay);\r\n  };\r\n};\r\n\r\nexport default function CharacterSheet() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n  const [character, setCharacter] = useState({});\r\n  const { campaignURL, characterURL } = useParams();\r\n  const { currentUser } = useContext(AuthState);\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  // Subscribe to Character Data\r\n  useEffect(() => {\r\n    if (campaignURL && characterURL) {\r\n      const unsubscribe = FirebaseService.streamCharacter(\r\n        campaignURL,\r\n        characterURL,\r\n        {\r\n          next: (documentSnapshot) => {\r\n            setCharacter(documentSnapshot.data());\r\n          },\r\n          error: (error) => {\r\n            alert('Failed to load character data correctly, see console error');\r\n            console.error('Error loading document:', error);\r\n          },\r\n        }\r\n      );\r\n      return unsubscribe;\r\n    }\r\n  }, [campaignURL, characterURL, setCharacter]);\r\n\r\n  // Debounced Save\r\n  const debouncedSave = useCallback(\r\n    debounce(\r\n      (character) =>\r\n        FirebaseService.saveCharacter(campaignURL, characterURL, character)\r\n          .then(() => {\r\n            console.info('Saved Character:', character);\r\n          })\r\n          .catch((error) => {\r\n            alert('Failed to save character data correctly, see console error');\r\n            console.error('Error saving document:', error);\r\n          }),\r\n      5000\r\n    ),\r\n    []\r\n  );\r\n\r\n  // Save changes to character\r\n  useEffect(() => {\r\n    if (\r\n      character &&\r\n      Object.keys(character).length >= 1 &&\r\n      currentUser.email === character.owner\r\n    ) {\r\n      console.info('CharacterState:', character);\r\n      debouncedSave(character);\r\n    }\r\n  }, [character]); //Only trigger effect on change of character\r\n\r\n  const ctx = useMemo(() => ({ character, setCharacter }), [character]); //Memo-ised state for performance\r\n\r\n  return (\r\n    <CharacterState.Provider value={ctx}>\r\n      <CharacterSheetHeader />\r\n      <br />\r\n      <div className={classes.root}>\r\n        <CharacterBasicStats />\r\n        <br />\r\n        <CharacterAbilities />\r\n        <br />\r\n        <AppBar position='static'>\r\n          <Tabs value={value} onChange={handleTabChange}>\r\n            <Tab label='About' {...a11yProps(0)} />\r\n            <Tab label='Bonds' {...a11yProps(1)} />\r\n            <Tab label='Features' {...a11yProps(2)} />\r\n            <Tab label='Gear' {...a11yProps(3)} />\r\n            <Tab label='Moves' {...a11yProps(4)} />\r\n            <Tab label='Dice Roller' {...a11yProps(5)} />\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={value} index={0}>\r\n          <CharacterBasicDetails />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <CharacterBonds />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2}>\r\n          <CharacterClassFeatures />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3}>\r\n          <CharacterGear />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={4}>\r\n          <CharacterMoves />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={5}>\r\n          <DiceRoller />\r\n        </TabPanel>\r\n      </div>\r\n    </CharacterState.Provider>\r\n  );\r\n}\r\n","import { createContext } from 'react';\r\n\r\nconst CampaignState = createContext();\r\n\r\nexport default CampaignState;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router';\r\nimport { Breadcrumbs } from '@material-ui/core';\r\n\r\nexport default function CampaignHeader() {\r\n  const { campaignURL } = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumbs aria-label='breadcrumb'>\r\n        <Link to='/dw-react'>Home</Link>\r\n        <p>{campaignURL}</p>\r\n      </Breadcrumbs>\r\n      <h1>Campaign: {campaignURL}</h1>\r\n    </div>\r\n  );\r\n}\r\n","import { createContext } from 'react';\r\n\r\nconst CreateCharacterState = createContext();\r\n\r\nexport default CreateCharacterState;\r\n","import React, { useContext, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport * as FirebaseService from 'services/firebase';\r\nimport AuthState from 'components/contexts/AuthState';\r\nimport CreateCharacterState from 'components/contexts/CreateCharacterState';\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogContent,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormLabel,\r\n  InputLabel,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  Step,\r\n  Stepper,\r\n  StepLabel,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { class_details } from 'data/classDetails';\r\nimport { dw_classes } from 'data/dwClasses';\r\nimport { items } from 'data/items';\r\nimport { races } from 'data/races';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\r\n    'Choose Class & Alignment',\r\n    'Create Name',\r\n    'Select Race & Race Move',\r\n    'Select Gear',\r\n    'Select Class Moves',\r\n    'Add Bonds',\r\n  ];\r\n}\r\n\r\nexport default function CampaignDetails() {\r\n  const classes = useStyles();\r\n  const { open, setOpen } = useContext(CreateCharacterState);\r\n  const [charaName, setCharaName] = useState('');\r\n  const [charaClass, setCharaClass] = useState('');\r\n  const [charaRace, setCharaRace] = useState('');\r\n  const [charaAlignment, setCharaAlignment] = useState('');\r\n  const [charaRaceMove, setCharaRaceMove] = useState('');\r\n  const [charaBonds, setCharaBonds] = useState([]);\r\n  const { currentUser } = useContext(AuthState);\r\n  const { campaignURL } = useParams();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleBondChange = (event) => {\r\n    let target = event.target;\r\n    if (target.checked) {\r\n      //add to array\r\n      const newBonds = [...charaBonds, target.name]; // copying the old array and adding item\r\n      setCharaBonds(newBonds); // set array back\r\n    } else {\r\n      //remove from array\r\n      let newBonds = charaBonds.filter((bond) => bond !== target.name); // copying the old array\r\n      setCharaBonds(newBonds); // set array back\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setCharaName('');\r\n    setCharaClass('');\r\n    setCharaRace('');\r\n    setCharaAlignment('');\r\n    setCharaRaceMove('');\r\n    setCharaBonds([]);\r\n    setActiveStep(0);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    saveCharacter();\r\n    handleCancel();\r\n  };\r\n\r\n  const alignmentAttribute = () => {\r\n    if (charaClass && charaAlignment) {\r\n      return class_details[charaClass].alignments.find(\r\n        (x) => x.alignment === charaAlignment\r\n      ).attribute;\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const classDescription = () => {\r\n    if (charaClass) {\r\n      return class_details[charaClass].description;\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const suggestedNames = () => {\r\n    if (charaClass) {\r\n      return class_details[charaClass].suggested_names;\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const gearDetails = () => {\r\n    if (charaClass) {\r\n      return class_details[charaClass].gear_details;\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const saveCharacter = () => {\r\n    if (\r\n      campaignURL &&\r\n      charaName &&\r\n      charaClass &&\r\n      charaAlignment &&\r\n      charaRace &&\r\n      charaRaceMove\r\n    ) {\r\n      const startingFunds = String(class_details[charaClass].starting_funds);\r\n      const startingMoves = class_details[charaClass].starting_moves;\r\n      const startingGear = class_details[charaClass].starting_gear.map(\r\n        (item) =>\r\n          Object.assign(\r\n            {},\r\n            items.find((x) => x.name === item),\r\n            { checkbox: false }\r\n          ) // Finding Item and adding blank checkbox\r\n      );\r\n\r\n      // SAVE FUNCTION\r\n      FirebaseService.saveCharacter(campaignURL, charaName, {\r\n        abilities: [\r\n          { category: 'STR', score: '1', affliction: 'Unafflicted' },\r\n          { category: 'DEX', score: '1', affliction: 'Unafflicted' },\r\n          { category: 'CON', score: '1', affliction: 'Unafflicted' },\r\n          { category: 'INT', score: '1', affliction: 'Unafflicted' },\r\n          { category: 'WIS', score: '1', affliction: 'Unafflicted' },\r\n          { category: 'CHA', score: '1', affliction: 'Unafflicted' },\r\n        ],\r\n        alignment: charaAlignment,\r\n        armour: '0',\r\n        backstory: '',\r\n        bonds: charaBonds,\r\n        class_features: [],\r\n        dw_class: charaClass,\r\n        full_name: '',\r\n        funds: startingFunds,\r\n        hp: '',\r\n        items: startingGear,\r\n        level: '1',\r\n        look: '',\r\n        moves: startingMoves,\r\n        owner: currentUser.email,\r\n        race: charaRace,\r\n        race_move: charaRaceMove,\r\n        xp: '0',\r\n      })\r\n        .then(() => {\r\n          console.info('Created Character:', charaName);\r\n        })\r\n        .catch((error) => {\r\n          alert('Failed to create character, see console error');\r\n          console.error('Error creating document:', error);\r\n        });\r\n    } else {\r\n      alert('Cannot save blank character');\r\n    }\r\n  };\r\n\r\n  function getStepContent(stepIndex) {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return (\r\n          <>\r\n            <FormControl variant='outlined' className={classes.formControl}>\r\n              <InputLabel>Class</InputLabel>\r\n              <Select\r\n                label='Class'\r\n                value={charaClass}\r\n                name='class'\r\n                onChange={(event) => {\r\n                  setCharaAlignment('');\r\n                  setCharaClass(event.target.value);\r\n                }}>\r\n                {dw_classes.map((data, index) => {\r\n                  return (\r\n                    <MenuItem value={data} key={index}>\r\n                      {data}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n              <p dangerouslySetInnerHTML={{ __html: classDescription() }} />\r\n            </FormControl>\r\n            <br />\r\n            <FormControl variant='outlined' className={classes.formControl}>\r\n              <InputLabel>Alignment</InputLabel>\r\n              <Select\r\n                label='Alignment'\r\n                value={charaAlignment}\r\n                name='alignment'\r\n                onChange={(event) => setCharaAlignment(event.target.value)}>\r\n                {charaClass &&\r\n                  class_details[charaClass].alignments.map((data, index) => {\r\n                    return (\r\n                      <MenuItem value={data.alignment} key={index}>\r\n                        {data.alignment}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n              </Select>\r\n              <p dangerouslySetInnerHTML={{ __html: alignmentAttribute() }} />\r\n            </FormControl>\r\n          </>\r\n        );\r\n      case 1:\r\n        return (\r\n          <>\r\n            <TextField\r\n              autoFocus={true}\r\n              margin='dense'\r\n              id='name'\r\n              label='Short Character Name'\r\n              fullWidth\r\n              onChange={(event) => setCharaName(event.target.value)}\r\n            />\r\n            <p>Suggested Names: </p>\r\n            <p dangerouslySetInnerHTML={{ __html: suggestedNames() }} />\r\n          </>\r\n        );\r\n      case 2:\r\n        return (\r\n          <>\r\n            <FormControl variant='outlined' className={classes.formControl}>\r\n              <InputLabel>Race</InputLabel>\r\n              <Select\r\n                label='Race'\r\n                value={charaRace}\r\n                name='race'\r\n                onChange={(event) => setCharaRace(event.target.value)}>\r\n                {races.map((data, index) => {\r\n                  return (\r\n                    <MenuItem value={data} key={index}>\r\n                      {data}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            <br />\r\n            <FormControl component='fieldset' className={classes.formControl}>\r\n              <RadioGroup\r\n                aria-label='race move'\r\n                name='race move'\r\n                value={charaRaceMove}\r\n                onChange={(event) => setCharaRaceMove(event.target.value)}>\r\n                {charaClass &&\r\n                  class_details[charaClass].race_moves.map((data, index) => {\r\n                    return (\r\n                      <FormControlLabel\r\n                        key={index}\r\n                        value={data.move}\r\n                        control={<Radio />}\r\n                        label={data.move + ' (' + data.race + ')'}\r\n                      />\r\n                    );\r\n                  })}\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </>\r\n        );\r\n      case 3:\r\n        return <p dangerouslySetInnerHTML={{ __html: gearDetails() }} />;\r\n      case 4:\r\n        return 'Class Move Choices!';\r\n      case 5:\r\n        return (\r\n          <div className={classes.root}>\r\n            <FormControl component='fieldset' className={classes.formControl}>\r\n              <FormLabel component='legend'>\r\n                Choose some optionally suggested bonds or you can create your\r\n                own!\r\n              </FormLabel>\r\n              <FormGroup>\r\n                {charaClass &&\r\n                  class_details[charaClass].suggested_bonds.map(\r\n                    (data, index) => {\r\n                      return (\r\n                        <FormControlLabel\r\n                          key={index}\r\n                          control={\r\n                            <Checkbox\r\n                              key={index}\r\n                              onChange={handleBondChange}\r\n                              color='primary'\r\n                              name={data}\r\n                            />\r\n                          }\r\n                          label={data}\r\n                        />\r\n                      );\r\n                    }\r\n                  )}\r\n              </FormGroup>\r\n            </FormControl>\r\n          </div>\r\n        );\r\n      default:\r\n        return 'Unknown stepIndex';\r\n    }\r\n  }\r\n\r\n  function nextButtons(stepIndex) {\r\n    if (stepIndex === steps.length - 1) {\r\n      if (\r\n        campaignURL &&\r\n        charaName &&\r\n        charaClass &&\r\n        charaAlignment &&\r\n        charaRace &&\r\n        charaRaceMove\r\n      ) {\r\n        return (\r\n          <Button variant='contained' color='primary' onClick={handleSave}>\r\n            Create Character\r\n          </Button>\r\n        );\r\n      } else {\r\n        return (\r\n          <Button\r\n            disabled\r\n            variant='contained'\r\n            color='primary'\r\n            onClick={handleSave}>\r\n            Create Character\r\n          </Button>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <Button variant='contained' color='primary' onClick={handleNext}>\r\n          Next\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleCancel}>\r\n      <DialogContent>\r\n        <div className={classes.root}>\r\n          <Stepper activeStep={activeStep} alternativeLabel>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <div>\r\n            <div>\r\n              <Typography component={'span'} className={classes.instructions}>\r\n                {getStepContent(activeStep)}\r\n              </Typography>\r\n            </div>\r\n            <Button\r\n              disabled={activeStep === 0}\r\n              onClick={handleBack}\r\n              className={classes.backButton}>\r\n              Back\r\n            </Button>\r\n            {nextButtons(activeStep)}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useContext, useState, useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router';\r\nimport * as FirebaseService from 'services/firebase';\r\nimport CampaignState from 'components/contexts/CampaignState';\r\nimport CreateCharacterState from 'components/contexts/CreateCharacterState';\r\nimport CreateCharacter from 'components/campaign/CreateCharacter';\r\nimport { Add, Delete } from '@material-ui/icons';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid,\r\n  IconButton,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n});\r\n\r\nexport default function CampaignDetails() {\r\n  const classes = useStyles();\r\n  const { campaign } = useContext(CampaignState);\r\n  const { campaignURL } = useParams();\r\n  const [open, setOpen] = useState(false);\r\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  // Delete Character\r\n  const deleteCharacter = (campaign, character) => {\r\n    if (campaign && character) {\r\n      //don't save unless details present\r\n      FirebaseService.deleteCharacter(campaign, character)\r\n        .then(() => {\r\n          console.info('Deleted Character:', character);\r\n        })\r\n        .catch((error) => {\r\n          alert('Failed to delete character, see console error');\r\n          console.error('Error deleting document:', error);\r\n        });\r\n    } else {\r\n      alert('Cannot delete blank character');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CreateCharacterState.Provider value={ctx}>\r\n      <Grid className={classes.root} spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Grid container justify='center' spacing={1}>\r\n            {campaign.campaign &&\r\n              campaign.campaign.map((campaign, index) => {\r\n                return (\r\n                  <Grid item key={index}>\r\n                    <Card className={classes.root}>\r\n                      <CardHeader\r\n                        action={\r\n                          <IconButton\r\n                            aria-label='delete'\r\n                            onClick={() =>\r\n                              deleteCharacter(campaignURL, campaign.character)\r\n                            }>\r\n                            <Delete />\r\n                          </IconButton>\r\n                        }\r\n                        title={\r\n                          <Link\r\n                            to={\r\n                              '/dw-react/' +\r\n                              campaignURL +\r\n                              '/' +\r\n                              campaign.character\r\n                            }>\r\n                            {campaign.character}\r\n                          </Link>\r\n                        }\r\n                        subheader={campaign.characterData.owner}\r\n                      />\r\n                      <CardContent>\r\n                        <Typography variant='body1' component='p'>\r\n                          {campaign.characterData.dw_class}\r\n                        </Typography>\r\n                        <Typography variant='body1' component='p'>\r\n                          {campaign.characterData.race}\r\n                        </Typography>\r\n                        <Typography variant='body1' component='p'>\r\n                          {campaign.characterData.alignment}\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography variant='body2' component='p'>\r\n                          HP: {campaign.characterData.hp}\r\n                        </Typography>\r\n                        <Typography variant='body2' component='p'>\r\n                          XP: {campaign.characterData.xp}\r\n                        </Typography>\r\n                        <Typography variant='body2' component='p'>\r\n                          Funds: {campaign.characterData.funds}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                );\r\n              })}\r\n            <Grid item>\r\n              <Card className={classes.root}>\r\n                <CardHeader textAlign='center' title='Add Character' />\r\n                <CardContent textAlign='center'>\r\n                  <IconButton aria-label='add' onClick={handleClickOpen}>\r\n                    <Add />\r\n                  </IconButton>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <CreateCharacter />\r\n    </CreateCharacterState.Provider>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport * as FirebaseService from 'services/firebase';\r\nimport CampaignState from 'components/contexts/CampaignState';\r\nimport CampaignHeader from 'components/campaign/CampaignHeader';\r\nimport CampaignDetails from 'components/campaign/CampaignDetails';\r\n\r\nexport default function CampaignSheet() {\r\n  const [campaign, setCampaign] = useState({});\r\n  const { campaignURL } = useParams();\r\n\r\n  // Use an effect hook to subscribe to the campaign stream and\r\n  // automatically unsubscribe when the component unmounts.\r\n  useEffect(() => {\r\n    if (campaignURL) {\r\n      const unsubscribe = FirebaseService.streamCharacters(campaignURL, {\r\n        next: (querySnapshot) => {\r\n          const updatedCharacterList = querySnapshot.docs.map((docSnapshot) => {\r\n            return {\r\n              character: docSnapshot.id,\r\n              characterData: docSnapshot.data(),\r\n            };\r\n          });\r\n          setCampaign((campaign) => ({ campaign: updatedCharacterList }));\r\n        },\r\n        error: (error) => {\r\n          alert('Failed to load campaign data correctly, see console error');\r\n          console.error('Error loading document:', error);\r\n        },\r\n      });\r\n      return unsubscribe;\r\n    }\r\n  }, [campaignURL, setCampaign]);\r\n\r\n  useEffect(() => {\r\n    console.info('Campaign State:', campaign);\r\n  }, [campaign]); //Only log to console if state actually changes\r\n\r\n  const ctx = useMemo(() => ({ campaign, setCampaign }), [campaign]); //Memo-ised state for performance\r\n\r\n  return (\r\n    <CampaignState.Provider value={ctx}>\r\n      <CampaignHeader />\r\n      <br />\r\n      <CampaignDetails />\r\n    </CampaignState.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport ErrorPage from 'components/ErrorPage';\r\nimport Homepage from 'components/homepage/Homepage';\r\nimport AppHeader from 'components/AppHeader';\r\nimport CharacterSheet from 'components/character/CharacterSheet';\r\nimport Campaign from 'components/campaign/Campaign';\r\nimport '@fontsource/roboto';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Typography component={'span'}>\r\n      <Container>\r\n        <Router>\r\n          <AppHeader />\r\n          <Switch>\r\n            <Route\r\n              exact={true}\r\n              path='/dw-react/:campaignURL/:characterURL'\r\n              component={CharacterSheet}\r\n            />\r\n            <Route\r\n              exact={true}\r\n              path='/dw-react/:campaignURL'\r\n              component={Campaign}\r\n            />\r\n            <Route exact={true} path='/dw-react' component={Homepage} />\r\n            <Route component={ErrorPage} />\r\n          </Switch>\r\n        </Router>\r\n      </Container>\r\n    </Typography>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'components/App';\r\nimport * as FirebaseService from 'services/firebase';\r\nimport AuthState from 'components/contexts/AuthState';\r\nimport { Button } from '@material-ui/core';\r\n\r\nfunction Index() {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  const ctx = useMemo(() => ({ currentUser }), [currentUser]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = FirebaseService.auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  return (\r\n    <AuthState.Provider value={ctx}>\r\n      {currentUser ? (\r\n        <App />\r\n      ) : (\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          onClick={FirebaseService.SignInWithGoogle}>\r\n          SIGN IN WITH GOOGLE\r\n        </Button>\r\n      )}\r\n    </AuthState.Provider>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(<Index />, rootElement);\r\n"],"sourceRoot":""}