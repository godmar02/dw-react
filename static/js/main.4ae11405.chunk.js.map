{"version":3,"sources":["components/ErrorPage.js","services/firebase.js","components/homepage/HomepageHeader.js","components/contexts/HomepageState.js","components/contexts/AuthState.js","components/homepage/HomepageDetails.js","components/homepage/Homepage.js","components/contexts/ProfileState.js","components/profile/ProfilePicture.js","components/profile/ProfileDetails.js","components/profile/UserProfile.js","components/AppHeader.js","components/contexts/CharacterState.js","components/character/CharacterSheetHeader.js","components/character/CharacterBasicDetails.js","components/character/CharacterDamage.js","components/character/CharacterArmour.js","components/character/CharacterFunds.js","components/character/CharacterHP.js","components/character/CharacterLevel.js","components/character/CharacterXP.js","components/character/CharacterBasicStats.js","components/character/CharacterAbilities.js","components/contexts/AddBondState.js","components/character/AddBond.js","components/character/CharacterBonds.js","components/contexts/AddItemState.js","components/character/AddItem.js","components/character/CharacterGear.js","components/character/CharacterClassFeatures.js","components/character/CharacterStandardMoves.js","components/character/CharacterAdvancedMoves.js","components/contexts/AddMoveState.js","components/character/AddMove.js","components/character/CharacterClassMoves.js","components/character/CharacterMoves.js","components/other/DiceRoller.js","components/character/CharacterSheet.js","components/contexts/CampaignState.js","components/campaign/CampaignHeader.js","components/contexts/CreateCharacterState.js","components/campaign/CreateCharacter.js","components/campaign/CampaignDetails.js","components/campaign/Campaign.js","components/App.js","index.js"],"names":["ErrorPage","firebase","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","provider","GoogleAuthProvider","SignInWithGoogle","signInWithPopup","saveCharacter","campaign","character","data","collection","doc","set","setCustomParameters","prompt","HomepageHeader","Breadcrumbs","aria-label","HomepageState","createContext","AuthState","useStyles","makeStyles","table","minWidth","HomepageDetails","classes","currentUser","useContext","useState","open","setOpen","campaignName","setCampaignName","campaigns","handleCancel","saveCampaign","owner","email","then","console","info","catch","error","alert","deleteCampaign","delete","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","IconButton","onClick","Add","TableBody","map","index","to","id","Delete","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","onChange","event","target","value","DialogActions","Button","color","Homepage","setCampaigns","useEffect","observer","next","querySnapshot","updatedCampaignList","docs","docSnapshot","onSnapshot","ctx","useMemo","Provider","ProfileState","ProfilePicture","show","setShow","Avatar","src","photoURL","alt","ProfileDetails","style","border","WebkitBorderRadius","borderRadius","display","position","top","right","backgroundColor","textAlign","font","letterSpacing","lineHeight","fontWeight","padding","displayName","variant","FirebaseService","signOut","UserProfile","theme","root","flexGrow","menuButton","marginRight","spacing","title","AppHeader","AppBar","Toolbar","edge","Menu","Typography","CharacterState","CharacterSheetHeader","useParams","campaignURL","characterURL","dw_class","level","smallTextField","width","CharacterBasicDetails","setCharacter","dwc","alig","alignment","handleCharacterChange","name","size","multiline","placeholder","full_name","backstory","class_details","suggested_look","suggestedLook","look","readOnly","race","race_move","alignments","find","x","attribute","textField","CharacterDamage","InputProps","damage","CharacterArmour","type","inputProps","min","armour","CharacterFunds","funds","CharacterHP","maxHp","abilities","base_hp","parseInt","category","score","hp","endAdornment","InputAdornment","input","CharacterLevel","CharacterXP","maxXp","xp","CharacterBasicStats","Grid","item","xs","container","justify","card","cardHeader","formControl","CharacterAbilities","updateAbilityScore","e","newAbilities","updateAbilityAffliction","affliction","abilityModifier","abilityScore","abilityAffliction","baseModifier","indexOf","modifier","ab","Card","CardHeader","CardContent","reduce","totalScore","max","fontSize","FormControl","Select","tabIndex","ability_afflictions","MenuItem","AddBondState","AddBond","bond","setBond","addBond","newBonds","bonds","RadioGroup","FormControlLabel","control","Radio","suggested_bonds","CharacterBonds","updateBond","splice","deleteBond","align","colSpan","AddItemState","AddItem","setItem","addItem","newItem","items","Object","assign","checkbox","newItems","Autocomplete","freeSolo","options","option","renderInput","params","chips","flexWrap","chip","maxWidth","borderBottom","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","Row","props","openRow","setOpenRow","updateItem","KeyboardArrowUp","KeyboardArrowDown","Checkbox","checked","updateItemCheckbox","uses","multiple","tags","Input","renderValue","selected","Chip","itemTags","weight","deleteItem","paddingBottom","paddingTop","Collapse","in","timeout","unmountOnExit","Box","itemTypes","description","cost","CharacterGear","totalLoad","maxLoad","str","base_load","CharacterClassFeatures","updateFeatureCheckbox","newFeatures","class_features","updateFeature","feature","deleteFeatureRow","addFeatureRow","CharacterStandardMoves","standard_moves","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","dangerouslySetInnerHTML","__html","CharacterAdvancedMoves","advanced_moves","AddMoveState","AddMove","move","setMove","addMove","newMove","moves","newMoves","starting_moves","CharacterClassStartingMoves","getMove","field","class_moves","TabPanel","children","other","role","hidden","p","a11yProps","palette","background","paper","CharacterMoves","React","setValue","Tabs","newValue","Tab","DiceRoller","dice","setDice","diceNum","setDiceNum","rollResult","setRollResult","singleRoll","sides","Math","floor","random","InputLabel","defaultValue","disabled","total","i","rollDice","CharacterSheet","documentSnapshot","debouncedSave","useCallback","callback","delay","timer","args","clearTimeout","setTimeout","debounce","keys","length","CampaignState","CampaignHeader","CreateCharacterState","backButton","instructions","marginTop","marginBottom","CampaignDetails","charaName","setCharaName","charaFullName","setCharaFullName","charaClass","setCharaClass","charaRace","setCharaRace","charaAlignment","setCharaAlignment","charaRaceMove","setCharaRaceMove","charaMoveOption","setCharaMoveOption","setCharaGearOption","charaBonds","setCharaBonds","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","handleBondChange","filter","handleSave","gearOptions","gear","starting_gear_details","moveDescription","moveOptions","starting_move_options","startingFunds","String","starting_funds","startingMoves","startingGear","starting_gear","Stepper","alternativeLabel","Step","StepLabel","stepIndex","dw_classes","suggested_names","race_moves","FormLabel","FormGroup","getStepContent","deleteCharacter","action","subheader","characterData","CampaignSheet","setCampaign","updatedCharacterList","App","Container","exact","path","Campaign","Index","setCurrentUser","onAuthStateChanged","user","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.4ae11405.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorPage() {\n  return <h1>Oops! Page not found!</h1>;\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialise Firebase and setting up firestore and auth for use later\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\n\n// Authenticate with Firebase-auth using the Google provider object\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account',\n});\nexport function SignInWithGoogle() {\n  auth.signInWithPopup(provider);\n}\n\n// Firestore operations\n\n// Create new campaign\nexport function createCampaign(campaign, owner) {\n  return db.collection('campaigns').doc(campaign).set({ owner: owner });\n}\n\n// Save/Create Character\nexport function saveCharacter(campaign, character, data) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .doc(character)\n    .set(data);\n}\n\n// Stream Campaign Data (all Campaigns)\nexport function streamCampaigns(observer) {\n  return db.collection('campaigns').onSnapshot(observer);\n}\n\n// Stream Character Data (all Characters)\nexport function streamCharacters(campaign, observer) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .onSnapshot(observer);\n}\n\n// Stream Character Data (selected Characters)\nexport function streamCharacter(campaign, character, observer) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .doc(character)\n    .onSnapshot(observer);\n}\n\n// Delete Campaign\nexport function deleteCampaign(campaign) {\n  return db.collection('campaigns').doc(campaign).delete();\n}\n\n// Delete Characters\nexport function deleteCharacter(campaign, character) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .doc(character)\n    .delete();\n}\n\n// Default Export\nexport default firebase;\n","import React from 'react';\nimport { Breadcrumbs } from '@material-ui/core';\n\nexport default function HomepageHeader() {\n  return (\n    <div>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <p>Home</p>\n      </Breadcrumbs>\n      <h1>Campaigns Homepage</h1>\n    </div>\n  );\n}\n","import { createContext } from 'react';\n\nconst HomepageState = createContext();\n\nexport default HomepageState;\n","import { createContext } from 'react';\n\nconst AuthState = createContext();\n\nexport default AuthState;\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as FirebaseService from 'services/firebase';\nimport HomepageState from 'components/contexts/HomepageState';\nimport AuthState from 'components/contexts/AuthState';\nimport { Add, Delete } from '@material-ui/icons';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function HomepageDetails() {\n  const classes = useStyles();\n  const { currentUser } = useContext(AuthState);\n  const [open, setOpen] = useState(false);\n  const [campaignName, setCampaignName] = useState('');\n  const { campaigns } = useContext(HomepageState);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    setOpen(false);\n    saveCampaign();\n  };\n\n  // Create New Campaign\n  const saveCampaign = () => {\n    if (campaignName) {\n      //don't save unless details present\n      FirebaseService.createCampaign(campaignName, currentUser.email)\n        .then(() => {\n          console.info('Created Campaign:', campaignName);\n        })\n        .catch((error) => {\n          alert('Failed to create campaign, see console error');\n          console.error('Error creating document:', error);\n        });\n    } else {\n      alert('Cannot save blank campaign');\n    }\n  };\n\n  // Delete Campaign\n  const deleteCampaign = (campaignName) => {\n    if (campaignName) {\n      //don't save unless details present\n      FirebaseService.deleteCampaign(campaignName)\n        .then(() => {\n          console.info('Deleted Campaign:', campaignName);\n        })\n        .catch((error) => {\n          alert('Failed to delete campaign, see console error');\n          console.error('Error deleting document:', error);\n        });\n    } else {\n      alert('Cannot delete blank campaign');\n    }\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Campaign</TableCell>\n              <TableCell>Owner</TableCell>\n              <TableCell>\n                <IconButton aria-label='add' onClick={handleClickOpen}>\n                  <Add />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {campaigns.campaigns &&\n              campaigns.campaigns.map((campaign, index) => {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>\n                      <Link to={'/dw-react/' + campaign.id}>{campaign.id}</Link>\n                    </TableCell>\n                    <TableCell>{campaign.owner}</TableCell>\n                    <TableCell>\n                      <IconButton\n                        aria-label='delete'\n                        onClick={() => deleteCampaign(campaign.id)}>\n                        <Delete />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Dialog\n        open={open}\n        onClose={handleCancel}\n        aria-labelledby='form-dialog-title'>\n        <DialogTitle id='form-dialog-title'>Create new campaign</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To create a campaign, please enter the new campaign name here. You\n            will not be able to change this once saved.\n          </DialogContentText>\n          <TextField\n            autoFocus={true}\n            margin='dense'\n            id='name'\n            label='Campaign Name'\n            fullWidth\n            onChange={(event) => setCampaignName(event.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={handleSave} color='primary'>\n            Create Campaign\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport * as FirebaseService from 'services/firebase';\nimport HomepageHeader from 'components/homepage/HomepageHeader';\nimport HomepageDetails from 'components/homepage/HomepageDetails';\nimport HomepageState from 'components/contexts/HomepageState';\n\nexport default function Homepage() {\n  const [campaigns, setCampaigns] = useState({});\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    const unsubscribe = FirebaseService.streamCampaigns({\n      next: (querySnapshot) => {\n        const updatedCampaignList = querySnapshot.docs.map((docSnapshot) => {\n          return { id: docSnapshot.id, owner: docSnapshot.data().owner };\n        });\n        setCampaigns((campaign) => ({ campaigns: updatedCampaignList }));\n      },\n      error: (error) => {\n        alert('Failed to load data correctly, see console error');\n        console.error('Error loading data:', error);\n      },\n    });\n    return unsubscribe;\n  }, [setCampaigns]);\n\n  useEffect(() => {\n    console.info('Campaigns State:', campaigns);\n  }, [campaigns]); //Only log to console if state actually changes\n\n  const ctx = useMemo(() => ({ campaigns }), [campaigns]); //Memo-ised state for performance\n\n  return (\n    <HomepageState.Provider value={ctx}>\n      <HomepageHeader />\n      <br />\n      <HomepageDetails />\n    </HomepageState.Provider>\n  );\n}\n","import { createContext } from 'react';\n\nconst ProfileState = createContext();\n\nexport default ProfileState;\n","import React, { useContext } from \"react\";\nimport AuthState from \"components/contexts/AuthState\";\nimport ProfileState from \"components/contexts/ProfileState\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nexport default function ProfilePicture() {\n  const { currentUser } = useContext(AuthState);\n  const { show, setShow } = useContext(ProfileState);\n  const toggleSetShow = () => setShow(!show);\n\n  return (\n    <Avatar\n      src={currentUser.photoURL}\n      alt=\"Google Profile\"\n      onClick={() => toggleSetShow()}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport AuthState from 'components/contexts/AuthState';\nimport * as FirebaseService from 'services/firebase';\nimport { Button } from '@material-ui/core';\n\nexport default function ProfileDetails() {\n  const { currentUser } = useContext(AuthState);\n\n  return (\n    <div\n      style={{\n        border: '0',\n        WebkitBorderRadius: '50%',\n        borderRadius: '5px',\n        display: 'inline-block',\n        margin: '0',\n        position: 'absolute',\n        top: '50px',\n        right: '20px',\n        color: '#bdc1c6',\n        backgroundColor: 'rgba(60, 64, 67, 0.9)',\n        textAlign: 'left',\n        font: \"500 12px 'Roboto', arial, sans-serif\",\n        letterSpacing: '0.8px',\n        lineHeight: '16px',\n        fontWeight: 'bold',\n        padding: '8px 8px',\n      }}>\n      <div\n        style={{\n          color: 'white',\n        }}>\n        Google Account\n      </div>\n      <div>{currentUser.displayName}</div>\n      <div>{currentUser.email}</div>\n      <Button\n        variant='contained'\n        color='primary'\n        onClick={() => FirebaseService.auth.signOut()}>\n        LOG OUT\n      </Button>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from 'react';\nimport ProfilePicture from 'components/profile/ProfilePicture';\nimport ProfileDetails from 'components/profile/ProfileDetails';\nimport ProfileState from 'components/contexts/ProfileState';\n\nexport default function UserProfile() {\n  const [show, setShow] = useState(false);\n  const ctx = useMemo(() => ({ show, setShow }), [show]); //Memo-ised state for performance\n\n  return (\n    <ProfileState.Provider value={ctx}>\n      <ProfilePicture /> {show ? <ProfileDetails /> : null}\n    </ProfileState.Provider>\n  );\n}\n","import React from 'react';\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Menu } from '@material-ui/icons';\nimport UserProfile from 'components/profile/UserProfile';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function AppHeader() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Toolbar>\n          <IconButton\n            edge='start'\n            className={classes.menuButton}\n            color='inherit'\n            aria-label='menu'>\n            <Menu />\n          </IconButton>\n          <Typography component={'span'} variant='h6' className={classes.title}>\n            Dungeon World Character Sheet (v0.10.0 by Godmar02)\n          </Typography>\n          <UserProfile />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { createContext } from 'react';\n\nconst CharacterState = createContext();\n\nexport default CharacterState;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { Breadcrumbs } from '@material-ui/core';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\n\nexport default function CharacterSheetHeader() {\n  const { campaignURL, characterURL } = useParams();\n  const { character } = useContext(CharacterState);\n\n  return (\n    <>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <Link to='/dw-react'>Home</Link>\n        <Link to={'/dw-react/' + campaignURL}>{campaignURL}</Link>\n        <p>{characterURL}</p>\n      </Breadcrumbs>\n      <h1>{characterURL}</h1>\n      <p>\n        {character.dw_class} - Level {character.level}\n      </p>\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  smallTextField: {\n    width: 120,\n  },\n});\n\nexport default function CharacterBasicDetails() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const dwc = character.dw_class;\n  const alig = character.alignment;\n  const alignmentAttribute = () => {\n    if (character.dw_class && character.alignment) {\n      return class_details[dwc].alignments.find((x) => x.alignment === alig)\n        .attribute;\n    } else {\n      return '';\n    }\n  };\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  const suggestedLook = () => {\n    if (character.dw_class) {\n      let dwc = character.dw_class;\n      return class_details[dwc].suggested_look;\n    } else {\n      return '';\n    }\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} size='small' aria-label='simple table'>\n          <TableBody>\n            <TableRow>\n              <TableCell>FULL NAME</TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  variant='outlined'\n                  aria-label='empty textarea'\n                  placeholder=\"Your character's full name, titles and all\"\n                  value={character.full_name}\n                  name='full_name'\n                  onChange={handleCharacterChange}\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>BACKSTORY</TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  variant='outlined'\n                  aria-label='empty textarea'\n                  placeholder=\"Describe your character's backstory and anything else about your characters identity here\"\n                  value={character.backstory}\n                  name='backstory'\n                  onChange={handleCharacterChange}\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>LOOK</TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  variant='outlined'\n                  aria-label='empty textarea'\n                  placeholder={suggestedLook()}\n                  name='look'\n                  value={character.look}\n                  onChange={handleCharacterChange}\n                />\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <br />\n      <TableContainer component={Paper}>\n        <Table className={classes.table} size='small' aria-label='simple table'>\n          <TableBody>\n            <TableRow>\n              <TableCell>CLASS</TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  readOnly\n                  className={classes.smallTextField}\n                  variant='outlined'\n                  name='dwClass'\n                  value={character.dw_class}\n                />\n              </TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>RACE</TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  readOnly\n                  className={classes.smallTextField}\n                  variant='outlined'\n                  name='race'\n                  value={character.race}\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  readOnly\n                  variant='outlined'\n                  name='race_move'\n                  value={character.race_move}\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>ALIGNMENT</TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  readOnly\n                  className={classes.smallTextField}\n                  variant='outlined'\n                  name='alignment'\n                  value={character.alignment}\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  multiline\n                  fullWidth\n                  readOnly\n                  variant='outlined'\n                  name='alignment_move'\n                  value={alignmentAttribute()}\n                />\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n}));\n\nexport default function CharacterDamage() {\n  const { character } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  const classes = useStyles();\n\n  const damage = () => {\n    if (character.dw_class) {\n      return class_details[dwc].damage;\n    } else {\n      return '';\n    }\n  };\n\n  return (\n    <TextField\n      variant='outlined'\n      size='small'\n      className={classes.textField}\n      name='damage'\n      label='Damage'\n      InputProps={{\n        readOnly: true,\n      }}\n      value={damage()}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n  },\n}));\n\nexport default function CharacterArmour() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TextField\n      type='number'\n      variant='outlined'\n      size='small'\n      label='Armour'\n      inputProps={{\n        style: { textAlign: 'center' },\n        min: 0,\n      }}\n      name='armour'\n      className={classes.textField}\n      value={character.armour || ''}\n      onChange={handleCharacterChange}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n  },\n}));\n\nexport default function CharacterFunds() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TextField\n      type='number'\n      variant='outlined'\n      size='small'\n      className={classes.textField}\n      name='funds'\n      label='Funds'\n      inputProps={{\n        style: { textAlign: 'center' },\n        min: 0,\n      }}\n      value={character.funds || ''}\n      onChange={handleCharacterChange}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\nimport { InputAdornment, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 100,\n  },\n}));\n\nexport default function CharacterHP() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  const classes = useStyles();\n\n  const maxHp = () => {\n    if (character.dw_class && character.abilities) {\n      return (\n        class_details[dwc].base_hp +\n        parseInt(\n          character.abilities.find((x) => x.category === 'CON').score,\n          10\n        )\n      );\n    } else {\n      return '';\n    }\n  };\n\n  // Validate XP\n  const validateHp = () => {\n    if (parseInt(character.hp, 10) > maxHp()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <>\n      <TextField\n        type='number'\n        variant='outlined'\n        label='HP'\n        error={validateHp()}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>{' / ' + maxHp()}</InputAdornment>\n          ),\n          className: classes.input,\n        }}\n        size='small'\n        className={classes.textField}\n        inputProps={{\n          style: { textAlign: 'center' },\n          min: 0,\n        }}\n        name='hp'\n        value={character.hp || ''}\n        onChange={handleCharacterChange}\n      />\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n  },\n}));\n\nexport default function CharacterLevel() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TextField\n      type='number'\n      variant='outlined'\n      size='small'\n      label='Level'\n      className={classes.textField}\n      inputProps={{\n        style: { textAlign: 'center' },\n        min: 1,\n      }}\n      name='level'\n      value={character.level || ''}\n      onChange={handleCharacterChange}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { InputAdornment, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 100,\n  },\n}));\n\nexport default function CharacterXP() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  // Total Load\n  const maxXp = () => {\n    if (character.level) {\n      return parseInt(character.level, 10) + 7;\n    } else {\n      return '';\n    }\n  };\n\n  // Validate XP\n  const validateXp = () => {\n    if (parseInt(character.xp, 10) > maxXp()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <>\n      <TextField\n        type='number'\n        variant='outlined'\n        label='XP'\n        error={validateXp()}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>{' / ' + maxXp()}</InputAdornment>\n          ),\n          className: classes.input,\n        }}\n        size='small'\n        className={classes.textField}\n        inputProps={{\n          style: { textAlign: 'center' },\n          min: 0,\n        }}\n        name='xp'\n        value={character.xp || ''}\n        onChange={handleCharacterChange}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CharacterDamage from 'components/character/CharacterDamage';\nimport CharacterArmour from 'components/character/CharacterArmour';\nimport CharacterFunds from 'components/character/CharacterFunds';\nimport CharacterHP from 'components/character/CharacterHP';\nimport CharacterLevel from 'components/character/CharacterLevel';\nimport CharacterXP from 'components/character/CharacterXP';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n}));\n\nexport default function CharacterBasicStats() {\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.root} spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justify='center' spacing={1}>\n          <Grid item>\n            <CharacterLevel />\n          </Grid>\n          <Grid item>\n            <CharacterHP />\n          </Grid>\n          <Grid item>\n            <CharacterXP />\n          </Grid>\n          <Grid item>\n            <CharacterDamage />\n          </Grid>\n          <Grid item>\n            <CharacterArmour />\n          </Grid>\n          <Grid item>\n            <CharacterFunds />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { ability_afflictions } from 'data/abilityAfflictions';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  FormControl,\n  Grid,\n  MenuItem,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    width: 160,\n    padding: 0,\n  },\n  cardHeader: {\n    textAlign: 'center',\n  },\n  formControl: {\n    margin: 0,\n    width: 126,\n    textAlign: 'center',\n  },\n  textField: {\n    width: 126,\n  },\n}));\n\nexport default function CharacterAbilities() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n\n  const updateAbilityScore = (index) => (e) => {\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {\n      ...character.abilities[index],\n      score: e.target.value,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      abilities: newAbilities,\n    })); // set array back\n  };\n\n  const updateAbilityAffliction = (index) => (e) => {\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {\n      ...character.abilities[index],\n      affliction: e.target.value,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      abilities: newAbilities,\n    })); // set array back\n  };\n\n  const abilityModifier = (abilityScore, abilityAffliction) => {\n    if (abilityScore && abilityAffliction) {\n      let baseModifier;\n      let afflicted;\n\n      abilityScore = parseInt(abilityScore, 10);\n\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\n        baseModifier = -3;\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\n        baseModifier = -2;\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n        baseModifier = -1;\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n        baseModifier = 0;\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n        baseModifier = 1;\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\n        baseModifier = 2;\n      } else if (abilityScore === 18) {\n        baseModifier = 3;\n      }\n\n      /* -1 if afflicted */\n      if (abilityAffliction === 'Unafflicted') {\n        afflicted = 0;\n      } else {\n        afflicted = 1;\n      }\n\n      let modifier = baseModifier - afflicted;\n\n      if (modifier > 0) {\n        return '[+' + modifier + ']';\n      } else {\n        return '[' + modifier + ']';\n      }\n    } else {\n      return '';\n    }\n  };\n\n  // Validate Score\n  const validateScore = () => {\n    const totalScore = character.abilities.reduce(\n      (totalScore, data) => totalScore + parseInt(data.score || 0, 10),\n      0\n    );\n    if (totalScore !== 73) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <Grid className={classes.root} spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justify='center' spacing={1}>\n          {character.abilities &&\n            character.abilities.map((abilities, index) => {\n              const ab = abilities.category;\n              return (\n                <Grid item key={index}>\n                  <Card className={classes.card}>\n                    <CardHeader\n                      title={abilities.category}\n                      className={classes.cardHeader}\n                    />\n                    <CardContent>\n                      <TextField\n                        type='number'\n                        variant='outlined'\n                        error={validateScore()}\n                        size='small'\n                        margin='none'\n                        name={abilities.category + 'Score'}\n                        value={abilities.score}\n                        className={classes.textField}\n                        inputProps={{\n                          style: { textAlign: 'center' },\n                          min: 1,\n                          max: 18,\n                        }}\n                        onChange={updateAbilityScore(index)}\n                      />\n                      <TextField\n                        variant='outlined'\n                        name={abilities.category + 'Modifier'}\n                        value={abilityModifier(\n                          abilities.score,\n                          abilities.affliction\n                        )}\n                        InputProps={{ readOnly: true }}\n                        inputProps={{\n                          style: {\n                            textAlign: 'center',\n                            fontWeight: 'bold',\n                            fontSize: 25,\n                          },\n                        }}\n                        className={classes.textField}\n                      />\n                      <FormControl\n                        variant='outlined'\n                        size='small'\n                        className={classes.formControl}>\n                        <Select\n                          tabIndex={-1}\n                          value={abilities.affliction || 'null'}\n                          name={abilities.category + 'Affliction'}\n                          onChange={updateAbilityAffliction(index)}>\n                          {ability_afflictions[ab].map((data, index) => {\n                            return (\n                              <MenuItem value={data} key={index}>\n                                {data}\n                              </MenuItem>\n                            );\n                          })}\n                        </Select>\n                      </FormControl>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              );\n            })}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { createContext } from 'react';\n\nconst AddBondState = createContext();\n\nexport default AddBondState;\n","import React, { useContext, useState } from 'react';\nimport AddBondState from 'components/contexts/AddBondState';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function AddBond() {\n  const classes = useStyles();\n  const { open, setOpen } = useContext(AddBondState);\n  const { character, setCharacter } = useContext(CharacterState);\n  const [bond, setBond] = useState('');\n  const dwc = character.dw_class;\n\n  const handleCancel = () => {\n    setBond('');\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    addBond();\n    setBond('');\n    setOpen(false);\n  };\n\n  const addBond = () => {\n    const newBonds = [...character.bonds, bond]; // copying the old array and adding new bond depending upon selection\n    setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleCancel}\n      aria-labelledby='form-dialog-title'>\n      <DialogTitle id='form-dialog-title'>Add new bond</DialogTitle>{' '}\n      <DialogContent>\n        <DialogContentText>\n          Choose a suggested bond to add. If you wish to create your own choose\n          'CUSTOM'.\n        </DialogContentText>\n        <FormControl component='fieldset' className={classes.formControl}>\n          <RadioGroup\n            aria-label='bond'\n            name='bond'\n            value={bond}\n            onChange={(event) => setBond(event.target.value)}>\n            <FormControlLabel value='' control={<Radio />} label='CUSTOM' />\n            {character.dw_class &&\n              class_details[dwc].suggested_bonds.map((data, index) => {\n                return (\n                  <FormControlLabel\n                    key={index}\n                    value={data}\n                    control={<Radio />}\n                    label={data}\n                  />\n                );\n              })}\n          </RadioGroup>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color='primary'>\n          Cancel\n        </Button>\n        <Button onClick={handleSave} color='primary'>\n          Add Bond\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useMemo, useState } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport AddBondState from 'components/contexts/AddBondState';\nimport AddBond from 'components/character/AddBond';\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Add, Delete } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function CharacterBonds() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n  const [open, setOpen] = useState(false);\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\n\n  const updateBond = (index) => (e) => {\n    let newBonds = [...character.bonds]; // copying the old array\n    newBonds[index] = e.target.value; // replace value\n    setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\n  };\n\n  const deleteBond = (index) => {\n    const newBonds = [...character.bonds]; // copying the old array\n    //don't delete last row\n    newBonds.splice(index, 1); // remove item from array\n    setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <AddBondState.Provider value={ctx}>\n        <AddBond />\n      </AddBondState.Provider>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label='simple table'>\n          <TableBody>\n            {character.bonds &&\n              character.bonds.map((bond, index) => {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>\n                      <TextField\n                        multiline\n                        fullWidth\n                        variant='outlined'\n                        aria-label='empty textarea'\n                        placeholder='Add bond detail here'\n                        value={bond}\n                        name={'bond' + index}\n                        onChange={updateBond(index)}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        aria-label='delete'\n                        onClick={() => deleteBond(index)}>\n                        <Delete />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            <TableRow>\n              <TableCell align='center' colSpan='2'>\n                <IconButton aria-label='add' onClick={handleClickOpen}>\n                  <Add />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import { createContext } from 'react';\n\nconst AddItemState = createContext();\n\nexport default AddItemState;\n","import React, { useContext, useState } from 'react';\nimport AddItemState from 'components/contexts/AddItemState';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { items } from 'data/items';\n\nexport default function AddItem() {\n  const { open, setOpen } = useContext(AddItemState);\n  const { character, setCharacter } = useContext(CharacterState);\n  const [item, setItem] = useState('');\n\n  const handleCancel = () => {\n    setItem('');\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    addItem();\n    setItem('');\n    setOpen(false);\n  };\n\n  const addItem = () => {\n    let newItem = items.find((x) => x.name === item);\n    if (newItem) {\n      newItem = Object.assign({}, newItem, { checkbox: false }); //Adding blank checkbox\n      const newItems = [...character.items, newItem]; // copying the old array and adding new item depending upon selection\n      setCharacter((character) => ({ ...character, items: newItems })); // set array back\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleCancel}\n      aria-labelledby='form-dialog-title'>\n      <DialogTitle id='form-dialog-title'>Add new item</DialogTitle>{' '}\n      <DialogContent>\n        <DialogContentText>\n          Search for an item to add. If you wish to create your own choose\n          'CUSTOM'.\n        </DialogContentText>\n        <Autocomplete\n          freeSolo\n          onChange={(event, value) => setItem(value)}\n          options={items.map((option) => option.name)}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label='Items'\n              margin='normal'\n              variant='outlined'\n            />\n          )}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color='primary'>\n          Cancel\n        </Button>\n        <Button onClick={handleSave} color='primary'>\n          Add Item\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useMemo, useState } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport AddItemState from 'components/contexts/AddItemState';\nimport AddItem from 'components/character/AddItem';\nimport { class_details } from 'data/classDetails';\nimport { itemTypes } from 'data/itemTypes';\nimport { itemTags } from 'data/itemTags';\nimport {\n  Box,\n  Chip,\n  Checkbox,\n  Collapse,\n  FormControl,\n  IconButton,\n  Input,\n  Paper,\n  Select,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Add,\n  Delete,\n  KeyboardArrowDown,\n  KeyboardArrowUp,\n} from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 250,\n  },\n  table: {\n    minWidth: 650,\n  },\n  textField: {\n    width: 120,\n  },\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction Row(props) {\n  const { item } = props;\n  const { index } = props;\n  const classes = useStyles();\n  const [openRow, setOpenRow] = useState(false);\n  const { character, setCharacter } = useContext(CharacterState);\n\n  const updateItem = (event, index) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = { ...character.items[index], [name]: value }; // replace value\n    setCharacter((character) => ({ ...character, items: newItems })); // set array back\n  };\n\n  const updateItemCheckbox = (index) => (e) => {\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = {\n      ...character.items[index],\n      checkbox: e.target.checked,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      items: newItems,\n    })); // set array back\n  };\n\n  const deleteItem = (index) => {\n    const newItems = [...character.items]; // copying the old array\n    newItems.splice(index, 1); // remove item from array\n    setCharacter((character) => ({ ...character, items: newItems })); // set array back\n  };\n\n  return (\n    <>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton\n            aria-label='expand row'\n            size='small'\n            onClick={() => setOpenRow(!openRow)}>\n            {openRow ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n          </IconButton>\n        </TableCell>\n        <TableCell>\n          <Checkbox\n            name={'item_checkbox' + index}\n            checked={!!item.checkbox}\n            onChange={updateItemCheckbox(index)}\n            color='primary'\n          />\n        </TableCell>\n        <TableCell>\n          <TextField\n            fullWidth\n            size='small'\n            variant='outlined'\n            aria-label='empty textarea'\n            value={item.name}\n            name='name'\n            onChange={(event) => updateItem(event, index)}\n          />\n        </TableCell>\n        <TableCell align='center'>\n          <TextField\n            type='number'\n            fullWidth\n            size='small'\n            variant='outlined'\n            className={classes.textField}\n            inputProps={{\n              style: { textAlign: 'center' },\n              min: 0,\n            }}\n            name='uses'\n            value={item.uses}\n            onChange={(event) => updateItem(event, index)}\n          />\n        </TableCell>\n        <TableCell>\n          <FormControl className={classes.formControl}>\n            <Select\n              multiple\n              value={item.tags}\n              name='tags'\n              onChange={(event) => updateItem(event, index)}\n              input={<Input />}\n              renderValue={(selected) => (\n                <div className={classes.chips}>\n                  {selected.map((value, index) => (\n                    <Chip key={index} label={value} className={classes.chip} />\n                  ))}\n                </div>\n              )}\n              MenuProps={MenuProps}>\n              {itemTags.map((name, index) => (\n                <MenuItem key={index} value={name}>\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </TableCell>\n        <TableCell>\n          <TextField\n            type='number'\n            fullWidth\n            size='small'\n            variant='outlined'\n            className={classes.textField}\n            inputProps={{\n              style: { textAlign: 'center' },\n              min: 0,\n            }}\n            value={item.weight}\n            name='weight'\n            onChange={(event) => updateItem(event, index)}\n          />\n        </TableCell>\n        <TableCell>\n          <IconButton aria-label='delete' onClick={() => deleteItem(index)}>\n            <Delete />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={openRow} timeout='auto' unmountOnExit>\n            <Box margin={1}>\n              <Table size='small' aria-label='purchases'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell align='center'>TYPE</TableCell>\n                    <TableCell>DESCRIPTION</TableCell>\n                    <TableCell align='center'>COST</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableCell align='center'>\n                    <FormControl\n                      variant='outlined'\n                      size='small'\n                      className={classes.formControl}>\n                      <Select\n                        tabIndex={-1}\n                        value={item.type}\n                        name='type'\n                        onChange={(event) => updateItem(event, index)}>\n                        {itemTypes.map((type, index) => (\n                          <MenuItem key={index} value={type}>\n                            {type}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      multiline\n                      fullWidth\n                      size='small'\n                      variant='outlined'\n                      aria-label='empty textarea'\n                      value={item.description}\n                      name='description'\n                      onChange={(event) => updateItem(event, index)}\n                    />\n                  </TableCell>\n                  <TableCell align='center'>\n                    <TextField\n                      type='number'\n                      fullWidth\n                      size='small'\n                      variant='outlined'\n                      className={classes.textField}\n                      inputProps={{\n                        style: { textAlign: 'center' },\n                        min: 0,\n                      }}\n                      name='cost'\n                      value={item.cost}\n                      onChange={(event) => updateItem(event, index)}\n                    />\n                  </TableCell>\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\n\nexport default function CharacterGear() {\n  const classes = useStyles();\n  const { character } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  const [open, setOpen] = useState(false);\n\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\n\n  const totalLoad = () => {\n    if (character.items) {\n      return character.items.reduce(\n        (totalLoad, data) => totalLoad + parseInt(data.weight || 0, 10),\n        0\n      );\n    } else {\n      return '';\n    }\n  };\n\n  const maxLoad = () => {\n    if (\n      character.dw_class &&\n      character.abilities.find((x) => x.category === 'STR').score &&\n      character.abilities.find((x) => x.category === 'STR').affliction\n    ) {\n      let str = character.abilities.find((x) => x.category === 'STR');\n      let baseModifier;\n      let abilityAffliction = str.affliction;\n      let abilityScore = parseInt(str.score, 10);\n      let afflicted;\n\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\n        baseModifier = -3;\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\n        baseModifier = -2;\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n        baseModifier = -1;\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n        baseModifier = 0;\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n        baseModifier = 1;\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\n        baseModifier = 2;\n      } else if (abilityScore === 18) {\n        baseModifier = 3;\n      }\n\n      /*-1 if afflicted*/\n      if (abilityAffliction === 'Unafflicted') {\n        afflicted = 0;\n      } else {\n        afflicted = 1;\n      }\n\n      let modifier = baseModifier - afflicted;\n\n      return class_details[dwc].base_load + modifier;\n    } else {\n      return '';\n    }\n  };\n\n  const validateLoad = () => {\n    if (totalLoad() > maxLoad()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <AddItemState.Provider value={ctx}>\n        <AddItem />\n      </AddItemState.Provider>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell align='center'>EQUIPPED</TableCell>\n              <TableCell align='center'>NAME</TableCell>\n              <TableCell align='center'>USES</TableCell>\n              <TableCell align='center'>TAGS</TableCell>\n              <TableCell align='center'>WEIGHT</TableCell>\n              <TableCell>\n                <IconButton aria-label='add' onClick={handleClickOpen}>\n                  <Add />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {character.items &&\n              character.items.map((item, index) => (\n                <Row key={index} index={index} item={item} />\n              ))}\n            <TableRow>\n              <TableCell align='right' colSpan='5'>\n                LOAD\n              </TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  error={validateLoad()}\n                  size='small'\n                  variant='outlined'\n                  name='totalLoad'\n                  className={classes.textField}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  inputProps={{\n                    style: { textAlign: 'center' },\n                  }}\n                  value={totalLoad() + ' / ' + maxLoad()}\n                />\n              </TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { Add, Delete } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ExpandMore } from '@material-ui/icons';\nimport {\n  Checkbox,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function CharacterClassFeatures() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n\n  // State manipulation\n  const updateFeatureCheckbox = (index) => (e) => {\n    let newFeatures = [...character.class_features]; // copying the old array\n    newFeatures[index] = {\n      ...character.class_features[index],\n      checkbox: e.target.checked,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      class_features: newFeatures,\n    })); // set array back\n  };\n\n  const updateFeature = (index) => (e) => {\n    let newFeatures = [...character.class_features]; // copying the old array\n    newFeatures[index] = {\n      ...character.class_features[index],\n      feature: e.target.value,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      class_features: newFeatures,\n    })); // set array back\n  };\n\n  // Delete rows in the table\n  const deleteFeatureRow = (index) => {\n    const newFeatures = [...character.class_features]; // copying the old array\n    newFeatures.splice(index, 1); // remove item from array\n    setCharacter((character) => ({\n      ...character,\n      class_features: newFeatures,\n    })); // set array back\n  };\n\n  // Add rows in the table\n  const addFeatureRow = () => {\n    const newFeatures = [\n      ...character.class_features,\n      { feature: '', checkbox: false },\n    ]; // copying the old array and adding blank item\n    setCharacter((character) => ({\n      ...character,\n      class_features: newFeatures,\n    })); // set array back\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label='simple table'>\n        <TableBody>\n          {character.class_features &&\n            character.class_features.map((class_features, index) => {\n              return (\n                <TableRow key={index}>\n                  <TableCell>\n                    <Checkbox\n                      name={'class_feature_checkbox' + index}\n                      checked={!!class_features.checkbox}\n                      onChange={updateFeatureCheckbox(index)}\n                      color='primary'\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      multiline\n                      fullWidth\n                      variant='outlined'\n                      aria-label='empty textarea'\n                      placeholder='Add class features detail here (e.g. Spell Lists, Poison Recipes, Druid Balance, Paladin Quests etc)'\n                      value={class_features.feature}\n                      name={'class_feature' + index}\n                      onChange={updateFeature(index)}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <IconButton\n                      aria-label='delete'\n                      onClick={() => deleteFeatureRow(index)}>\n                      <Delete />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          <TableRow>\n            <TableCell colSpan='3' align='center'>\n              <IconButton aria-label='add' onClick={() => addFeatureRow()}>\n                <Add />\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { standard_moves } from 'data/standardMoves';\n\nexport default function CharacterStandardMoves() {\n  return (\n    <>\n      {standard_moves.map((data, index) => {\n        return (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              {data.name}\n            </AccordionSummary>\n            <AccordionDetails>\n              <p dangerouslySetInnerHTML={{ __html: data.description }}></p>\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { advanced_moves } from 'data/advancedMoves';\n\nexport default function CharacterAdvancedMoves() {\n  return (\n    <>\n      {advanced_moves.map((data, index) => {\n        return (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              {data.name}\n            </AccordionSummary>\n            <AccordionDetails>\n              <p dangerouslySetInnerHTML={{ __html: data.description }}></p>\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n    </>\n  );\n}\n","import { createContext } from 'react';\n\nconst AddMoveState = createContext();\n\nexport default AddMoveState;\n","import React, { useContext, useState } from 'react';\nimport AddMoveState from 'components/contexts/AddMoveState';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { class_details } from 'data/classDetails';\n\nexport default function AddMove() {\n  const { open, setOpen } = useContext(AddMoveState);\n  const { character, setCharacter } = useContext(CharacterState);\n  const [move, setMove] = useState('');\n  const dwc = character.dw_class;\n\n  const handleCancel = () => {\n    setMove('');\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    addMove();\n    setMove('');\n    setOpen(false);\n  };\n\n  const addMove = () => {\n    const newMove = class_details.moves.find((x) => x.name === move);\n    if (newMove) {\n      const newMoves = [...character.moves, newMove]; // copying the old array and adding new move depending upon selection\n      setCharacter((character) => ({ ...character, moves: newMoves })); // set array back\n    }\n  };\n\n  //TODO, MAKE THIS A RADIO SELECTION WITH DETAILS FOR DIFFERENT LEVELS\n  //REPLACE EXISTING OPTION ON SELECTION\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleCancel}\n      aria-labelledby='form-dialog-title'>\n      <DialogTitle id='form-dialog-title'>Add new move</DialogTitle>{' '}\n      <DialogContent>\n        <DialogContentText>Search for an move to add.</DialogContentText>\n        <Autocomplete\n          freeSolo\n          onChange={(event, value) => setMove(value)}\n          options={class_details[dwc].starting_moves.map(\n            (option) => option.name\n          )}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label='Moves'\n              margin='normal'\n              variant='outlined'\n            />\n          )}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color='primary'>\n          Cancel\n        </Button>\n        <Button onClick={handleSave} color='primary'>\n          Add Move\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useMemo, useState } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport AddMoveState from 'components/contexts/AddMoveState';\nimport AddMove from 'components/character/AddMove';\nimport { class_moves } from 'data/classMoves';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  IconButton,\n} from '@material-ui/core';\nimport { Add, Delete, ExpandMore } from '@material-ui/icons';\n\nexport default function CharacterClassStartingMoves() {\n  const { character, setCharacter } = useContext(CharacterState);\n  function getMove(move, field) {\n    return class_moves.find((x) => x.name === move)[field];\n  }\n  const [open, setOpen] = useState(false);\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\n\n  const deleteMove = (index) => {\n    const newMoves = [...character.moves]; // copying the old array\n    if (character.moves.length !== 1) {\n      //TODO don't delete if starting move\n      newMoves.splice(index, 1); // remove item from array\n      setCharacter((character) => ({ ...character, moves: newMoves })); // set array back\n    } else {\n      alert('Cannot delete starting move');\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <AddMoveState.Provider value={ctx}>\n        <AddMove />\n      </AddMoveState.Provider>\n      {character.moves.map((data, index) => {\n        return (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              {data} ({getMove(data, 'level')})\n            </AccordionSummary>\n            <AccordionDetails>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: getMove(data, 'description'),\n                }}></p>\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n      <Accordion textAlign='center'>\n        <AccordionSummary>\n          <IconButton aria-label='add' onClick={handleClickOpen}>\n            <Add />\n          </IconButton>\n        </AccordionSummary>\n      </Accordion>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Box, Tab, Tabs } from '@material-ui/core';\nimport CharacterStandardMoves from 'components/character/CharacterStandardMoves';\nimport CharacterAdvancedMoves from 'components/character/CharacterAdvancedMoves';\nimport CharacterClassMoves from 'components/character/CharacterClassMoves';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}>\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function CharacterMoves() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleTabChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Tabs value={value} onChange={handleTabChange}>\n          <Tab label='Standard' {...a11yProps(0)} />\n          <Tab label='Advanced' {...a11yProps(1)} />\n          <Tab label='Class' {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <CharacterStandardMoves />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <CharacterAdvancedMoves />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <CharacterClassMoves />\n      </TabPanel>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: 126,\n    textAlign: 'center',\n  },\n  textField: {\n    width: 126,\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n}));\n\nexport default function DiceRoller() {\n  const [dice, setDice] = useState();\n  const [diceNum, setDiceNum] = useState();\n  const [rollResult, setRollResult] = useState(0);\n  const classes = useStyles();\n\n  function singleRoll(sides) {\n    const roll = Math.floor(Math.random() * sides) + 1;\n    return roll;\n  }\n\n  function rollDice(sides, diceNum) {\n    sides = parseInt(sides, 10);\n    diceNum = parseInt(diceNum, 10);\n    let total = 0;\n    for (let i = 0; i < diceNum; i++) {\n      total = total + singleRoll(sides);\n    }\n    return setRollResult(total);\n  }\n\n  return (\n    <>\n      <FormControl\n        variant='outlined'\n        size='small'\n        className={classes.formControl}>\n        <InputLabel>Dice</InputLabel>\n        <Select\n          tabIndex={-1}\n          defaultValue='null'\n          label='dice'\n          onChange={(event) => {\n            setDice(event.target.value);\n          }}>\n          <MenuItem disabled='disabled' value='null' hidden='hidden' />\n          <MenuItem value='6'>d6</MenuItem>\n          <MenuItem value='8'>d8</MenuItem>\n          <MenuItem value='10'>d10</MenuItem>\n        </Select>\n      </FormControl>\n      <br />\n      <FormControl\n        variant='outlined'\n        size='small'\n        className={classes.formControl}>\n        <InputLabel>Number</InputLabel>\n        <Select\n          tabIndex={-1}\n          defaultValue='null'\n          label='Number'\n          onChange={(event) => {\n            setDiceNum(event.target.value);\n          }}>\n          <MenuItem disabled='disabled' value='null' hidden='hidden' />\n          <MenuItem value='1'>1</MenuItem>\n          <MenuItem value='2'>2</MenuItem>\n          <MenuItem value='3'>3</MenuItem>\n        </Select>\n      </FormControl>\n      <Button onClick={() => rollDice(dice, diceNum)}>Roll</Button>\n      <TextField\n        variant='outlined'\n        size='small'\n        label='Result'\n        className={classes.textField}\n        value={rollResult}\n      />\n    </>\n  );\n}\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useContext,\n  useMemo,\n} from 'react';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport PropTypes from 'prop-types';\nimport CharacterState from 'components/contexts/CharacterState';\nimport AuthState from 'components/contexts/AuthState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Box, Tab, Tabs } from '@material-ui/core';\nimport CharacterSheetHeader from 'components/character/CharacterSheetHeader';\nimport CharacterBasicDetails from 'components/character/CharacterBasicDetails';\nimport CharacterBasicStats from 'components/character/CharacterBasicStats';\nimport CharacterAbilities from 'components/character/CharacterAbilities';\nimport CharacterBonds from 'components/character/CharacterBonds';\nimport CharacterGear from 'components/character/CharacterGear';\nimport CharacterClassFeatures from 'components/character/CharacterClassFeatures';\nimport CharacterMoves from 'components/character/CharacterMoves';\nimport DiceRoller from 'components/other/DiceRoller';\n\n// Tab functions\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}>\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\n// Debounce function\nconst debounce = (callback, delay) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => callback(...args), delay);\n  };\n};\n\nexport default function CharacterSheet() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [character, setCharacter] = useState({});\n  const { campaignURL, characterURL } = useParams();\n  const { currentUser } = useContext(AuthState);\n\n  const handleTabChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  // Subscribe to Character Data\n  useEffect(() => {\n    if (campaignURL && characterURL) {\n      const unsubscribe = FirebaseService.streamCharacter(\n        campaignURL,\n        characterURL,\n        {\n          next: (documentSnapshot) => {\n            setCharacter(documentSnapshot.data());\n          },\n          error: (error) => {\n            alert('Failed to load character data correctly, see console error');\n            console.error('Error loading document:', error);\n          },\n        }\n      );\n      return unsubscribe;\n    }\n  }, [campaignURL, characterURL, setCharacter]);\n\n  // Debounced Save\n  const debouncedSave = useCallback(\n    debounce(\n      (character) =>\n        FirebaseService.saveCharacter(campaignURL, characterURL, character)\n          .then(() => {\n            console.info('Saved Character:', character);\n          })\n          .catch((error) => {\n            alert('Failed to save character data correctly, see console error');\n            console.error('Error saving document:', error);\n          }),\n      5000\n    ),\n    []\n  );\n\n  // Save changes to character\n  useEffect(() => {\n    if (\n      character &&\n      Object.keys(character).length >= 1 &&\n      currentUser.email === character.owner\n    ) {\n      console.info('CharacterState:', character);\n      debouncedSave(character);\n    }\n  }, [character]); //Only trigger effect on change of character\n\n  const ctx = useMemo(() => ({ character, setCharacter }), [character]); //Memo-ised state for performance\n\n  return (\n    <CharacterState.Provider value={ctx}>\n      <CharacterSheetHeader />\n      <br />\n      <div className={classes.root}>\n        <CharacterBasicStats />\n        <br />\n        <CharacterAbilities />\n        <br />\n        <AppBar position='static'>\n          <Tabs value={value} onChange={handleTabChange}>\n            <Tab label='About' {...a11yProps(0)} />\n            <Tab label='Bonds' {...a11yProps(1)} />\n            <Tab label='Features' {...a11yProps(2)} />\n            <Tab label='Gear' {...a11yProps(3)} />\n            <Tab label='Moves' {...a11yProps(4)} />\n            <Tab label='Dice Roller' {...a11yProps(5)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <CharacterBasicDetails />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <CharacterBonds />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <CharacterClassFeatures />\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          <CharacterGear />\n        </TabPanel>\n        <TabPanel value={value} index={4}>\n          <CharacterMoves />\n        </TabPanel>\n        <TabPanel value={value} index={5}>\n          <DiceRoller />\n        </TabPanel>\n      </div>\n    </CharacterState.Provider>\n  );\n}\n","import { createContext } from 'react';\n\nconst CampaignState = createContext();\n\nexport default CampaignState;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { Breadcrumbs } from '@material-ui/core';\n\nexport default function CampaignHeader() {\n  const { campaignURL } = useParams();\n\n  return (\n    <div>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <Link to='/dw-react'>Home</Link>\n        <p>{campaignURL}</p>\n      </Breadcrumbs>\n      <h1>Campaign: {campaignURL}</h1>\n    </div>\n  );\n}\n","import { createContext } from 'react';\n\nconst CreateCharacterState = createContext();\n\nexport default CreateCharacterState;\n","import React, { useContext, useState } from 'react';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport AuthState from 'components/contexts/AuthState';\nimport CreateCharacterState from 'components/contexts/CreateCharacterState';\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogContent,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormLabel,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  Step,\n  Stepper,\n  StepLabel,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { class_details } from 'data/classDetails';\nimport { dw_classes } from 'data/dwClasses';\nimport { items } from 'data/items';\nimport { class_moves } from 'data/classMoves';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return [\n    'Choose Class & Alignment',\n    'Create Name',\n    'Choose Race & Race Move',\n    'Select Gear',\n    'Select Class Moves',\n    'Add Bonds',\n  ];\n}\n\nexport default function CampaignDetails() {\n  const classes = useStyles();\n  const { open, setOpen } = useContext(CreateCharacterState);\n  const { currentUser } = useContext(AuthState);\n  const { campaignURL } = useParams();\n  const [charaName, setCharaName] = useState('');\n  const [charaFullName, setCharaFullName] = useState('');\n  const [charaClass, setCharaClass] = useState('');\n  const [charaRace, setCharaRace] = useState('');\n  const [charaAlignment, setCharaAlignment] = useState('');\n  const [charaRaceMove, setCharaRaceMove] = useState('');\n  const [charaMoveOption, setCharaMoveOption] = useState([]);\n  const [charaGearOption, setCharaGearOption] = useState([]);\n  const [charaBonds, setCharaBonds] = useState([]);\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleBondChange = (event) => {\n    let target = event.target;\n    if (target.checked) {\n      //add to array\n      const newBonds = [...charaBonds, target.name]; // copying the old array and adding item\n      setCharaBonds(newBonds); // set array back\n    } else {\n      //remove from array\n      let newBonds = charaBonds.filter((bond) => bond !== target.name); // copying the old array\n      setCharaBonds(newBonds); // set array back\n    }\n  };\n\n  const handleCancel = () => {\n    setCharaName('');\n    setCharaClass('');\n    setCharaRace('');\n    setCharaAlignment('');\n    setCharaRaceMove('');\n    setCharaBonds([]);\n    setCharaMoveOption([]);\n    setCharaGearOption([]);\n    setCharaFullName('');\n    setActiveStep(0);\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    saveCharacter();\n    handleCancel();\n  };\n\n  const alignmentAttribute = () => {\n    if (charaClass && charaAlignment) {\n      return class_details[charaClass].alignments.find(\n        (x) => x.alignment === charaAlignment\n      ).attribute;\n    } else {\n      return '';\n    }\n  };\n\n  const classDescription = () => {\n    if (charaClass) {\n      return class_details[charaClass].description;\n    } else {\n      return '';\n    }\n  };\n\n  const suggestedNames = () => {\n    return class_details[charaClass].suggested_names;\n  };\n\n  const gearOptions = () => {\n    const gear = class_details[charaClass].starting_gear_details;\n    //const gear_options = class_details[charaClass].starting_gear_options;\n    return <p dangerouslySetInnerHTML={{ __html: gear }} />;\n  };\n\n  function moveDescription(move) {\n    const description = class_moves.find((x) => x.name === move).description;\n    return description;\n  }\n\n  const moveOptions = () => {\n    const moves = class_details[charaClass].starting_move_options;\n    if (moves.length > 0) {\n      return (\n        <FormControl component='fieldset' className={classes.formControl}>\n          <RadioGroup\n            aria-label='starting move choice'\n            name='starting move choice'\n            value={charaMoveOption}\n            onChange={(event) => setCharaMoveOption(event.target.value)}>\n            {moves.map((move, index) => {\n              return (\n                <FormControlLabel\n                  key={index}\n                  value={move}\n                  control={<Radio />}\n                  label={move + ' - ' + moveDescription(move)}\n                />\n              );\n            })}\n          </RadioGroup>\n        </FormControl>\n      );\n    } else {\n      return <p>No move choices to make</p>;\n    }\n  };\n\n  const saveCharacter = () => {\n    if (\n      campaignURL &&\n      charaName &&\n      charaClass &&\n      charaAlignment &&\n      charaRace &&\n      charaRaceMove\n    ) {\n      const startingFunds = String(class_details[charaClass].starting_funds);\n      let startingMoves = class_details[charaClass].starting_moves;\n      if (charaMoveOption.length > 0) {\n        startingMoves = [...startingMoves, charaMoveOption];\n      }\n      const startingGear = class_details[charaClass].starting_gear.map(\n        (item) =>\n          Object.assign(\n            {},\n            items.find((x) => x.name === item),\n            { checkbox: false }\n          ) // Finding Item and adding blank checkbox\n      );\n\n      // SAVE FUNCTION\n      FirebaseService.saveCharacter(campaignURL, charaName, {\n        abilities: [\n          { category: 'STR', score: '1', affliction: 'Unafflicted' },\n          { category: 'DEX', score: '1', affliction: 'Unafflicted' },\n          { category: 'CON', score: '1', affliction: 'Unafflicted' },\n          { category: 'INT', score: '1', affliction: 'Unafflicted' },\n          { category: 'WIS', score: '1', affliction: 'Unafflicted' },\n          { category: 'CHA', score: '1', affliction: 'Unafflicted' },\n        ],\n        alignment: charaAlignment,\n        armour: '0',\n        backstory: '',\n        bonds: charaBonds,\n        class_features: [],\n        dw_class: charaClass,\n        full_name: charaFullName,\n        funds: startingFunds,\n        hp: '',\n        items: startingGear,\n        level: '1',\n        look: '',\n        moves: startingMoves,\n        owner: currentUser.email,\n        race: charaRace,\n        race_move: charaRaceMove,\n        xp: '0',\n      })\n        .then(() => {\n          console.info('Created Character:', charaName);\n        })\n        .catch((error) => {\n          alert('Failed to create character, see console error');\n          console.error('Error creating document:', error);\n        });\n    } else {\n      alert('Cannot save blank character');\n    }\n  };\n\n  function getStepContent(stepIndex) {\n    switch (stepIndex) {\n      case 0:\n        return (\n          <div>\n            <div>\n              <Typography component={'span'} className={classes.instructions}>\n                <FormControl variant='outlined' className={classes.formControl}>\n                  <InputLabel>Class</InputLabel>\n                  <Select\n                    label='Class'\n                    value={charaClass}\n                    name='class'\n                    onChange={(event) => {\n                      setCharaAlignment('');\n                      setCharaMoveOption([]);\n                      setCharaBonds([]);\n                      setCharaGearOption([]);\n                      setCharaRaceMove('');\n                      setCharaClass(event.target.value);\n                    }}>\n                    {dw_classes.map((data, index) => {\n                      return (\n                        <MenuItem value={data} key={index}>\n                          {data}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                  <p dangerouslySetInnerHTML={{ __html: classDescription() }} />\n                </FormControl>\n                <br />\n                <FormControl variant='outlined' className={classes.formControl}>\n                  <InputLabel>Alignment</InputLabel>\n                  <Select\n                    label='Alignment'\n                    value={charaAlignment}\n                    name='alignment'\n                    onChange={(event) => setCharaAlignment(event.target.value)}>\n                    {charaClass &&\n                      class_details[charaClass].alignments.map(\n                        (data, index) => {\n                          return (\n                            <MenuItem value={data.alignment} key={index}>\n                              {data.alignment}\n                            </MenuItem>\n                          );\n                        }\n                      )}\n                  </Select>\n                  <p\n                    dangerouslySetInnerHTML={{ __html: alignmentAttribute() }}\n                  />\n                </FormControl>\n              </Typography>\n            </div>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.backButton}>\n              Back\n            </Button>\n            {charaClass && charaAlignment ? (\n              <Button variant='contained' color='primary' onClick={handleNext}>\n                Next\n              </Button>\n            ) : (\n              <Button disabled variant='contained' color='primary'>\n                Next\n              </Button>\n            )}\n          </div>\n        );\n      case 1:\n        return (\n          <div>\n            <div>\n              <Typography component={'span'} className={classes.instructions}>\n                <TextField\n                  autoFocus={true}\n                  margin='dense'\n                  id='full name'\n                  label='Character Name'\n                  placeholder=\"Your character's full name, titles and all\"\n                  value={charaFullName}\n                  fullWidth\n                  onChange={(event) => setCharaFullName(event.target.value)}\n                />\n                <TextField\n                  autoFocus={false}\n                  margin='dense'\n                  id='name'\n                  label='Short Character Name'\n                  placeholder=\"Your character's preferred name\"\n                  value={charaName}\n                  fullWidth\n                  onChange={(event) => setCharaName(event.target.value)}\n                />\n                <p>Suggested Names: </p>\n                <p dangerouslySetInnerHTML={{ __html: suggestedNames() }} />\n              </Typography>\n            </div>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.backButton}>\n              Back\n            </Button>\n            {charaName && charaFullName ? (\n              <Button variant='contained' color='primary' onClick={handleNext}>\n                Next\n              </Button>\n            ) : (\n              <Button disabled variant='contained' color='primary'>\n                Next\n              </Button>\n            )}\n          </div>\n        );\n      case 2:\n        return (\n          <div>\n            <div>\n              <Typography component={'span'} className={classes.instructions}>\n                <TextField\n                  autoFocus={true}\n                  margin='dense'\n                  id='race'\n                  label='Race'\n                  value={charaRace}\n                  placeholder='e.g. Dwarf, Elf, Goblin, Halfling, Human'\n                  fullWidth\n                  onChange={(event) => setCharaRace(event.target.value)}\n                />\n                <br />\n                <FormControl\n                  component='fieldset'\n                  className={classes.formControl}>\n                  <RadioGroup\n                    aria-label='race move'\n                    name='race move'\n                    value={charaRaceMove}\n                    onChange={(event) => setCharaRaceMove(event.target.value)}>\n                    {charaClass &&\n                      class_details[charaClass].race_moves.map(\n                        (data, index) => {\n                          return (\n                            <FormControlLabel\n                              key={index}\n                              value={data.move}\n                              control={<Radio />}\n                              label={data.move + ' (' + data.race + ')'}\n                            />\n                          );\n                        }\n                      )}\n                  </RadioGroup>\n                </FormControl>\n              </Typography>\n            </div>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.backButton}>\n              Back\n            </Button>\n            {charaRace && charaRaceMove ? (\n              <Button variant='contained' color='primary' onClick={handleNext}>\n                Next\n              </Button>\n            ) : (\n              <Button disabled variant='contained' color='primary'>\n                Next\n              </Button>\n            )}\n          </div>\n        );\n      case 3:\n        return (\n          <div>\n            <div>\n              <Typography component={'span'} className={classes.instructions}>\n                {gearOptions()}\n              </Typography>\n            </div>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.backButton}>\n              Back\n            </Button>\n            {charaClass && charaAlignment ? (\n              <Button variant='contained' color='primary' onClick={handleNext}>\n                Next\n              </Button>\n            ) : (\n              <Button disabled variant='contained' color='primary'>\n                Next\n              </Button>\n            )}\n          </div>\n        );\n      case 4:\n        return (\n          <div>\n            <div>\n              <Typography component={'span'} className={classes.instructions}>\n                {moveOptions()}\n              </Typography>\n            </div>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.backButton}>\n              Back\n            </Button>\n            {charaMoveOption ? (\n              <Button variant='contained' color='primary' onClick={handleNext}>\n                Next\n              </Button>\n            ) : (\n              <Button disabled variant='contained' color='primary'>\n                Next\n              </Button>\n            )}\n          </div>\n        );\n      case 5:\n        return (\n          <div>\n            <div>\n              <Typography component={'span'} className={classes.instructions}>\n                <div className={classes.root}>\n                  <FormControl\n                    component='fieldset'\n                    className={classes.formControl}>\n                    <FormLabel component='legend'>\n                      Choose some optionally suggested bonds or you can create\n                      your own!\n                    </FormLabel>\n                    <FormGroup>\n                      {charaClass &&\n                        class_details[charaClass].suggested_bonds.map(\n                          (data, index) => {\n                            return (\n                              <FormControlLabel\n                                key={index}\n                                control={\n                                  <Checkbox\n                                    key={index}\n                                    onChange={handleBondChange}\n                                    color='primary'\n                                    name={data}\n                                  />\n                                }\n                                label={data}\n                              />\n                            );\n                          }\n                        )}\n                    </FormGroup>\n                  </FormControl>\n                </div>\n              </Typography>\n            </div>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.backButton}>\n              Back\n            </Button>\n            {campaignURL ? (\n              <Button variant='contained' color='primary' onClick={handleSave}>\n                Create Character\n              </Button>\n            ) : (\n              <Button\n                disabled\n                variant='contained'\n                color='primary'\n                onClick={handleSave}>\n                Create Character\n              </Button>\n            )}\n          </div>\n        );\n      default:\n        return 'Unknown stepIndex';\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleCancel}>\n      <DialogContent>\n        <div className={classes.root}>\n          <Stepper activeStep={activeStep} alternativeLabel>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <div>{getStepContent(activeStep)}</div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import React, { useContext, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CampaignState from 'components/contexts/CampaignState';\nimport CreateCharacterState from 'components/contexts/CreateCharacterState';\nimport CreateCharacter from 'components/campaign/CreateCharacter';\nimport { Add, Delete } from '@material-ui/icons';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n});\n\nexport default function CampaignDetails() {\n  const classes = useStyles();\n  const { campaign } = useContext(CampaignState);\n  const { campaignURL } = useParams();\n  const [open, setOpen] = useState(false);\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  // Delete Character\n  const deleteCharacter = (campaign, character) => {\n    if (campaign && character) {\n      //don't save unless details present\n      FirebaseService.deleteCharacter(campaign, character)\n        .then(() => {\n          console.info('Deleted Character:', character);\n        })\n        .catch((error) => {\n          alert('Failed to delete character, see console error');\n          console.error('Error deleting document:', error);\n        });\n    } else {\n      alert('Cannot delete blank character');\n    }\n  };\n\n  return (\n    <CreateCharacterState.Provider value={ctx}>\n      <Grid className={classes.root} spacing={2}>\n        <Grid item xs={12}>\n          <Grid container justify='center' spacing={1}>\n            {campaign.campaign &&\n              campaign.campaign.map((campaign, index) => {\n                return (\n                  <Grid item key={index}>\n                    <Card className={classes.root}>\n                      <CardHeader\n                        action={\n                          <IconButton\n                            aria-label='delete'\n                            onClick={() =>\n                              deleteCharacter(campaignURL, campaign.character)\n                            }>\n                            <Delete />\n                          </IconButton>\n                        }\n                        title={\n                          <Link\n                            to={\n                              '/dw-react/' +\n                              campaignURL +\n                              '/' +\n                              campaign.character\n                            }>\n                            {campaign.character}\n                          </Link>\n                        }\n                        subheader={campaign.characterData.owner}\n                      />\n                      <CardContent>\n                        <Typography variant='body1' component='p'>\n                          Level {campaign.characterData.level}\n                        </Typography>\n                        <Typography variant='body1' component='p'>\n                          {campaign.characterData.dw_class}\n                        </Typography>\n                        <Typography variant='body1' component='p'>\n                          {campaign.characterData.race}\n                        </Typography>\n                        <Typography variant='body1' component='p'>\n                          {campaign.characterData.alignment}\n                        </Typography>\n                        <br />\n                        <Typography variant='body2' component='p'>\n                          HP: {campaign.characterData.hp}\n                        </Typography>\n                        <Typography variant='body2' component='p'>\n                          XP: {campaign.characterData.xp}\n                        </Typography>\n                        <Typography variant='body2' component='p'>\n                          Funds: {campaign.characterData.funds}\n                        </Typography>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                );\n              })}\n            <Grid item>\n              <Card className={classes.root}>\n                <CardHeader textAlign='center' title='Add Character' />\n                <CardContent textAlign='center'>\n                  <IconButton aria-label='add' onClick={handleClickOpen}>\n                    <Add />\n                  </IconButton>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <CreateCharacter />\n    </CreateCharacterState.Provider>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CampaignState from 'components/contexts/CampaignState';\nimport CampaignHeader from 'components/campaign/CampaignHeader';\nimport CampaignDetails from 'components/campaign/CampaignDetails';\n\nexport default function CampaignSheet() {\n  const [campaign, setCampaign] = useState({});\n  const { campaignURL } = useParams();\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    if (campaignURL) {\n      const unsubscribe = FirebaseService.streamCharacters(campaignURL, {\n        next: (querySnapshot) => {\n          const updatedCharacterList = querySnapshot.docs.map((docSnapshot) => {\n            return {\n              character: docSnapshot.id,\n              characterData: docSnapshot.data(),\n            };\n          });\n          setCampaign((campaign) => ({ campaign: updatedCharacterList }));\n        },\n        error: (error) => {\n          alert('Failed to load campaign data correctly, see console error');\n          console.error('Error loading document:', error);\n        },\n      });\n      return unsubscribe;\n    }\n  }, [campaignURL, setCampaign]);\n\n  useEffect(() => {\n    console.info('Campaign State:', campaign);\n  }, [campaign]); //Only log to console if state actually changes\n\n  const ctx = useMemo(() => ({ campaign, setCampaign }), [campaign]); //Memo-ised state for performance\n\n  return (\n    <CampaignState.Provider value={ctx}>\n      <CampaignHeader />\n      <br />\n      <CampaignDetails />\n    </CampaignState.Provider>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Container, Typography } from '@material-ui/core';\nimport ErrorPage from 'components/ErrorPage';\nimport Homepage from 'components/homepage/Homepage';\nimport AppHeader from 'components/AppHeader';\nimport CharacterSheet from 'components/character/CharacterSheet';\nimport Campaign from 'components/campaign/Campaign';\nimport '@fontsource/roboto';\n\nexport default function App() {\n  return (\n    <Typography component={'span'}>\n      <Container>\n        <Router>\n          <AppHeader />\n          <Switch>\n            <Route\n              exact={true}\n              path='/dw-react/:campaignURL/:characterURL'\n              component={CharacterSheet}\n            />\n            <Route\n              exact={true}\n              path='/dw-react/:campaignURL'\n              component={Campaign}\n            />\n            <Route exact={true} path='/dw-react' component={Homepage} />\n            <Route component={ErrorPage} />\n          </Switch>\n        </Router>\n      </Container>\n    </Typography>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport * as FirebaseService from 'services/firebase';\nimport AuthState from 'components/contexts/AuthState';\nimport { Button } from '@material-ui/core';\n\nfunction Index() {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const ctx = useMemo(() => ({ currentUser }), [currentUser]);\n\n  useEffect(() => {\n    const unsubscribe = FirebaseService.auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n\n  return (\n    <AuthState.Provider value={ctx}>\n      {currentUser ? (\n        <App />\n      ) : (\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={FirebaseService.SignInWithGoogle}>\n          SIGN IN WITH GOOGLE\n        </Button>\n      )}\n    </AuthState.Provider>\n  );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Index />, rootElement);\n"],"sourceRoot":""}