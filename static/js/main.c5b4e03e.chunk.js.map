{"version":3,"sources":["components/ErrorPage.js","components/NavSidebar.js","components/ProfilePicture.js","components/ProfileDetails.js","components/UserProfile.js","components/AppHeader.js","components/contexts/CharacterState.js","components/SheetHeader.js","components/CharacterDetailsTable.js","components/CharacterTypeTable.js","components/Level.js","components/XP.js","components/BasicAttributesTable.js","components/Damage.js","components/Armour.js","components/Funds.js","components/HP.js","components/ExtraAttributes.js","components/AbilitiesTable.js","components/BondsTable.js","components/GearTable.js","components/ClassFeaturesTable.js","components/CharacterSheet.js","components/App.js","services/firebase.js","index.js"],"names":["ErrorPage","NavSidebar","to","ProfilePicture","props","className","id","src","currentUser","photoURL","alt","ProfileDetails","displayName","email","UserProfile","useState","AppHeader","CharacterState","React","createContext","SheetHeader","useContext","character","charaName","owner","CharacterDetailsTable","setCharacter","style","htmlFor","placeholder","value","backstory","onChange","event","target","look","CharacterTypeTable","dwc","dwClass","alig","alignment","race","tabIndex","disabled","hidden","dwClasses","map","data","key","races","readOnly","classDetails","raceAttributes","alignments","alignmentAttributes","Level","type","min","level","XP","xp","parseInt","BasicAttributesTable","Damage","damage","Armour","armour","Funds","funds","HP","colSpan","hp","abilities","baseHp","find","x","category","score","ExtraAttributes","AbilitiesTable","updateAbilityScore","index","e","newAbilities","updateAbilityAffliction","affliction","max","ab","abilityAfflictions","BondsTable","updateBond","newBonds","bonds","bond","onClick","addBondsRow","length","splice","alert","deleteBondRow","GearTable","updateItem","newItems","gear","item","updateItemWeight","weight","addItemRow","deleteItemRow","reduce","totalLoad","baseLoad","ClassFeaturesTable","updateFeatureCheckbox","newFeatures","classFeatures","checkbox","checked","updateFeature","feature","addFeatureRow","deleteFeatureRow","CharacterSheet","campaign","useParams","console","log","useEffect","Provider","App","path","children","component","firebase","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","auth","provider","firestore","GoogleAuthProvider","SignInWithGoogle","signInWithPopup","setCustomParameters","prompt","AuthContext","Index","unsubscribeFromAuth","state","this","FirestoreService","onAuthStateChanged","user","setState","signOut","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c5b4e03e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction ErrorPage() {\r\n  return (\r\n      <h1>Oops! Page not found!</h1>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction NavSidebar() {\r\n  return (    <div>\r\n      <Link to=\"/\">Home </Link>\r\n      <Link to=\"/about\">About Us </Link>\r\n      <Link to=\"/shop\">Shop Now </Link>\r\n    </div>);\r\n}\r\n\r\nexport default NavSidebar\r\n","import React from 'react';\r\n\r\nfunction ProfilePicture(props) {\r\n  return (<img\r\n    className=\"profPicture\"\r\n    id=\"userPicture\"\r\n    src={props.currentUser.photoURL}\r\n    alt={props.currentUser.photoURL}/>);\r\n}\r\n\r\nexport default ProfilePicture;\r\n","import React from 'react';\r\n\r\nfunction ProfileDetails(props) {\r\n    return (<div className=\"profDetails\">\r\n    <div>Google Account</div>\r\n    <div id=\"userName\">{props.currentUser.displayName}</div>\r\n    <div id=\"userEmail\">{props.currentUser.email}</div>\r\n  </div>);\r\n}\r\n\r\nexport default ProfileDetails;\r\n","import React, {useState} from 'react';\r\nimport ProfilePicture from './ProfilePicture';\r\nimport ProfileDetails from './ProfileDetails';\r\n\r\nfunction UserProfile(props) {\r\n  const [hidden, setHidden] = useState(true);\r\n  return (<div>\r\n    <ProfilePicture currentUser={props.currentUser}/>\r\n    <ProfileDetails currentUser={props.currentUser}/>\r\n  </div>);\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from 'react';\r\n\r\nfunction AppHeader() {\r\n  return (\r\n      <div>\r\n        <h2>Dungeon World Character Sheet</h2>\r\n        <p>\r\n          <i>v1.0.0-alpha by Godmar02</i>\r\n        </p>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\n\r\nconst CharacterState = React.createContext([{}, () => {}]);\r\n\r\nexport default CharacterState;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction SheetHeader() {\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (\r\n    <div>\r\n      <div>Adventure: {character.charaName} ({character.owner})</div>\r\n    </div>);\r\n}\r\n\r\nexport default SheetHeader;\r\n","import React, {useContext, useEffect} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction CharacterDetailsTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (<table style={{\"width\" : \"100%\"}} id=\"basicInfoTable\">\r\n    <tbody>\r\n      <tr>\r\n        <th style={{\"width\" : \"25%\"}}>\r\n          <label htmlFor=\"backstory\">BACKSTORY</label>\r\n        </th>\r\n        <td>\r\n          <textarea placeholder=\"Describe your character's backstory and anything else about your characters identity here\" value={character.backstory} onChange={event => setCharacter(character => ({...character,backstory: event.target.value}))}/>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th style={{\"width\" : \"25%\"}}>\r\n          <label htmlFor=\"look\">LOOK</label>\r\n        </th>\r\n        <td>\r\n          <textarea placeholder=\"Describe your character's appearance here\" value={character.look} onChange={event => setCharacter(character => ({...character,look: event.target.value}))}/>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>);\r\n}\r\n\r\nexport default CharacterDetailsTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\nimport {races} from '../data/raceList';\r\nimport {dwClasses} from '../data/classList';\r\nimport {alignments} from '../data/classAlignments';\r\nimport {classDetails} from '../data/classDetails';\r\n\r\nfunction CharacterTypeTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n  const dwc = character.dwClass;\r\n  const alig = character.alignment;\r\n  const race = character.race;\r\n\r\n  const raceAttributes = () => {\r\n    if (character.dwClass && character.race) {\r\n      return (classDetails.[dwc].raceAttributes.[race]);\r\n    } else {\r\n      return ('');\r\n    }\r\n  };\r\n\r\n  const alignmentAttributes = () => {\r\n    if (character.dwClass && character.alignment) {\r\n      return (classDetails.[dwc].alignmentAttributes.[alig]);\r\n    } else {\r\n      return ('');\r\n    }\r\n  };\r\n\r\n  return (\r\n  <table style={{\"width\" : \"100%\"}} id=\"additionalInfoTable\">\r\n    <tbody>\r\n      <tr>\r\n        <th>\r\n          <label style={{\"width\" : \"25%\"}} htmlFor=\"dwClass\">CLASS</label>\r\n        </th>\r\n        <td style={{\"width\" : \"25%\"}}>\r\n          <select\r\n            tabIndex={-1}\r\n            value={character.dwClass || \"null\"}\r\n            onChange={event => {\r\n              setCharacter(character => ({...character,dwClass: event.target.value}));\r\n              setCharacter(character => ({...character,alignment: \"null\"}))}}>\r\n            <option disabled value=\"null\" hidden />\r\n            {\r\n              dwClasses.map((data, key) => {\r\n                return (\r\n                <option value={data} key={key}>\r\n                  {data}\r\n                </option>);\r\n              })\r\n            }\r\n            </select>\r\n        </td>\r\n        <td style={{\"width\" : \"50%\"}}/>\r\n      </tr>\r\n      <tr>\r\n        <th>\r\n          <label htmlFor=\"race\">RACE</label>\r\n        </th>\r\n        <td>\r\n          <select\r\n            tabIndex={-1}\r\n            value={character.race || \"null\"}\r\n            onChange={event => setCharacter(character => ({...character,race: event.target.value}))}>\r\n            <option disabled value=\"null\" hidden />\r\n            {\r\n              races.map((data, key) => {\r\n                return (\r\n                <option value={data} key={key}>\r\n                  {data}\r\n                </option>);\r\n              })\r\n            }\r\n          </select>\r\n        </td>\r\n        <td>\r\n          <textarea className=\"grey\" readOnly=\"readOnly\" value={raceAttributes()}/>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>\r\n          <label htmlFor=\"alignment\">ALIGNMENT</label>\r\n        </th>\r\n        <td>\r\n          <select\r\n            tabIndex={-1}\r\n            value={character.alignment || \"null\"}\r\n            onChange={event => setCharacter(character => ({...character,alignment: event.target.value}))}>\r\n            <option disabled value=\"null\" hidden />\r\n            {\r\n              character.dwClass && alignments.[dwc].map((data, key) => {\r\n              return (\r\n              <option value={data} key={key}>\r\n                {data}\r\n              </option>);})\r\n            }\r\n          </select>\r\n        </td>\r\n        <td>\r\n          <textarea className=\"grey\" readOnly=\"readOnly\" value={alignmentAttributes()}/>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>);\r\n}\r\n\r\nexport default CharacterTypeTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction Level() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <th>\r\n            <label htmlFor=\"level\">LEVEL</label>\r\n          </th>\r\n          <td>\r\n            <input type=\"number\" min={1} className=\"shortfield\" id=\"level\" value={character.level || ''} onChange={event => setCharacter(character => ({...character,level: event.target.value}))}/>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>);\r\n}\r\n\r\nexport default Level;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction XP() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <th>\r\n            <label htmlFor=\"xp\">XP</label>\r\n          </th>\r\n          <td>\r\n            <input type=\"number\" min={0} className=\"shortfield\" id=\"xp\" value={character.xp || ''} onChange={event => setCharacter(character => ({...character,xp: event.target.value}))}/>\r\n          </td>\r\n          <td>\r\n            <input type=\"text\" className=\"shortfield grey\" readOnly=\"readOnly\" value={\"/ \" + (parseInt(character.level,10) + 7) || ''} />\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>);\r\n}\r\n\r\nexport default XP;\r\n","import React from 'react';\r\nimport Level from './Level'\r\nimport XP from './XP'\r\n\r\nfunction BasicAttributesTable() {\r\n\r\n  return (\r\n    <div className='myForm'>\r\n        <div><Level/></div>\r\n        <div><XP/></div>\r\n    </div>);\r\n}\r\n\r\nexport default BasicAttributesTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\nimport {classDetails} from '../data/classDetails';\r\n\r\nfunction Damage() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n  const dwc = character.dwClass;\r\n\r\n  const damage = () => {\r\n    if (character.dwClass) {\r\n      return (classDetails.[dwc].damage);\r\n    } else {\r\n      return ('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table id=\"damage\">\r\n      <thead>\r\n        <tr>\r\n          <th>\r\n            <label htmlFor=\"damage\">DAMAGE</label>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type=\"text\" className=\"shortfield grey\" readOnly=\"readOnly\" value={damage()}/>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Damage;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction Armour() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (\r\n    <table id=\"armour\">\r\n      <thead>\r\n        <tr>\r\n          <th>\r\n            <label htmlFor=\"armour\">ARMOUR</label>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type=\"number\" min={0} className=\"shortfield\" id=\"armour\" value={character.armour || ''} onChange={event => setCharacter(character => ({...character,armour: event.target.value}))}/>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Armour;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction Funds() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  return (\r\n    <table id=\"funds\">\r\n      <thead>\r\n        <tr>\r\n          <th>\r\n            <label htmlFor=\"funds\">FUNDS</label>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type=\"number\" className=\"shortfield\" min={0} id=\"funds\" value={character.funds || ''} onChange={event => setCharacter(character => ({...character,funds: event.target.value}))}/>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Funds;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\nimport {classDetails} from '../data/classDetails';\r\n\r\nfunction HP() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  const dwc = character.dwClass;\r\n  const maxHp = () => {\r\n    if (character.dwClass && character.abilities) {\r\n      return (\"/ \" + (classDetails.[dwc].baseHp + parseInt(character.abilities.find(x => x.category === 'CON').score ,10)));\r\n    } else {\r\n      return ('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table id=\"hp\">\r\n      <thead>\r\n        <tr>\r\n          <th colSpan={2}>\r\n            <label htmlFor=\"hp\">HP</label>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type=\"number\" min={0} className=\"shortfield\" id=\"hp\" value={character.hp || ''} onChange={event => setCharacter(character => ({...character,hp: event.target.value}))}/>\r\n          </td>\r\n          <td>\r\n            <input type=\"text\" className=\"shortfield grey\" readOnly=\"readOnly\" value={maxHp()} />\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default HP;\r\n","import React from 'react';\r\nimport Damage from './Damage'\r\nimport Armour from './Armour'\r\nimport Funds from './Funds'\r\nimport HP from './HP'\r\n\r\nfunction ExtraAttributes() {\r\n\r\n  return (\r\n  <div className='myForm'>\r\n    <div><Damage/></div>\r\n    <div><Armour/></div>\r\n    <div><Funds/></div>\r\n    <div><HP/></div>\r\n  </div>);\r\n}\r\n\r\nexport default ExtraAttributes;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\nimport {abilityAfflictions} from '../data/abilityAfflictions';\r\n\r\nfunction AbilitiesTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  const updateAbilityScore = index => e => {\r\n    let newAbilities = [...character.abilities]; // copying the old datas array\r\n    newAbilities[index] = {...character.abilities[index], score: e.target.value}; // replace e.target.value with whatever you want to change it to\r\n    setCharacter(character => ({...character, abilities: newAbilities})); // ??\r\n  }\r\n\r\n  const updateAbilityAffliction = index => e => {\r\n    let newAbilities = [...character.abilities]; // copying the old datas array\r\n    newAbilities[index] = {...character.abilities[index], affliction: e.target.value}; // replace e.target.value with whatever you want to change it to\r\n    setCharacter(character => ({...character, abilities: newAbilities})); // ??\r\n  }\r\n\r\n  return (\r\n     <table style={{\"width\":\"100%\"}} id=\"abilitiesTable\">\r\n       <thead>\r\n         <tr>\r\n           {\r\n            character.abilities && character.abilities.map((abilities, index) => {\r\n            return (\r\n              <th key={index}>\r\n                <label\r\n                  htmlFor={abilities.category}\r\n                  value={abilities.category}\r\n                  key={index}>\r\n                  {abilities.category}\r\n                </label>\r\n              </th>)\r\n           })\r\n         }\r\n         </tr>\r\n       </thead>\r\n       <tbody>\r\n         <tr>\r\n           {\r\n            character.abilities && character.abilities.map((abilities, index) => {\r\n            return (\r\n              <td key={index}>\r\n                <input\r\n                  type=\"number\"\r\n                  min={1} max={18}\r\n                  className=\"ability\"\r\n                  value={abilities.score}\r\n                  onChange={updateAbilityScore(index)} />\r\n            </td>)\r\n           })\r\n         }\r\n         </tr>\r\n         <tr>\r\n           {\r\n            character.abilities && character.abilities.map((abilities, index) => {\r\n            return (\r\n              <td key={index}>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"grey tallfield\"\r\n                  readOnly />\r\n            </td>)\r\n           })\r\n         }\r\n         </tr>\r\n         <tr>\r\n           {\r\n            character.abilities && character.abilities.map((abilities,index) => {\r\n            const ab = abilities.category;\r\n            return (\r\n              <td key={index}>\r\n                <select\r\n                  tabIndex={-1}\r\n                  className=\"abilityAffliction\"\r\n                  value={abilities.affliction || \"null\"}\r\n                  onChange={updateAbilityAffliction(index)}>\r\n                  <option disabled value=\"null\" hidden />\r\n                    {\r\n                      abilityAfflictions.[ab].map((data, key) => {\r\n                        return (\r\n                        <option value={data} key={key}>\r\n                          {data}\r\n                        </option>);\r\n                      })\r\n                    }\r\n                </select>\r\n              </td>)\r\n           })\r\n         }\r\n         </tr>\r\n       </tbody>\r\n     </table>\r\n    );\r\n}\r\n\r\nexport default AbilitiesTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction BondsTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  // State manipulation\r\n  const updateBond = index => e => {\r\n    let newBonds = [...character.bonds]; // copying the old array\r\n    newBonds[index] = {...character.bonds[index], bond: e.target.value}; // replace value\r\n    setCharacter(character => ({...character, bonds: newBonds})); // set array back\r\n  }\r\n\r\n  // Delete rows in the table\r\n  const deleteBondRow = index => {\r\n    const newBonds = [...character.bonds]; // copying the old array\r\n    if (character.bonds.length !== 1) { //don't delete last row\r\n      newBonds.splice(index, 1); // remove item from array\r\n      setCharacter(character => ({...character, bonds: newBonds})); // set array back\r\n    } else {\r\n      alert('Cannot delete final row');\r\n    }\r\n  }\r\n\r\n  // Add rows in the table\r\n  const addBondsRow = () => {\r\n    const newBonds = [...character.bonds, {bond: \"\"}]; // copying the old array and adding blank item\r\n    setCharacter(character => ({...character, bonds: newBonds})); // set array back\r\n  }\r\n\r\n  return (\r\n    <table style={{\"width\" : \"100%\"}} id=\"bondsTable\">\r\n      <thead>\r\n        <tr>\r\n          <th style={{\"width\" : \"100%\"}}>\r\n            <label>BONDS</label>\r\n          </th>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              className=\"addRow\"\r\n              onClick={() => addBondsRow()}>\r\n              +\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n         character.bonds && character.bonds.map((bonds,index) => {\r\n         return (\r\n           <tr key={index}>\r\n               <td>\r\n                 <textarea\r\n                   placeholder=\"Add 2-3 bonds here\"\r\n                   value={bonds.bond}\r\n                   onChange={updateBond(index)}\r\n                   />\r\n               </td>\r\n               <td>\r\n                 <button\r\n                   type=\"button\"\r\n                   className=\"deleteRow\"\r\n                   onClick={() => deleteBondRow(index)}/>\r\n               </td>\r\n           </tr>)\r\n        })\r\n      }\r\n      </tbody>\r\n      <tfoot/>\r\n    </table>\r\n    );\r\n}\r\n\r\nexport default BondsTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\nimport {classDetails} from '../data/classDetails';\r\n\r\nfunction GearTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n  const dwc = character.dwClass;\r\n  const totalLoad = () => {\r\n    if (character.gear) {\r\n      return (character.gear.reduce((totalLoad,data) => totalLoad + parseInt(data.weight,10) ,0));\r\n    } else {\r\n      return ('');\r\n    }\r\n  };\r\n\r\n  const maxLoad = () => {\r\n    if (character.dwClass && character.abilities) {\r\n      return (\"/ \" + (classDetails.[dwc].baseLoad + parseInt(character.abilities.find(x => x.category === 'STR').score ,10)));\r\n    } else {\r\n      return ('');\r\n    }\r\n  };\r\n\r\n  // State manipulation\r\n  const updateItem = index => e => {\r\n    let newItems = [...character.gear]; // copying the old array\r\n    newItems[index] = {...character.gear[index], item: e.target.value}; // replace value\r\n    setCharacter(character => ({...character, gear: newItems})); // set array back\r\n  }\r\n\r\n  const updateItemWeight = index => e => {\r\n    let newItems = [...character.gear]; // copying the old array\r\n    newItems[index] = {...character.gear[index], weight: e.target.value}; // replace value\r\n    setCharacter(character => ({...character, gear: newItems})); // set array back\r\n  }\r\n\r\n  // Delete rows in the table\r\n  const deleteItemRow = index => {\r\n    const newItems = [...character.gear]; // copying the old array\r\n    if (character.gear.length !== 1) { //don't delete last row\r\n      newItems.splice(index, 1); // remove item from array\r\n      setCharacter(character => ({...character, gear: newItems})); // set array back\r\n    } else {\r\n      alert('Cannot delete final row');\r\n    }\r\n  }\r\n\r\n  // Add rows in the table\r\n  const addItemRow = () => {\r\n    const newItems = [...character.gear, {item: \"\", weight: \"\"}]; // copying the old array and adding blank item\r\n    setCharacter(character => ({...character, gear: newItems})); // set array back\r\n  }\r\n  //,\r\n\r\n  return (\r\n    <table style={{\"width\":\"100%\"}} id=\"gearTable\">\r\n      <thead>\r\n        <tr>\r\n          <th colSpan={4}><label>GEAR</label></th>\r\n        </tr>\r\n        <tr>\r\n          <th style={{\"width\":\"100%\"}}><label>ITEM</label></th>\r\n          <th colSpan={2}><label>WEIGHT</label></th>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              className=\"addRow\"\r\n              onClick={() => addItemRow()}>\r\n              +\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n         character.gear && character.gear.map((gear,index) => {\r\n         return (\r\n           <tr key={index}>\r\n               <td>\r\n                 <textarea\r\n                   placeholder=\"Add any items and descriptions here\"\r\n                   value={gear.item}\r\n                   onChange={updateItem(index)}/>\r\n               </td>\r\n               <td colSpan={2}>\r\n                 <input\r\n                   type=\"number\"\r\n                   min={0}\r\n                   value={gear.weight}\r\n                   onChange={updateItemWeight(index)}/>\r\n               </td>\r\n               <td>\r\n                 <button\r\n                   type=\"button\"\r\n                   className=\"deleteRow\"\r\n                   onClick={() => deleteItemRow(index)}/>\r\n               </td>\r\n           </tr>)\r\n        })\r\n      }\r\n      </tbody>\r\n      <tfoot>\r\n        <tr>\r\n          <th><label htmlFor=\"load\">LOAD</label></th>\r\n          <td>\r\n            <input type=\"number\" className=\"shortfield grey\" readOnly value={totalLoad()} />\r\n          </td>\r\n          <td>\r\n            <input type=\"text\" className=\"shortfield grey\" readOnly=\"readOnly\" value={maxLoad()} />\r\n          </td>\r\n          <td />\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n    );\r\n}\r\n\r\nexport default GearTable;\r\n","import React, {useContext} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\n\r\nfunction ClassFeaturesTable() {\r\n\r\n  // Accessing and adding to character using context and useEffect\r\n  const [character, setCharacter] = useContext(CharacterState);\r\n\r\n  // State manipulation\r\n  const updateFeatureCheckbox = index => e => {\r\n    let newFeatures = [...character.classFeatures]; // copying the old array\r\n    newFeatures[index] = {...character.classFeatures[index], checkbox: e.target.checked}; // replace value\r\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\r\n  }\r\n\r\n  const updateFeature = index => e => {\r\n    let newFeatures = [...character.classFeatures]; // copying the old array\r\n    newFeatures[index] = {...character.classFeatures[index], feature: e.target.value}; // replace value\r\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\r\n  }\r\n\r\n  // Delete rows in the table\r\n  const deleteFeatureRow = index => {\r\n    const newFeatures = [...character.classFeatures]; // copying the old array\r\n    if (character.classFeatures.length !== 1) { //don't delete last row\r\n      newFeatures.splice(index, 1); // remove item from array\r\n      setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\r\n    } else {\r\n      alert('Cannot delete final row');\r\n    }\r\n  }\r\n\r\n  // Add rows in the table\r\n  const addFeatureRow = () => {\r\n    const newFeatures = [...character.classFeatures, {feature: \"\", checkbox: false}]; // copying the old array and adding blank item\r\n    setCharacter(character => ({...character, classFeatures: newFeatures})); // set array back\r\n  }\r\n\r\n  return (\r\n    <table style={{\r\n        \"width\" : \"100%\"\r\n      }} id=\"classFeaturesTable\">\r\n      <thead>\r\n        <tr>\r\n          <th colSpan={2} style={{\r\n              \"width\" : \"100%\"\r\n            }}>\r\n            <label>CLASS FEATURES</label>\r\n          </th>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              className=\"addRow\"\r\n              onClick={() => addFeatureRow()}>\r\n              +\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {\r\n           character.classFeatures && character.classFeatures.map((classFeatures,index) => {\r\n           return (\r\n             <tr key={index}>\r\n               <td>\r\n                 <input\r\n                   type=\"checkbox\"\r\n                   className=\"checkbox\"\r\n                   checked={!!classFeatures.checkbox}\r\n                   onChange={updateFeatureCheckbox(index)}/>\r\n               </td>\r\n                 <td>\r\n                   <textarea\r\n                     placeholder=\"Add any Class Features here (e.g. Spell Lists, Poison Recipes, Druid Balance, Paladin Quests or anything else!)\"\r\n                     value={classFeatures.feature}\r\n                     onChange={updateFeature(index)}/>\r\n                 </td>\r\n                 <td>\r\n                   <button\r\n                     type=\"button\"\r\n                     className=\"deleteRow\"\r\n                     onClick={() => deleteFeatureRow(index)}/>\r\n                 </td>\r\n             </tr>)\r\n          })\r\n        }\r\n      </tbody>\r\n      <tfoot/>\r\n    </table>\r\n    );\r\n}\r\n\r\nexport default ClassFeaturesTable;\r\n","import React, {useState, useEffect} from 'react';\r\nimport CharacterState from './contexts/CharacterState';\r\nimport { useParams } from \"react-router\";\r\nimport SheetHeader from './SheetHeader'\r\nimport CharacterDetailsTable from './CharacterDetailsTable'\r\nimport CharacterTypeTable from './CharacterTypeTable'\r\nimport BasicAttributesTable from './BasicAttributesTable'\r\nimport ExtraAttributes from './ExtraAttributes'\r\nimport AbilitiesTable from './AbilitiesTable'\r\nimport BondsTable from './BondsTable'\r\nimport GearTable from './GearTable'\r\nimport ClassFeaturesTable from './ClassFeaturesTable'\r\n//import useQueryString from './hooks/useQueryString'\r\n\r\nfunction CharacterSheet() {\r\n\r\n  // retrieve URL parameters for usage\r\n  let { campaign } = useParams();\r\n\r\n  console.log(\"campaign:\",campaign);\r\n\r\n  // Definitions for state\r\n  const [character, setCharacter] = useState({});\r\n\r\n  // Setting state for Character using useEffect hook\r\n  useEffect(() => {\r\n    setCharacter({\r\n          owner: \"owner@email.com\",\r\n          charaName: \"Bob\",\r\n          look: \"scraggly\",\r\n          backstory: \"sad backstory\",\r\n          dwClass: \"Paladin\",\r\n          race: \"Elf\",\r\n          alignment: \"Good\",\r\n          level: 2,\r\n          xp: 2,\r\n          abilities: [\r\n            {category: \"STR\", score: 1, affliction: \"Weak\"},\r\n            {category: \"DEX\", score: 1, affliction: \"Unafflicted\"},\r\n            {category: \"CON\", score: 1, affliction: \"Unafflicted\"},\r\n            {category: \"INT\", score: 1, affliction: \"Unafflicted\"},\r\n            {category: \"WIS\", score: 1, affliction: \"Unafflicted\"},\r\n            {category: \"CHA\", score: 1, affliction: \"Unafflicted\"}\r\n          ],\r\n          armour: 3,\r\n          hp:2,\r\n          funds: 10,\r\n          bonds: [\r\n            {bond: \"bond0\"},\r\n            {bond: \"bond1\"}\r\n          ],\r\n          gear: [\r\n            {item: \"item0\", weight: 1},\r\n            {item: \"item1\", weight: 2}\r\n          ],\r\n          classFeatures: [\r\n            {feature: \"classFeature0\", checkbox: true},\r\n            {feature: \"classFeature1\", checkbox: false},\r\n          ]\r\n        })\r\n  }, [setCharacter]);\r\n  console.log(\"character state:\",character);\r\n\r\n  // Use a custom hook to subscribe to the character provided as a URL query parameter\r\n  //const [character, setCharacter] = useQueryString('character');\r\n\r\n  return (\r\n  <CharacterState.Provider value={[character, setCharacter]}>\r\n    <SheetHeader/>\r\n    <br/>\r\n    <CharacterDetailsTable/>\r\n    <br/>\r\n    <CharacterTypeTable/>\r\n    <br/>\r\n    <BasicAttributesTable/>\r\n    <br/>\r\n    <ExtraAttributes/>\r\n    <br/>\r\n    <AbilitiesTable/>\r\n    <br/>\r\n    <BondsTable/>\r\n    <br/>\r\n    <GearTable/>\r\n    <br/>\r\n    <ClassFeaturesTable/>\r\n    <br/>\r\n  </CharacterState.Provider>);\r\n}\r\n\r\nexport default CharacterSheet;\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport ErrorPage from './ErrorPage'\r\nimport NavSidebar from './NavSidebar';\r\nimport UserProfile from './UserProfile';\r\nimport AppHeader from './AppHeader';\r\nimport CharacterSheet from './CharacterSheet';\r\n\r\nfunction App(props) {\r\n  const currentUser = props.currentUser;\r\n\r\n  return (<>\r\n    <UserProfile currentUser={currentUser}/>\r\n    <AppHeader/>\r\n    <Router>\r\n      <NavSidebar/>\r\n      <Switch>\r\n        <Route path=\"/\" children={<CharacterSheet/>} />\r\n        <Route path=\"/:campaign\" children={<CharacterSheet/>} />\r\n        <Route path=\"/:campaign/:character\" children={<CharacterSheet/>} />\r\n        <Route component={ErrorPage} />\r\n      </Switch>\r\n    </Router>\r\n  </>)\r\n}\r\n\r\nexport default App;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// Initialise Firebase and setting up firestore and auth for use later\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\n\r\n// Authenticate with Firebase-auth using the Google provider object\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport function SignInWithGoogle() { auth.signInWithPopup(provider)};\r\n\r\n// Firestore operations\r\nexport function createGroceryList(userName, userId) {\r\n    return db.collection('groceryLists')\r\n        .add({\r\n            created: firebase.firestore.FieldValue.serverTimestamp(),\r\n            createdBy: userId,\r\n            users: [{\r\n                userId: userId,\r\n                name: userName\r\n            }]\r\n        });\r\n};\r\n\r\nexport function getGroceryList(groceryListId) {\r\n    return db.collection('groceryLists')\r\n        .doc(groceryListId)\r\n        .get();\r\n};\r\n\r\nexport function getGroceryListItems(groceryListId) {\r\n    return db.collection('groceryLists')\r\n        .doc(groceryListId)\r\n        .collection('items')\r\n        .get();\r\n}\r\n\r\nexport function streamGroceryListItems(groceryListId, observer) {\r\n    return db.collection('groceryLists')\r\n        .doc(groceryListId)\r\n        .collection('items')\r\n        .orderBy('created')\r\n        .onSnapshot(observer);\r\n};\r\n\r\n// Default Export\r\nexport default firebase;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './custom.css';\r\nimport App from './components/App';\r\nimport * as FirestoreService from './services/firebase';\r\n\r\nexport const AuthContext = React.createContext(null);\r\n\r\nclass Index extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentUser: null\r\n    };\r\n  }\r\n\r\n  unsubscribeFromAuth = null;\r\n\r\n  componentDidMount() {\r\n    this.unsubscribeFromAuth = FirestoreService.auth.onAuthStateChanged(user => {\r\n      this.setState({ currentUser: user });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribeFromAuth();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {\r\n          this.state.currentUser ?\r\n            (<div>\r\n              <App currentUser={this.state.currentUser} />\r\n              <button onClick={() => FirestoreService.auth.signOut()}>LOG OUT</button>\r\n            </div>\r\n            ) :\r\n            <button onClick={FirestoreService.SignInWithGoogle}>SIGN IN WITH GOOGLE</button>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<Index />, rootElement);\r\n"],"sourceRoot":""}