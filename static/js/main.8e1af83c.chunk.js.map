{"version":3,"sources":["components/ErrorPage.js","services/firebase.js","components/homepage/HomepageHeader.js","components/contexts/HomepageState.js","components/contexts/AuthState.js","components/homepage/HomepageDetails.js","components/homepage/Homepage.js","components/contexts/ProfileState.js","components/profile/ProfilePicture.js","components/profile/ProfileDetails.js","components/profile/UserProfile.js","components/AppHeader.js","components/contexts/CharacterState.js","components/character/CharacterSheetHeader.js","components/character/CharacterBasicDetails.js","components/character/CharacterDamage.js","components/character/CharacterArmour.js","components/character/CharacterFunds.js","components/character/CharacterHP.js","components/character/CharacterLevel.js","components/character/CharacterXP.js","components/character/CharacterBasicStats.js","components/character/CharacterAbilities.js","components/character/CharacterBonds.js","components/contexts/AddItemState.js","components/character/AddItem.js","components/character/CharacterGear.js","components/character/CharacterClassFeatures.js","components/character/CharacterStandardMoves.js","components/character/CharacterAdvancedMoves.js","components/character/CharacterClassMoves.js","components/character/CharacterMoves.js","components/other/DiceRoller.js","components/character/CharacterSheet.js","components/contexts/CampaignState.js","components/campaign/CampaignHeader.js","components/contexts/CreateCharacterState.js","components/campaign/CreateCharacter.js","components/campaign/CampaignDetails.js","components/campaign/Campaign.js","components/App.js","index.js"],"names":["ErrorPage","firebase","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","provider","GoogleAuthProvider","SignInWithGoogle","signInWithPopup","saveCharacter","campaign","character","data","collection","doc","set","setCustomParameters","prompt","HomepageHeader","Breadcrumbs","aria-label","HomepageState","createContext","AuthState","useStyles","makeStyles","table","minWidth","HomepageDetails","classes","currentUser","useContext","useState","open","setOpen","campaignName","setCampaignName","campaigns","handleCancel","saveCampaign","owner","email","then","console","info","catch","error","alert","deleteCampaign","delete","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","IconButton","onClick","Add","TableBody","map","index","to","id","Delete","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","onChange","event","target","value","DialogActions","Button","color","Homepage","setCampaigns","useEffect","observer","next","querySnapshot","updatedCampaignList","docs","docSnapshot","onSnapshot","log","ctx","useMemo","Provider","ProfileState","ProfilePicture","show","setShow","Avatar","src","photoURL","alt","ProfileDetails","style","border","WebkitBorderRadius","borderRadius","display","position","top","right","backgroundColor","textAlign","font","letterSpacing","lineHeight","fontWeight","padding","displayName","variant","FirebaseService","signOut","UserProfile","theme","root","flexGrow","menuButton","marginRight","spacing","title","AppHeader","AppBar","Toolbar","edge","Menu","Typography","CharacterState","CharacterSheetHeader","useParams","campaignURL","characterURL","dwc","dw_class","alig","alignment","race","race_attribute","class_details","alignments","find","x","attribute","CharacterBasicDetails","setCharacter","handleCharacterChange","name","size","multiline","placeholder","full_name","backstory","look","textField","width","CharacterDamage","InputProps","readOnly","damage","CharacterArmour","type","min","armour","CharacterFunds","funds","CharacterHP","maxHp","abilities","base_hp","parseInt","category","score","hp","endAdornment","InputAdornment","CharacterLevel","level","CharacterXP","maxXp","xp","CharacterBasicStats","card","cardHeader","formControl","textFieldBold","fontSize","CharacterAbilities","updateAbilityScore","e","newAbilities","updateAbilityAffliction","affliction","abilityModifier","abilityScore","abilityAffliction","baseModifier","indexOf","modifier","Grid","container","justify","ab","item","Card","CardHeader","CardContent","reduce","totalScore","max","FormControl","Select","tabIndex","ability_afflictions","key","MenuItem","heading","typography","pxToRem","fontWeightRegular","CharacterBonds","updateBond","newBonds","bonds","bond","align","addBondsRow","length","splice","deleteBondRow","AddItemState","CampaignDetails","setItem","addItemRow","newItem","items","newItems","Autocomplete","freeSolo","options","option","renderInput","params","chips","flexWrap","chip","maxWidth","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","CharacterGear","totalLoad","weight","maxLoad","str","base_load","itemTypes","description","range","itemRanges","cost","uses","multiple","tags","input","Input","renderValue","selected","Chip","itemTags","deleteItemRow","colSpan","CharacterClassFeatures","updateFeatureCheckbox","newFeatures","class_features","checkbox","checked","updateFeature","feature","addFeatureRow","Checkbox","deleteFeatureRow","CharacterStandardMoves","standard_moves","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","dangerouslySetInnerHTML","__html","CharacterAdvancedMoves","advanced_moves","CharacterClassStartingMoves","getMove","move","field","moves","TabPanel","props","children","other","role","hidden","Box","p","a11yProps","palette","background","paper","CharacterMoves","React","setValue","Tabs","newValue","Tab","DiceRoller","dice","setDice","diceNum","setDiceNum","rollResult","setRollResult","singleRoll","sides","Math","floor","random","InputLabel","defaultValue","disabled","total","i","rollDice","CharacterSheet","documentSnapshot","debouncedSave","useCallback","callback","delay","timer","args","clearTimeout","setTimeout","debounce","Object","keys","CampaignState","CampaignHeader","CreateCharacterState","selectEmpty","marginTop","backButton","instructions","marginBottom","charaName","setCharaName","charaClass","setCharaClass","charaRace","setCharaRace","charaAlignment","setCharaAlignment","charaRaceAttribute","setCharaRaceAttribute","activeStep","setActiveStep","steps","handleRadioChange","startingMoves","filter","Stepper","alternativeLabel","Step","StepLabel","stepIndex","dw_classes","races","RadioGroup","race_attributes","FormControlLabel","control","Radio","gear_details","FormLabel","FormGroup","suggested_bonds","getStepContent","prevActiveStep","pos","deleteCharacter","xs","action","subheader","characterData","CampaignSheet","setCampaign","updatedCharacterList","App","Container","exact","path","Campaign","Index","setCurrentUser","onAuthStateChanged","user","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.8e1af83c.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorPage() {\n  return <h1>Oops! Page not found!</h1>;\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialise Firebase and setting up firestore and auth for use later\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\n\n// Authenticate with Firebase-auth using the Google provider object\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account',\n});\nexport function SignInWithGoogle() {\n  auth.signInWithPopup(provider);\n}\n\n// Firestore operations\n\n// Create new campaign\nexport function createCampaign(campaign, owner) {\n  return db.collection('campaigns').doc(campaign).set({ owner: owner });\n}\n\n// Save/Create Character\nexport function saveCharacter(campaign, character, data) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .doc(character)\n    .set(data);\n}\n\n// Stream Campaign Data (all Campaigns)\nexport function streamCampaigns(observer) {\n  return db.collection('campaigns').onSnapshot(observer);\n}\n\n// Stream Character Data (all Characters)\nexport function streamCharacters(campaign, observer) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .onSnapshot(observer);\n}\n\n// Stream Character Data (selected Characters)\nexport function streamCharacter(campaign, character, observer) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .doc(character)\n    .onSnapshot(observer);\n}\n\n// Delete Campaign\nexport function deleteCampaign(campaign) {\n  return db.collection('campaigns').doc(campaign).delete();\n}\n\n// Delete Characters\nexport function deleteCharacter(campaign, character) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .doc(character)\n    .delete();\n}\n\n// Default Export\nexport default firebase;\n","import React from 'react';\nimport { Breadcrumbs } from '@material-ui/core';\n\nexport default function HomepageHeader() {\n  return (\n    <div>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <p>Home</p>\n      </Breadcrumbs>\n      <h1>Campaigns Homepage</h1>\n    </div>\n  );\n}\n","import { createContext } from 'react';\n\nconst HomepageState = createContext();\n\nexport default HomepageState;\n","import { createContext } from 'react';\n\nconst AuthState = createContext();\n\nexport default AuthState;\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as FirebaseService from 'services/firebase';\nimport HomepageState from 'components/contexts/HomepageState';\nimport AuthState from 'components/contexts/AuthState';\nimport { Add, Delete } from '@material-ui/icons';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function HomepageDetails() {\n  const classes = useStyles();\n  const { currentUser } = useContext(AuthState);\n  const [open, setOpen] = useState(false);\n  const [campaignName, setCampaignName] = useState('');\n  const { campaigns } = useContext(HomepageState);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    setOpen(false);\n    saveCampaign();\n  };\n\n  // Create New Campaign\n  const saveCampaign = () => {\n    if (campaignName) {\n      //don't save unless details present\n      FirebaseService.createCampaign(campaignName, currentUser.email)\n        .then(() => {\n          console.info('Created Campaign:', campaignName);\n        })\n        .catch((error) => {\n          alert('Failed to create campaign, see console error');\n          console.error('Error creating document:', error);\n        });\n    } else {\n      alert('Cannot save blank campaign');\n    }\n  };\n\n  // Delete Campaign\n  const deleteCampaign = (campaignName) => {\n    if (campaignName) {\n      //don't save unless details present\n      FirebaseService.deleteCampaign(campaignName)\n        .then(() => {\n          console.info('Deleted Campaign:', campaignName);\n        })\n        .catch((error) => {\n          alert('Failed to delete campaign, see console error');\n          console.error('Error deleting document:', error);\n        });\n    } else {\n      alert('Cannot delete blank campaign');\n    }\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Campaign</TableCell>\n              <TableCell>Owner</TableCell>\n              <TableCell>\n                <IconButton aria-label='add' onClick={handleClickOpen}>\n                  <Add />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {campaigns.campaigns &&\n              campaigns.campaigns.map((campaign, index) => {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>\n                      <Link to={'/dw-react/' + campaign.id}>{campaign.id}</Link>\n                    </TableCell>\n                    <TableCell>{campaign.owner}</TableCell>\n                    <TableCell>\n                      <IconButton\n                        aria-label='delete'\n                        onClick={() => deleteCampaign(campaign.id)}>\n                        <Delete />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Dialog\n        open={open}\n        onClose={handleCancel}\n        aria-labelledby='form-dialog-title'>\n        <DialogTitle id='form-dialog-title'>Create new campaign</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To create a campaign, please enter the new campaign name here. You\n            will not be able to change this once saved.\n          </DialogContentText>\n          <TextField\n            autoFocus={true}\n            margin='dense'\n            id='name'\n            label='Campaign Name'\n            fullWidth\n            onChange={(event) => setCampaignName(event.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={handleSave} color='primary'>\n            Create Campaign\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport * as FirebaseService from 'services/firebase';\nimport HomepageHeader from 'components/homepage/HomepageHeader';\nimport HomepageDetails from 'components/homepage/HomepageDetails';\nimport HomepageState from 'components/contexts/HomepageState';\n\nexport default function Homepage() {\n  const [campaigns, setCampaigns] = useState({});\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    const unsubscribe = FirebaseService.streamCampaigns({\n      next: (querySnapshot) => {\n        const updatedCampaignList = querySnapshot.docs.map((docSnapshot) => {\n          return { id: docSnapshot.id, owner: docSnapshot.data().owner };\n        });\n        setCampaigns((campaign) => ({ campaigns: updatedCampaignList }));\n      },\n      error: (error) => {\n        alert('Failed to load data correctly, see console error');\n        console.error('Error loading data:', error);\n      },\n    });\n    return unsubscribe;\n  }, [setCampaigns]);\n\n  useEffect(() => {\n    console.log('Campaigns State:', campaigns);\n  }, [campaigns]); //Only log to console if state actually changes\n\n  const ctx = useMemo(() => ({ campaigns }), [campaigns]); //Memo-ised state for performance\n\n  return (\n    <HomepageState.Provider value={ctx}>\n      <HomepageHeader />\n      <br />\n      <HomepageDetails />\n    </HomepageState.Provider>\n  );\n}\n","import { createContext } from 'react';\n\nconst ProfileState = createContext();\n\nexport default ProfileState;\n","import React, { useContext } from \"react\";\nimport AuthState from \"components/contexts/AuthState\";\nimport ProfileState from \"components/contexts/ProfileState\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nexport default function ProfilePicture() {\n  const { currentUser } = useContext(AuthState);\n  const { show, setShow } = useContext(ProfileState);\n  const toggleSetShow = () => setShow(!show);\n\n  return (\n    <Avatar\n      src={currentUser.photoURL}\n      alt=\"Google Profile\"\n      onClick={() => toggleSetShow()}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport AuthState from 'components/contexts/AuthState';\nimport * as FirebaseService from 'services/firebase';\nimport { Button } from '@material-ui/core';\n\nexport default function ProfileDetails() {\n  const { currentUser } = useContext(AuthState);\n\n  return (\n    <div\n      style={{\n        border: '0',\n        WebkitBorderRadius: '50%',\n        borderRadius: '5px',\n        display: 'inline-block',\n        margin: '0',\n        position: 'absolute',\n        top: '50px',\n        right: '20px',\n        color: '#bdc1c6',\n        backgroundColor: 'rgba(60, 64, 67, 0.9)',\n        textAlign: 'left',\n        font: \"500 12px 'Roboto', arial, sans-serif\",\n        letterSpacing: '0.8px',\n        lineHeight: '16px',\n        fontWeight: 'bold',\n        padding: '8px 8px',\n      }}>\n      <div\n        style={{\n          color: 'white',\n        }}>\n        Google Account\n      </div>\n      <div>{currentUser.displayName}</div>\n      <div>{currentUser.email}</div>\n      <Button\n        variant='contained'\n        color='primary'\n        onClick={() => FirebaseService.auth.signOut()}>\n        LOG OUT\n      </Button>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from 'react';\nimport ProfilePicture from 'components/profile/ProfilePicture';\nimport ProfileDetails from 'components/profile/ProfileDetails';\nimport ProfileState from 'components/contexts/ProfileState';\n\nexport default function UserProfile() {\n  const [show, setShow] = useState(false);\n  const ctx = useMemo(() => ({ show, setShow }), [show]); //Memo-ised state for performance\n\n  return (\n    <ProfileState.Provider value={ctx}>\n      <ProfilePicture /> {show ? <ProfileDetails /> : null}\n    </ProfileState.Provider>\n  );\n}\n","import React from 'react';\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Menu } from '@material-ui/icons';\nimport UserProfile from 'components/profile/UserProfile';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function AppHeader() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Toolbar>\n          <IconButton\n            edge='start'\n            className={classes.menuButton}\n            color='inherit'\n            aria-label='menu'>\n            <Menu />\n          </IconButton>\n          <Typography component={'span'} variant='h6' className={classes.title}>\n            Dungeon World Character Sheet (v0.10.0 by Godmar02)\n          </Typography>\n          <UserProfile />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { createContext } from 'react';\n\nconst CharacterState = createContext();\n\nexport default CharacterState;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { Breadcrumbs } from '@material-ui/core';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\n\nexport default function CharacterSheetHeader() {\n  const { campaignURL, characterURL } = useParams();\n  const { character } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  const alig = character.alignment;\n  const alignmentAttribute = () => {\n    if (character.dw_class && character.alignment) {\n      return class_details[dwc].alignments.find((x) => x.alignment === alig)\n        .attribute;\n    } else {\n      return '';\n    }\n  };\n\n  return (\n    <>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <Link to='/dw-react'>Home</Link>\n        <Link to={'/dw-react/' + campaignURL}>{campaignURL}</Link>\n        <p>{characterURL}</p>\n      </Breadcrumbs>\n      <h1>Name: {characterURL}</h1>\n      <p>Class: {character.dw_class}</p>\n      <p>\n        Race: {character.race} - {character.race_attribute}\n      </p>\n      <p>\n        Alignment: {character.alignment} - {alignmentAttribute()}\n      </p>\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CharacterState from 'components/contexts/CharacterState';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function CharacterBasicDetails() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size='small' aria-label='simple table'>\n        <TableBody>\n          <TableRow>\n            <TableCell>FULL NAME</TableCell>\n            <TableCell>\n              <TextField\n                multiline\n                fullWidth\n                variant='outlined'\n                aria-label='empty textarea'\n                placeholder='Add your characters full name here'\n                value={character.full_name}\n                name='full_name'\n                onChange={handleCharacterChange}\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>BACKSTORY</TableCell>\n            <TableCell>\n              <TextField\n                multiline\n                fullWidth\n                variant='outlined'\n                aria-label='empty textarea'\n                placeholder=\"Describe your character's backstory and anything else about your characters identity here\"\n                value={character.backstory}\n                name='backstory'\n                onChange={handleCharacterChange}\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>LOOK</TableCell>\n            <TableCell>\n              <TextField\n                multiline\n                fullWidth\n                variant='outlined'\n                aria-label='empty textarea'\n                placeholder=\"Describe your character's appearance here\"\n                name='look'\n                value={character.look}\n                onChange={handleCharacterChange}\n              />\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n}));\n\nexport default function CharacterDamage() {\n  const { character } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  const classes = useStyles();\n\n  const damage = () => {\n    if (character.dw_class) {\n      return class_details[dwc].damage;\n    } else {\n      return '';\n    }\n  };\n\n  return (\n    <TextField\n      variant='outlined'\n      size='small'\n      className={classes.textField}\n      name='damage'\n      label='Damage'\n      InputProps={{\n        readOnly: true,\n      }}\n      value={damage()}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n}));\n\nexport default function CharacterArmour() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TextField\n      type='number'\n      variant='outlined'\n      size='small'\n      label='Armour'\n      min={0}\n      name='armour'\n      className={classes.textField}\n      value={character.armour || ''}\n      onChange={handleCharacterChange}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n}));\n\nexport default function CharacterFunds() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TextField\n      type='number'\n      variant='outlined'\n      size='small'\n      className={classes.textField}\n      name='funds'\n      label='Funds'\n      min={0}\n      value={character.funds || ''}\n      onChange={handleCharacterChange}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\nimport { InputAdornment, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 100,\n    '& input': {\n      textAlign: 'center',\n    },\n    margin: 4,\n  },\n}));\n\nexport default function CharacterHP() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  const classes = useStyles();\n\n  const maxHp = () => {\n    if (character.dw_class && character.abilities) {\n      return (\n        class_details[dwc].base_hp +\n        parseInt(\n          character.abilities.find((x) => x.category === 'CON').score,\n          10\n        )\n      );\n    } else {\n      return '';\n    }\n  };\n\n  // Validate XP\n  const validateHp = () => {\n    if (parseInt(character.hp, 10) > maxHp()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <>\n      <TextField\n        type='number'\n        variant='outlined'\n        label='HP'\n        error={validateHp()}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>{' / ' + maxHp()}</InputAdornment>\n          ),\n        }}\n        min={0}\n        size='small'\n        className={classes.textField}\n        name='hp'\n        value={character.hp || ''}\n        onChange={handleCharacterChange}\n      />\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n}));\n\nexport default function CharacterLevel() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TextField\n      type='number'\n      variant='outlined'\n      size='small'\n      label='Level'\n      className={classes.textField}\n      min={1}\n      name='level'\n      value={character.level || ''}\n      onChange={handleCharacterChange}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { InputAdornment, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 100,\n    '& input': {\n      textAlign: 'center',\n    },\n    margin: 4,\n  },\n}));\n\nexport default function CharacterXP() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  // Total Load\n  const maxXp = () => {\n    if (character.level) {\n      return parseInt(character.level, 10) + 7;\n    } else {\n      return '';\n    }\n  };\n\n  // Validate XP\n  const validateXp = () => {\n    if (parseInt(character.xp, 10) > maxXp()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <>\n      <TextField\n        type='number'\n        variant='outlined'\n        label='XP'\n        error={validateXp()}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>{' / ' + maxXp()}</InputAdornment>\n          ),\n        }}\n        min={0}\n        size='small'\n        className={classes.textField}\n        name='xp'\n        value={character.xp || ''}\n        onChange={handleCharacterChange}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from '@material-ui/core';\nimport CharacterDamage from 'components/character/CharacterDamage';\nimport CharacterArmour from 'components/character/CharacterArmour';\nimport CharacterFunds from 'components/character/CharacterFunds';\nimport CharacterHP from 'components/character/CharacterHP';\nimport CharacterLevel from 'components/character/CharacterLevel';\nimport CharacterXP from 'components/character/CharacterXP';\n\nexport default function CharacterBasicStats() {\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <CharacterLevel />\n            </TableCell>\n            <TableCell>\n              <CharacterXP />\n            </TableCell>\n            <TableCell>\n              <CharacterDamage />\n            </TableCell>\n            <TableCell>\n              <CharacterArmour />\n            </TableCell>\n            <TableCell>\n              <CharacterFunds />\n            </TableCell>\n            <TableCell>\n              <CharacterHP />\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { ability_afflictions } from 'data/abilityAfflictions';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  FormControl,\n  Grid,\n  MenuItem,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    width: 160,\n    padding: 0,\n  },\n  cardHeader: {\n    textAlign: 'center',\n  },\n  formControl: {\n    margin: 0,\n    width: 126,\n    textAlign: 'center',\n  },\n  textField: {\n    width: 126,\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n  textFieldBold: {\n    width: 126,\n    '& input': {\n      textAlign: 'center',\n      fontWeight: 'bold',\n      fontSize: 25,\n    },\n  },\n}));\n\nexport default function CharacterAbilities() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n\n  const updateAbilityScore = (index) => (e) => {\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {\n      ...character.abilities[index],\n      score: e.target.value,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      abilities: newAbilities,\n    })); // set array back\n  };\n\n  const updateAbilityAffliction = (index) => (e) => {\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {\n      ...character.abilities[index],\n      affliction: e.target.value,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      abilities: newAbilities,\n    })); // set array back\n  };\n\n  const abilityModifier = (abilityScore, abilityAffliction) => {\n    if (abilityScore && abilityAffliction) {\n      let baseModifier;\n      let afflicted;\n\n      abilityScore = parseInt(abilityScore, 10);\n\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\n        baseModifier = -3;\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\n        baseModifier = -2;\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n        baseModifier = -1;\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n        baseModifier = 0;\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n        baseModifier = 1;\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\n        baseModifier = 2;\n      } else if (abilityScore === 18) {\n        baseModifier = 3;\n      }\n\n      /* -1 if afflicted */\n      if (abilityAffliction === 'Unafflicted') {\n        afflicted = 0;\n      } else {\n        afflicted = 1;\n      }\n\n      let modifier = baseModifier - afflicted;\n\n      if (modifier > 0) {\n        return '[+' + modifier + ']';\n      } else {\n        return '[' + modifier + ']';\n      }\n    } else {\n      return '';\n    }\n  };\n\n  // Validate Score\n  const validateScore = () => {\n    const totalScore = character.abilities.reduce(\n      (totalScore, data) => totalScore + parseInt(data.score || 0, 10),\n      0\n    );\n    if (totalScore !== 73) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <Grid container spacing={0} justify='center'>\n      {character.abilities &&\n        character.abilities.map((abilities, index) => {\n          const ab = abilities.category;\n          return (\n            <Grid item key={index}>\n              <Card className={classes.card}>\n                <CardHeader\n                  title={abilities.category}\n                  className={classes.cardHeader}\n                />\n                <CardContent>\n                  <TextField\n                    type='number'\n                    variant='outlined'\n                    error={validateScore()}\n                    size='small'\n                    margin='none'\n                    min={1}\n                    max={18}\n                    name={abilities.category + 'Score'}\n                    value={abilities.score}\n                    className={classes.textField}\n                    onChange={updateAbilityScore(index)}\n                  />\n                  <TextField\n                    variant='outlined'\n                    name={abilities.category + 'Modifier'}\n                    value={abilityModifier(\n                      abilities.score,\n                      abilities.affliction\n                    )}\n                    InputProps={{ readOnly: true }}\n                    className={classes.textFieldBold}\n                  />\n                  <FormControl\n                    variant='outlined'\n                    size='small'\n                    className={classes.formControl}>\n                    <Select\n                      tabIndex={-1}\n                      value={abilities.affliction || 'null'}\n                      name={abilities.category + 'Affliction'}\n                      onChange={updateAbilityAffliction(index)}>\n                      {ability_afflictions[ab].map((data, key) => {\n                        return (\n                          <MenuItem value={data} key={key}>\n                            {data}\n                          </MenuItem>\n                        );\n                      })}\n                    </Select>\n                  </FormControl>\n                </CardContent>\n              </Card>\n            </Grid>\n          );\n        })}\n    </Grid>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { Add, Delete } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function CharacterBonds() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n\n  // State manipulation\n  const updateBond = (index) => (e) => {\n    let newBonds = [...character.bonds]; // copying the old array\n    newBonds[index] = { ...character.bonds[index], bond: e.target.value }; // replace value\n    setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\n  };\n\n  // Delete rows in the table\n  const deleteBondRow = (index) => {\n    const newBonds = [...character.bonds]; // copying the old array\n    if (character.bonds.length !== 1) {\n      //don't delete last row\n      newBonds.splice(index, 1); // remove item from array\n      setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  };\n\n  // Add rows in the table\n  const addBondsRow = () => {\n    const newBonds = [...character.bonds, { bond: '' }]; // copying the old array and adding blank item\n    setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label='simple table'>\n        <TableHead>\n          <TableRow>\n            <TableCell align='center'>Bond</TableCell>\n            <TableCell>\n              <IconButton aria-label='add' onClick={() => addBondsRow()}>\n                <Add />\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {character.bonds &&\n            character.bonds.map((bonds, index) => {\n              return (\n                <TableRow key={index}>\n                  <TableCell>\n                    <TextField\n                      multiline\n                      fullWidth\n                      variant='outlined'\n                      aria-label='empty textarea'\n                      placeholder='Add 2-3 bonds here'\n                      value={bonds.bond}\n                      name={'bond' + index}\n                      onChange={updateBond(index)}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <IconButton\n                      aria-label='delete'\n                      onClick={() => deleteBondRow(index)}>\n                      <Delete />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n        <tfoot />\n      </Table>\n    </TableContainer>\n  );\n}\n","import { createContext } from 'react';\n\nconst AddItemState = createContext();\n\nexport default AddItemState;\n","import React, { useContext, useState } from 'react';\nimport AddItemState from 'components/contexts/AddItemState';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { items } from 'data/itemsList';\n\nexport default function CampaignDetails() {\n  const { open, setOpen } = useContext(AddItemState);\n  const { character, setCharacter } = useContext(CharacterState);\n  const [item, setItem] = useState('');\n\n  const handleCancel = () => {\n    setItem('');\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    addItemRow();\n    setItem('');\n    setOpen(false);\n  };\n\n  // Add rows in the table\n  const addItemRow = () => {\n    const newItem = items.find((x) => x.name === item);\n    if (newItem) {\n      const newItems = [...character.items, newItem]; // copying the old array and adding new item depending upon selection\n      setCharacter((character) => ({ ...character, items: newItems })); // set array back\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleCancel}\n      aria-labelledby='form-dialog-title'>\n      <DialogTitle id='form-dialog-title'>Add new item</DialogTitle>{' '}\n      <DialogContent>\n        <DialogContentText>\n          Search for an item to add. If you wish to create your own choose\n          'CUSTOM'.\n        </DialogContentText>\n        <Autocomplete\n          freeSolo\n          onChange={(event, value) => setItem(value)}\n          options={items.map((option) => option.name)}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label='Items'\n              margin='normal'\n              variant='outlined'\n            />\n          )}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color='primary'>\n          Cancel\n        </Button>\n        <Button onClick={handleSave} color='primary'>\n          Add Item\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useMemo, useState } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport AddItemState from 'components/contexts/AddItemState';\nimport { class_details } from 'data/classDetails';\nimport { Add, Delete } from '@material-ui/icons';\nimport {\n  Chip,\n  FormControl,\n  IconButton,\n  Input,\n  Paper,\n  Select,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { itemRanges } from 'data/itemRanges';\nimport { itemTypes } from 'data/itemTypes';\nimport { itemTags } from 'data/itemTags';\nimport AddItem from 'components/character/AddItem';\n\nconst useStyles = makeStyles((theme) => ({\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nexport default function CharacterGear() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  const [open, setOpen] = useState(false);\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\n\n  // Total Load\n  const totalLoad = () => {\n    if (character.items) {\n      return character.items.reduce(\n        (totalLoad, data) => totalLoad + parseInt(data.weight || 0, 10),\n        0\n      );\n    } else {\n      return '';\n    }\n  };\n\n  // Max Load\n  const maxLoad = () => {\n    if (\n      character.dw_class &&\n      character.abilities.find((x) => x.category === 'STR').score &&\n      character.abilities.find((x) => x.category === 'STR').affliction\n    ) {\n      let str = character.abilities.find((x) => x.category === 'STR');\n      let baseModifier;\n      let abilityAffliction = str.affliction;\n      let abilityScore = parseInt(str.score, 10);\n      let afflicted;\n\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\n        baseModifier = -3;\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\n        baseModifier = -2;\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n        baseModifier = -1;\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n        baseModifier = 0;\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n        baseModifier = 1;\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\n        baseModifier = 2;\n      } else if (abilityScore === 18) {\n        baseModifier = 3;\n      }\n\n      /*-1 if afflicted*/\n      if (abilityAffliction === 'Unafflicted') {\n        afflicted = 0;\n      } else {\n        afflicted = 1;\n      }\n\n      let modifier = baseModifier - afflicted;\n\n      return class_details[dwc].base_load + modifier;\n    } else {\n      return '';\n    }\n  };\n\n  // Validate Load\n  const validateLoad = () => {\n    if (totalLoad() > maxLoad()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  // State manipulation\n  const handleCharacterChange = (event, index) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = { ...character.items[index], [name]: value }; // replace value\n    setCharacter((character) => ({ ...character, items: newItems })); // set array back\n  };\n\n  // Delete rows in the table\n  const deleteItemRow = (index) => {\n    const newItems = [...character.items]; // copying the old array\n    if (character.items.length !== 1) {\n      //don't delete last row\n      newItems.splice(index, 1); // remove item from array\n      setCharacter((character) => ({ ...character, items: newItems })); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <AddItemState.Provider value={ctx}>\n        <AddItem />\n      </AddItemState.Provider>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              <TableCell align='center'>TYPE</TableCell>\n              <TableCell align='center'>NAME</TableCell>\n              <TableCell align='center'>DESCRIPTION</TableCell>\n              <TableCell align='center'>AMOUR</TableCell>\n              <TableCell align='center'>RANGE</TableCell>\n              <TableCell align='center'>COST</TableCell>\n              <TableCell align='center'>USES</TableCell>\n              <TableCell align='center'>TAGS</TableCell>\n              <TableCell align='center'>WEIGHT</TableCell>\n              <TableCell>\n                <IconButton aria-label='add' onClick={handleClickOpen}>\n                  <Add />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {character.items &&\n              character.items.map((items, index) => {\n                return (\n                  <TableRow key={index}>\n                    <TableCell align='center'>\n                      <FormControl\n                        variant='outlined'\n                        size='small'\n                        className={classes.formControl}>\n                        <Select\n                          tabIndex={-1}\n                          value={items.type}\n                          name='type'\n                          onChange={(event) =>\n                            handleCharacterChange(event, index)\n                          }>\n                          {itemTypes.map((type) => (\n                            <MenuItem key={type} value={type}>\n                              {type}\n                            </MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </TableCell>\n                    <TableCell>\n                      <TextField\n                        fullWidth\n                        size='small'\n                        variant='outlined'\n                        aria-label='empty textarea'\n                        value={items.name}\n                        name='name'\n                        onChange={(event) =>\n                          handleCharacterChange(event, index)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <TextField\n                        multiline\n                        fullWidth\n                        size='small'\n                        variant='outlined'\n                        aria-label='empty textarea'\n                        value={items.description}\n                        name='description'\n                        onChange={(event) =>\n                          handleCharacterChange(event, index)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell align='center'>\n                      <TextField\n                        type='number'\n                        fullWidth\n                        size='small'\n                        variant='outlined'\n                        min={0}\n                        name='armour'\n                        value={items.armour}\n                        onChange={(event) =>\n                          handleCharacterChange(event, index)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell align='center'>\n                      <FormControl\n                        variant='outlined'\n                        size='small'\n                        className={classes.formControl}>\n                        <Select\n                          tabIndex={-1}\n                          value={items.range}\n                          name='range'\n                          onChange={(event) =>\n                            handleCharacterChange(event, index)\n                          }>\n                          {itemRanges.map((range) => (\n                            <MenuItem key={range} value={range}>\n                              {range}\n                            </MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </TableCell>\n                    <TableCell align='center'>\n                      <TextField\n                        type='number'\n                        fullWidth\n                        size='small'\n                        variant='outlined'\n                        min={0}\n                        name='cost'\n                        value={items.cost}\n                        onChange={(event) =>\n                          handleCharacterChange(event, index)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell align='center'>\n                      <TextField\n                        type='number'\n                        fullWidth\n                        size='small'\n                        variant='outlined'\n                        min={0}\n                        name='uses'\n                        value={items.uses}\n                        onChange={(event) =>\n                          handleCharacterChange(event, index)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <FormControl className={classes.formControl}>\n                        <Select\n                          multiple\n                          value={items.tags}\n                          name='tags'\n                          onChange={(event) =>\n                            handleCharacterChange(event, index)\n                          }\n                          input={<Input />}\n                          renderValue={(selected) => (\n                            <div className={classes.chips}>\n                              {selected.map((value) => (\n                                <Chip\n                                  key={value}\n                                  label={value}\n                                  className={classes.chip}\n                                />\n                              ))}\n                            </div>\n                          )}\n                          MenuProps={MenuProps}>\n                          {itemTags.map((name) => (\n                            <MenuItem key={name} value={name}>\n                              {name}\n                            </MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </TableCell>\n                    <TableCell>\n                      <TextField\n                        type='number'\n                        fullWidth\n                        size='small'\n                        variant='outlined'\n                        min={0}\n                        value={items.weight}\n                        name='weight'\n                        onChange={(event) =>\n                          handleCharacterChange(event, index)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        aria-label='delete'\n                        onClick={() => deleteItemRow(index)}>\n                        <Delete />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            <TableRow>\n              <TableCell align='right' colSpan='8'>\n                LOAD\n              </TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  error={validateLoad()}\n                  size='small'\n                  variant='outlined'\n                  name='totalLoad'\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  value={totalLoad() + ' / ' + maxLoad()}\n                />\n              </TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { Add, Delete } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ExpandMore } from '@material-ui/icons';\nimport {\n  Checkbox,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function CharacterClassFeatures() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n\n  // State manipulation\n  const updateFeatureCheckbox = (index) => (e) => {\n    let newFeatures = [...character.class_features]; // copying the old array\n    newFeatures[index] = {\n      ...character.class_features[index],\n      checkbox: e.target.checked,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      class_features: newFeatures,\n    })); // set array back\n  };\n\n  const updateFeature = (index) => (e) => {\n    let newFeatures = [...character.class_features]; // copying the old array\n    newFeatures[index] = {\n      ...character.class_features[index],\n      feature: e.target.value,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      class_features: newFeatures,\n    })); // set array back\n  };\n\n  // Delete rows in the table\n  const deleteFeatureRow = (index) => {\n    const newFeatures = [...character.class_features]; // copying the old array\n    if (character.class_features.length !== 1) {\n      //don't delete last row\n      newFeatures.splice(index, 1); // remove item from array\n      setCharacter((character) => ({\n        ...character,\n        class_features: newFeatures,\n      })); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  };\n\n  // Add rows in the table\n  const addFeatureRow = () => {\n    const newFeatures = [\n      ...character.class_features,\n      { feature: '', checkbox: false },\n    ]; // copying the old array and adding blank item\n    setCharacter((character) => ({\n      ...character,\n      class_features: newFeatures,\n    })); // set array back\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label='simple table'>\n        <TableHead>\n          <TableRow>\n            <TableCell colSpan='2' align='center'>\n              Feature\n            </TableCell>\n            <TableCell>\n              <IconButton aria-label='add' onClick={() => addFeatureRow()}>\n                <Add />\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {character.class_features &&\n            character.class_features.map((class_features, index) => {\n              return (\n                <TableRow key={index}>\n                  <TableCell>\n                    <Checkbox\n                      name={'class_feature_checkbox' + index}\n                      checked={!!class_features.checkbox}\n                      onChange={updateFeatureCheckbox(index)}\n                      color='primary'\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      multiline\n                      fullWidth\n                      variant='outlined'\n                      aria-label='empty textarea'\n                      placeholder='Add any Class Features here (e.g. Spell Lists, Poison Recipes, Druid Balance, Paladin Quests or anything else!)'\n                      value={class_features.feature}\n                      name={'class_feature' + index}\n                      onChange={updateFeature(index)}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <IconButton\n                      aria-label='delete'\n                      onClick={() => deleteFeatureRow(index)}>\n                      <Delete />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { standard_moves } from 'data/standardMovesList';\n\nexport default function CharacterStandardMoves() {\n  return (\n    <>\n      {standard_moves.map((data, index) => {\n        return (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              {data.name}\n            </AccordionSummary>\n            <AccordionDetails>\n              <p dangerouslySetInnerHTML={{ __html: data.description }}></p>\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { advanced_moves } from 'data/advancedMovesList';\n\nexport default function CharacterAdvancedMoves() {\n  return (\n    <>\n      {advanced_moves.map((data, index) => {\n        return (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              {data.name}\n            </AccordionSummary>\n            <AccordionDetails>\n              <p dangerouslySetInnerHTML={{ __html: data.description }}></p>\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\n\nexport default function CharacterClassStartingMoves() {\n  const { character } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  function getMove(move, field) {\n    return class_details[dwc].moves.find((x) => x.name === move)[field];\n  }\n\n  return (\n    <>\n      {character.moves.map((data, index) => {\n        return (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              {data} ({getMove(data, 'level')})\n            </AccordionSummary>\n            <AccordionDetails>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: getMove(data, 'description'),\n                }}></p>\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Box, Tab, Tabs } from '@material-ui/core';\nimport CharacterStandardMoves from 'components/character/CharacterStandardMoves';\nimport CharacterAdvancedMoves from 'components/character/CharacterAdvancedMoves';\nimport CharacterClassMoves from 'components/character/CharacterClassMoves';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}>\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function CharacterMoves() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleTabChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Tabs value={value} onChange={handleTabChange}>\n          <Tab label='Standard' {...a11yProps(0)} />\n          <Tab label='Advanced' {...a11yProps(1)} />\n          <Tab label='Class' {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <CharacterStandardMoves />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <CharacterAdvancedMoves />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <CharacterClassMoves />\n      </TabPanel>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: 126,\n    textAlign: 'center',\n  },\n  textField: {\n    width: 126,\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n}));\n\nexport default function DiceRoller() {\n  const [dice, setDice] = useState();\n  const [diceNum, setDiceNum] = useState();\n  const [rollResult, setRollResult] = useState(0);\n  const classes = useStyles();\n\n  function singleRoll(sides) {\n    const roll = Math.floor(Math.random() * sides) + 1;\n    return roll;\n  }\n\n  function rollDice(sides, diceNum) {\n    sides = parseInt(sides, 10);\n    diceNum = parseInt(diceNum, 10);\n    let total = 0;\n    for (let i = 0; i < diceNum; i++) {\n      total = total + singleRoll(sides);\n    }\n    return setRollResult(total);\n  }\n\n  return (\n    <>\n      <FormControl\n        variant='outlined'\n        size='small'\n        className={classes.formControl}>\n        <InputLabel>Dice</InputLabel>\n        <Select\n          tabIndex={-1}\n          defaultValue='null'\n          label='dice'\n          onChange={(event) => {\n            setDice(event.target.value);\n          }}>\n          <MenuItem disabled='disabled' value='null' hidden='hidden' />\n          <MenuItem value='6'>d6</MenuItem>\n          <MenuItem value='8'>d8</MenuItem>\n          <MenuItem value='10'>d10</MenuItem>\n        </Select>\n      </FormControl>\n      <br />\n      <FormControl\n        variant='outlined'\n        size='small'\n        className={classes.formControl}>\n        <InputLabel>Number</InputLabel>\n        <Select\n          tabIndex={-1}\n          defaultValue='null'\n          label='Number'\n          onChange={(event) => {\n            setDiceNum(event.target.value);\n          }}>\n          <MenuItem disabled='disabled' value='null' hidden='hidden' />\n          <MenuItem value='1'>1</MenuItem>\n          <MenuItem value='2'>2</MenuItem>\n          <MenuItem value='3'>3</MenuItem>\n        </Select>\n      </FormControl>\n      <Button onClick={() => rollDice(dice, diceNum)}>Roll</Button>\n      <TextField\n        variant='outlined'\n        size='small'\n        label='Result'\n        className={classes.textField}\n        value={rollResult}\n      />\n    </>\n  );\n}\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useContext,\n  useMemo,\n} from 'react';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport PropTypes from 'prop-types';\nimport CharacterState from 'components/contexts/CharacterState';\nimport AuthState from 'components/contexts/AuthState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Box, Tab, Tabs } from '@material-ui/core';\nimport CharacterSheetHeader from 'components/character/CharacterSheetHeader';\nimport CharacterBasicDetails from 'components/character/CharacterBasicDetails';\nimport CharacterBasicStats from 'components/character/CharacterBasicStats';\nimport CharacterAbilities from 'components/character/CharacterAbilities';\nimport CharacterBonds from 'components/character/CharacterBonds';\nimport CharacterGear from 'components/character/CharacterGear';\nimport CharacterClassFeatures from 'components/character/CharacterClassFeatures';\nimport CharacterMoves from 'components/character/CharacterMoves';\nimport DiceRoller from 'components/other/DiceRoller';\n\n// Tab functions\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}>\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\n// Debounce function\nconst debounce = (callback, delay) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => callback(...args), delay);\n  };\n};\n\nexport default function CharacterSheet() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [character, setCharacter] = useState({});\n  const { campaignURL, characterURL } = useParams();\n  const { currentUser } = useContext(AuthState);\n\n  const handleTabChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  // Subscribe to Character Data\n  useEffect(() => {\n    if (campaignURL && characterURL) {\n      const unsubscribe = FirebaseService.streamCharacter(\n        campaignURL,\n        characterURL,\n        {\n          next: (documentSnapshot) => {\n            setCharacter(documentSnapshot.data());\n          },\n          error: (error) => {\n            alert('Failed to load character data correctly, see console error');\n            console.error('Error loading document:', error);\n          },\n        }\n      );\n      return unsubscribe;\n    }\n  }, [campaignURL, characterURL, setCharacter]);\n\n  // Debounced Save\n  const debouncedSave = useCallback(\n    debounce(\n      (character) =>\n        FirebaseService.saveCharacter(campaignURL, characterURL, character)\n          .then(() => {\n            console.info('Saved Character:', character);\n          })\n          .catch((error) => {\n            alert('Failed to save character data correctly, see console error');\n            console.error('Error saving document:', error);\n          }),\n      5000\n    ),\n    []\n  );\n\n  // Save changes to character\n  useEffect(() => {\n    if (\n      character &&\n      Object.keys(character).length >= 1 &&\n      currentUser.email === character.owner\n    ) {\n      console.info('CharacterState:', character);\n      debouncedSave(character);\n    }\n  }, [character]); //Only trigger effect on change of character\n\n  const ctx = useMemo(() => ({ character, setCharacter }), [character]); //Memo-ised state for performance\n\n  return (\n    <CharacterState.Provider value={ctx}>\n      <CharacterSheetHeader />\n      <br />\n      <div className={classes.root}>\n        <CharacterBasicStats />\n        <br />\n        <CharacterAbilities />\n        <br />\n        <AppBar position='static'>\n          <Tabs value={value} onChange={handleTabChange}>\n            <Tab label='Character' {...a11yProps(0)} />\n            <Tab label='Bonds' {...a11yProps(1)} />\n            <Tab label='Features' {...a11yProps(2)} />\n            <Tab label='Gear' {...a11yProps(3)} />\n            <Tab label='Moves' {...a11yProps(4)} />\n            <Tab label='Dice Roller' {...a11yProps(5)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <CharacterBasicDetails />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <CharacterBonds />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <CharacterClassFeatures />\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          <CharacterGear />\n        </TabPanel>\n        <TabPanel value={value} index={4}>\n          <CharacterMoves />\n        </TabPanel>\n        <TabPanel value={value} index={5}>\n          <DiceRoller />\n        </TabPanel>\n      </div>\n    </CharacterState.Provider>\n  );\n}\n","import { createContext } from 'react';\n\nconst CampaignState = createContext();\n\nexport default CampaignState;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { Breadcrumbs } from '@material-ui/core';\n\nexport default function CampaignHeader() {\n  const { campaignURL } = useParams();\n\n  return (\n    <div>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <Link to='/dw-react'>Home</Link>\n        <p>{campaignURL}</p>\n      </Breadcrumbs>\n      <h1>Campaign: {campaignURL}</h1>\n    </div>\n  );\n}\n","import { createContext } from 'react';\n\nconst CreateCharacterState = createContext();\n\nexport default CreateCharacterState;\n","import React, { useContext, useState } from 'react';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport AuthState from 'components/contexts/AuthState';\nimport CreateCharacterState from 'components/contexts/CreateCharacterState';\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormLabel,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  Step,\n  Stepper,\n  StepLabel,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { class_details } from 'data/classDetails';\nimport { dw_classes } from 'data/classList';\nimport { races } from 'data/raceList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return [\n    'Choose',\n    'Select Race Attribute',\n    'Select Gear',\n    'Select Moves',\n    'Select Bonds',\n  ];\n}\n\nexport default function CampaignDetails() {\n  const classes = useStyles();\n  const { open, setOpen } = useContext(CreateCharacterState);\n  const [charaName, setCharaName] = useState('');\n  const [charaClass, setCharaClass] = useState('');\n  const [charaRace, setCharaRace] = useState('');\n  const [charaAlignment, setCharaAlignment] = useState('');\n  const [charaRaceAttribute, setCharaRaceAttribute] = useState('');\n  const { currentUser } = useContext(AuthState);\n  const { campaignURL } = useParams();\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleRadioChange = (event) => {\n    setCharaRaceAttribute(event.target.value);\n  };\n\n  const handleCancel = () => {\n    setCharaName('');\n    setCharaClass('');\n    setCharaRace('');\n    setCharaAlignment('');\n    setCharaRaceAttribute('');\n    setActiveStep(0);\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    saveCharacter();\n    setCharaName('');\n    setCharaClass('');\n    setCharaRace('');\n    setCharaAlignment('');\n    setCharaRaceAttribute('');\n    setOpen(false);\n  };\n\n  const alignmentAttribute = () => {\n    if (charaClass && charaAlignment) {\n      return class_details[charaClass].alignments.find(\n        (x) => x.alignment === charaAlignment\n      ).attribute;\n    } else {\n      return '';\n    }\n  };\n\n  const classDescription = () => {\n    if (charaClass) {\n      return class_details[charaClass].description;\n    } else {\n      return '';\n    }\n  };\n\n  const gearDetails = () => {\n    if (charaClass) {\n      return class_details[charaClass].gear_details;\n    } else {\n      return '';\n    }\n  };\n\n  // Create New Character\n  const saveCharacter = () => {\n    if (\n      campaignURL &&\n      charaName &&\n      charaClass &&\n      charaAlignment &&\n      charaRace &&\n      charaRaceAttribute\n    ) {\n      let startingMoves = class_details[charaClass].moves.filter(\n        (x) => x.level === 'starting'\n      );\n      startingMoves = startingMoves.map((moves) => moves.name);\n\n      //don't save unless details present\n      FirebaseService.saveCharacter(campaignURL, charaName, {\n        abilities: [\n          { category: 'STR', score: '1', affliction: 'Unafflicted' },\n          { category: 'DEX', score: '1', affliction: 'Unafflicted' },\n          { category: 'CON', score: '1', affliction: 'Unafflicted' },\n          { category: 'INT', score: '1', affliction: 'Unafflicted' },\n          { category: 'WIS', score: '1', affliction: 'Unafflicted' },\n          { category: 'CHA', score: '1', affliction: 'Unafflicted' },\n        ],\n        alignment: charaAlignment,\n        armour: '0',\n        backstory: '',\n        bonds: [{ bond: '' }],\n        class_features: [{ feature: '', checkbox: false }],\n        dw_class: charaClass,\n        full_name: '',\n        funds: '0',\n        hp: '',\n        items: [\n          {\n            name: '',\n            description: '',\n            type: '',\n            range: '',\n            cost: '',\n            weight: '',\n            uses: '',\n            tags: [],\n          },\n        ],\n        level: '1',\n        look: '',\n        moves: startingMoves,\n        owner: currentUser.email,\n        race: charaRace,\n        race_attribute: charaRaceAttribute,\n        xp: '0',\n      })\n        .then(() => {\n          console.info('Created Character:', charaName);\n        })\n        .catch((error) => {\n          alert('Failed to create character, see console error');\n          console.error('Error creating document:', error);\n        });\n    } else {\n      alert('Cannot save blank character');\n    }\n  };\n\n  function getStepContent(stepIndex) {\n    switch (stepIndex) {\n      case 0:\n        return (\n          <>\n            <TextField\n              autoFocus={true}\n              margin='dense'\n              id='name'\n              label='Short Character Name'\n              fullWidth\n              onChange={(event) => setCharaName(event.target.value)}\n            />\n            <br />\n            <FormControl variant='outlined' className={classes.formControl}>\n              <InputLabel>Class</InputLabel>\n              <Select\n                label='Class'\n                value={charaClass}\n                name='class'\n                onChange={(event) => setCharaClass(event.target.value)}>\n                {dw_classes.map((data, key) => {\n                  return (\n                    <MenuItem value={data} key={key}>\n                      {data}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n              <p dangerouslySetInnerHTML={{ __html: classDescription() }} />\n            </FormControl>\n            <br />\n            <FormControl variant='outlined' className={classes.formControl}>\n              <InputLabel>Race</InputLabel>\n              <Select\n                label='Race'\n                value={charaRace}\n                name='race'\n                onChange={(event) => setCharaRace(event.target.value)}>\n                {races.map((data, key) => {\n                  return (\n                    <MenuItem value={data} key={key}>\n                      {data}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n            <br />\n            <FormControl variant='outlined' className={classes.formControl}>\n              <InputLabel>Alignment</InputLabel>\n              <Select\n                label='Alignment'\n                value={charaAlignment}\n                name='alignment'\n                onChange={(event) => setCharaAlignment(event.target.value)}>\n                {charaClass &&\n                  class_details[charaClass].alignments.map((data, key) => {\n                    return (\n                      <MenuItem value={data.alignment} key={key}>\n                        {data.alignment}\n                      </MenuItem>\n                    );\n                  })}\n              </Select>\n              <p dangerouslySetInnerHTML={{ __html: alignmentAttribute() }} />\n            </FormControl>\n          </>\n        );\n      case 1:\n        return (\n          <FormControl component='fieldset' className={classes.formControl}>\n            <RadioGroup\n              aria-label='race attribute'\n              name='race attribute'\n              value={charaRaceAttribute}\n              onChange={handleRadioChange}>\n              {charaClass &&\n                class_details[charaClass].race_attributes.map((data, key) => {\n                  return (\n                    <FormControlLabel\n                      value={data.attribute}\n                      control={<Radio />}\n                      label={data.attribute + ' (' + data.race + ')'}\n                    />\n                  );\n                })}\n            </RadioGroup>\n          </FormControl>\n        );\n      case 2:\n        return <p dangerouslySetInnerHTML={{ __html: gearDetails() }} />;\n      case 3:\n        return 'This is the bit I really care about!';\n      case 4:\n        return (\n          <div className={classes.root}>\n            <FormControl component='fieldset' className={classes.formControl}>\n              <FormLabel component='legend'>\n                Choose some optionally suggested bonds\n              </FormLabel>\n              <FormGroup>\n                {charaClass &&\n                  class_details[charaClass].suggested_bonds.map((data) => {\n                    return (\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            //checked={gilad}\n                            //onChange={handleChange}\n                            name={data}\n                          />\n                        }\n                        label={data}\n                      />\n                    );\n                  })}\n              </FormGroup>\n            </FormControl>\n          </div>\n        );\n      default:\n        return 'Unknown stepIndex';\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleCancel}>\n      <DialogContent>\n        <div className={classes.root}>\n          <Stepper activeStep={activeStep} alternativeLabel>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <div>\n            <div>\n              <Typography className={classes.instructions}>\n                {getStepContent(activeStep)}\n              </Typography>\n            </div>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.backButton}>\n              Back\n            </Button>\n            {activeStep === steps.length - 1 ? (\n              <Button variant='contained' color='primary' onClick={handleSave}>\n                Create Character\n              </Button>\n            ) : (\n              <Button variant='contained' color='primary' onClick={handleNext}>\n                Next\n              </Button>\n            )}\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import React, { useContext, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CampaignState from 'components/contexts/CampaignState';\nimport CreateCharacterState from 'components/contexts/CreateCharacterState';\nimport CreateCharacter from 'components/campaign/CreateCharacter';\nimport { Add, Delete } from '@material-ui/icons';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function CampaignDetails() {\n  const classes = useStyles();\n  const { campaign } = useContext(CampaignState);\n  const { campaignURL } = useParams();\n  const [open, setOpen] = useState(false);\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  // Delete Character\n  const deleteCharacter = (campaign, character) => {\n    if (campaign && character) {\n      //don't save unless details present\n      FirebaseService.deleteCharacter(campaign, character)\n        .then(() => {\n          console.info('Deleted Character:', character);\n        })\n        .catch((error) => {\n          alert('Failed to delete character, see console error');\n          console.error('Error deleting document:', error);\n        });\n    } else {\n      alert('Cannot delete blank character');\n    }\n  };\n\n  return (\n    <CreateCharacterState.Provider value={ctx}>\n      <Grid container spacing={3}>\n        {campaign.campaign &&\n          campaign.campaign.map((campaign, index) => {\n            return (\n              <Grid item xs={3} key={index}>\n                <Card className={classes.root}>\n                  <CardHeader\n                    action={\n                      <IconButton\n                        aria-label='delete'\n                        onClick={() =>\n                          deleteCharacter(campaignURL, campaign.character)\n                        }>\n                        <Delete />\n                      </IconButton>\n                    }\n                    title={\n                      <Link\n                        to={\n                          '/dw-react/' + campaignURL + '/' + campaign.character\n                        }>\n                        {campaign.character}\n                      </Link>\n                    }\n                    subheader={campaign.characterData.owner}\n                  />\n                  <CardContent>\n                    <Typography variant='body1' component='p'>\n                      {campaign.characterData.dw_class}\n                    </Typography>\n                    <Typography variant='body1' component='p'>\n                      {campaign.characterData.race}\n                    </Typography>\n                    <Typography variant='body1' component='p'>\n                      {campaign.characterData.alignment}\n                    </Typography>\n                    <br />\n                    <Typography variant='body2' component='p'>\n                      HP: {campaign.characterData.hp}\n                    </Typography>\n                    <Typography variant='body2' component='p'>\n                      XP: {campaign.characterData.xp}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            );\n          })}\n        <Grid item xs={3}>\n          <Card className={classes.root}>\n            <CardHeader title='Add Character' />\n            <CardContent>\n              <IconButton aria-label='add' onClick={handleClickOpen}>\n                <Add />\n              </IconButton>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <CreateCharacter />\n    </CreateCharacterState.Provider>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CampaignState from 'components/contexts/CampaignState';\nimport CampaignHeader from 'components/campaign/CampaignHeader';\nimport CampaignDetails from 'components/campaign/CampaignDetails';\n\nexport default function CampaignSheet() {\n  const [campaign, setCampaign] = useState({});\n  const { campaignURL } = useParams();\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    if (campaignURL) {\n      const unsubscribe = FirebaseService.streamCharacters(campaignURL, {\n        next: (querySnapshot) => {\n          const updatedCharacterList = querySnapshot.docs.map((docSnapshot) => {\n            return {\n              character: docSnapshot.id,\n              characterData: docSnapshot.data(),\n            };\n          });\n          setCampaign((campaign) => ({ campaign: updatedCharacterList }));\n        },\n        error: (error) => {\n          alert('Failed to load campaign data correctly, see console error');\n          console.error('Error loading document:', error);\n        },\n      });\n      return unsubscribe;\n    }\n  }, [campaignURL, setCampaign]);\n\n  useEffect(() => {\n    console.info('Campaign State:', campaign);\n  }, [campaign]); //Only log to console if state actually changes\n\n  const ctx = useMemo(() => ({ campaign, setCampaign }), [campaign]); //Memo-ised state for performance\n\n  return (\n    <CampaignState.Provider value={ctx}>\n      <CampaignHeader />\n      <br />\n      <CampaignDetails />\n    </CampaignState.Provider>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Container, Typography } from '@material-ui/core';\nimport ErrorPage from 'components/ErrorPage';\nimport Homepage from 'components/homepage/Homepage';\nimport AppHeader from 'components/AppHeader';\nimport CharacterSheet from 'components/character/CharacterSheet';\nimport Campaign from 'components/campaign/Campaign';\nimport '@fontsource/roboto';\n\nexport default function App() {\n  return (\n    <Typography component={'span'}>\n      <Container>\n        <Router>\n          <AppHeader />\n          <Switch>\n            <Route\n              exact={true}\n              path='/dw-react/:campaignURL/:characterURL'\n              component={CharacterSheet}\n            />\n            <Route\n              exact={true}\n              path='/dw-react/:campaignURL'\n              component={Campaign}\n            />\n            <Route exact={true} path='/dw-react' component={Homepage} />\n            <Route component={ErrorPage} />\n          </Switch>\n        </Router>\n      </Container>\n    </Typography>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport * as FirebaseService from 'services/firebase';\nimport AuthState from 'components/contexts/AuthState';\nimport { Button } from '@material-ui/core';\n\nfunction Index() {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const ctx = useMemo(() => ({ currentUser }), [currentUser]);\n\n  useEffect(() => {\n    const unsubscribe = FirebaseService.auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n\n  return (\n    <AuthState.Provider value={ctx}>\n      {currentUser ? (\n        <App />\n      ) : (\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={FirebaseService.SignInWithGoogle}>\n          SIGN IN WITH GOOGLE\n        </Button>\n      )}\n    </AuthState.Provider>\n  );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Index />, rootElement);\n"],"sourceRoot":""}