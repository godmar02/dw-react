{"version":3,"sources":["components/ErrorPage.js","services/firebase.js","components/homepage/HomepageHeader.js","components/contexts/HomepageState.js","components/contexts/AuthState.js","components/homepage/HomepageDetails.js","components/homepage/Homepage.js","components/contexts/ProfileState.js","components/profile/ProfilePicture.js","components/profile/ProfileDetails.js","components/profile/UserProfile.js","components/AppHeader.js","components/contexts/CharacterState.js","components/character/CharacterSheetHeader.js","components/character/CharacterBasicDetails.js","components/character/CharacterType.js","components/character/CharacterDamage.js","components/character/CharacterArmour.js","components/character/CharacterFunds.js","components/character/CharacterHP.js","components/character/CharacterLevel.js","components/character/CharacterXP.js","components/character/CharacterBasicStats.js","components/character/CharacterAbilities.js","components/character/CharacterBonds.js","components/character/CharacterGear.js","components/character/CharacterClassFeatures.js","components/character/CharacterStandardMoves.js","components/character/CharacterAdvancedMoves.js","components/character/CharacterClassMoves.js","components/character/CharacterMoves.js","components/other/DiceRoller.js","components/character/CharacterSheet.js","components/contexts/CampaignState.js","components/campaign/CampaignHeader.js","components/contexts/CreateCharacterState.js","components/campaign/CreateCharacter.js","components/campaign/CampaignDetails.js","components/campaign/Campaign.js","components/App.js","index.js"],"names":["ErrorPage","firebase","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","provider","GoogleAuthProvider","SignInWithGoogle","signInWithPopup","setCustomParameters","prompt","HomepageHeader","Breadcrumbs","aria-label","HomepageState","createContext","AuthState","useStyles","makeStyles","table","minWidth","HomepageDetails","classes","currentUser","useContext","useState","open","setOpen","campaignName","setCampaignName","campaigns","handleCancel","saveCampaign","campaign","owner","email","collection","doc","set","then","console","info","catch","error","alert","deleteCampaign","delete","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","IconButton","onClick","Add","TableBody","map","index","to","id","Delete","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","onChange","event","target","value","DialogActions","Button","color","Homepage","setCampaigns","useEffect","observer","next","querySnapshot","updatedCampaignList","docs","docSnapshot","data","onSnapshot","log","ctx","useMemo","Provider","ProfileState","ProfilePicture","show","setShow","Avatar","src","photoURL","alt","ProfileDetails","style","border","WebkitBorderRadius","borderRadius","display","position","top","right","backgroundColor","textAlign","font","letterSpacing","lineHeight","fontWeight","padding","displayName","variant","FirebaseService","signOut","UserProfile","theme","root","flexGrow","menuButton","marginRight","spacing","title","AppHeader","AppBar","Toolbar","edge","Menu","Typography","CharacterState","CharacterSheetHeader","useParams","campaignURL","characterURL","character","dw_class","race","alignment","CharacterBasicDetails","setCharacter","handleCharacterChange","name","size","multiline","placeholder","full_name","backstory","look","formControl","selectEmpty","marginTop","CharacterType","dwc","alig","width","InputProps","readOnly","race_attribute","class_details","alignments","find","x","attribute","textField","CharacterDamage","damage","CharacterArmour","type","min","armour","CharacterFunds","funds","CharacterHP","hp","abilities","base_hp","parseInt","category","score","CharacterLevel","level","CharacterXP","xp","CharacterBasicStats","card","cardHeader","textFieldBold","fontSize","CharacterAbilities","updateAbilityScore","e","newAbilities","updateAbilityAffliction","affliction","abilityModifier","abilityScore","abilityAffliction","baseModifier","indexOf","modifier","Grid","container","justify","ab","item","Card","CardHeader","CardContent","max","FormControl","Select","tabIndex","ability_afflictions","key","MenuItem","heading","typography","pxToRem","fontWeightRegular","CharacterBonds","updateBond","newBonds","bonds","bond","align","addBondsRow","length","splice","deleteBondRow","chips","flexWrap","chip","maxWidth","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","CharacterGear","newItems","items","colSpan","description","weight","range","cost","uses","tags","addItemRow","itemTypes","itemRanges","multiple","input","Input","renderValue","selected","Chip","itemTags","deleteItemRow","reduce","totalLoad","str","base_load","maxLoad","CharacterClassFeatures","updateFeatureCheckbox","newFeatures","class_features","checkbox","checked","updateFeature","feature","addFeatureRow","Checkbox","deleteFeatureRow","CharacterStandardMoves","standard_moves","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","dangerouslySetInnerHTML","__html","CharacterAdvancedMoves","advanced_moves","CharacterClassStartingMoves","TabPanel","props","children","other","role","hidden","Box","p","a11yProps","palette","background","paper","CharacterMoves","React","setValue","Tabs","newValue","Tab","DiceRoller","dice","setDice","diceNum","setDiceNum","rollResult","setRollResult","singleRoll","sides","Math","floor","random","InputLabel","defaultValue","disabled","total","i","rollDice","CharacterSheet","documentSnapshot","debouncedSave","useCallback","callback","delay","timer","args","clearTimeout","setTimeout","debounce","Object","keys","CampaignState","CampaignHeader","CreateCharacterState","CampaignDetails","charaName","setCharaName","charaClass","setCharaClass","charaRace","setCharaRace","charaAlignment","setCharaAlignment","charaRaceAttribute","setCharaRaceAttribute","saveCharacter","dwClass","raceAttribute","dw_classes","races","FormLabel","RadioGroup","race_attributes","FormControlLabel","control","Radio","pos","marginBottom","deleteCharacter","xs","action","subheader","characterData","CampaignSheet","setCampaign","updatedCharacterList","App","Container","exact","path","Campaign","Index","setCurrentUser","onAuthStateChanged","user","rootElement","document","getElementById","ReactDOM","render"],"mappings":"iuVAEe,SAASA,IACtB,OAAO,uD,0BCYTC,IAASC,cAVc,CACrBC,OAAQC,0CACRC,WAAYD,sCACZE,UAAWF,sBACXG,YAAaH,6EACbI,cAAeJ,kCACfK,kBAAmBL,eACnBM,MAAON,4CACPO,cAAeP,iBAGV,IAAMQ,EAAOX,IAASW,OAChBC,EAAKZ,IAASa,YAGrBC,EAAW,IAAId,IAASW,KAAKI,mBAI5B,SAASC,IACdL,EAAKM,gBAAgBH,GAJvBA,EAASI,oBAAoB,CAC3BC,OAAQ,mBAoHKnB,EAAf,EAAeA,I,SCvIA,SAASoB,IACtB,OACE,gCACE,cAACC,EAAA,EAAD,CAAaC,aAAW,aAAxB,SACE,uCAEF,uDCPN,IAEeC,EAFOC,0BCEPC,EAFGD,0B,kKCuBZE,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OAIC,SAASC,IACtB,IAAMC,EAAUL,IACRM,EAAgBC,qBAAWR,GAA3BO,YAFgC,EAGhBE,oBAAS,GAHO,mBAGjCC,EAHiC,KAG3BC,EAH2B,OAIAF,mBAAS,IAJT,mBAIjCG,EAJiC,KAInBC,EAJmB,KAKhCC,EAAcN,qBAAWV,GAAzBgB,UAMFC,EAAe,WACnBJ,GAAQ,IASJK,EAAe,WJrBhB,IAAwBC,EAAUC,EIsBjCN,GJtBuBK,EIwBML,EJxBIM,EIwBUX,EAAYY,MJvBtDhC,EAAGiC,WAAW,aAAaC,IAAIJ,GAAUK,IAAI,CAAEJ,MAAOA,KIwBtDK,MAAK,WACJC,QAAQC,KAAK,oBAAqBb,MAEnCc,OAAM,SAACC,GACNC,MAAM,gDACNJ,QAAQG,MAAM,2BAA4BA,MAG9CC,MAAM,+BAKJC,EAAiB,SAACjB,GJsDnB,IAAwBK,EIrDvBL,GJqDuBK,EInDML,EJoD5BzB,EAAGiC,WAAW,aAAaC,IAAIJ,GAAUa,UInDzCP,MAAK,WACJC,QAAQC,KAAK,oBAAqBb,MAEnCc,OAAM,SAACC,GACNC,MAAM,gDACNJ,QAAQG,MAAM,2BAA4BA,MAG9CC,MAAM,iCAIV,OACE,qCACE,cAACG,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,UAAW7B,EAAQH,MAAON,aAAW,eAA5C,UACE,cAACuC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAY1C,aAAW,MAAM2C,QAxDnB,WACtB7B,GAAQ,IAuDI,SACE,cAAC8B,EAAA,EAAD,aAKR,cAACC,EAAA,EAAD,UACG5B,EAAUA,WACTA,EAAUA,UAAU6B,KAAI,SAAC1B,EAAU2B,GACjC,OACE,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAMO,GAAI,aAAe5B,EAAS6B,GAAlC,SAAuC7B,EAAS6B,OAElD,cAACR,EAAA,EAAD,UAAYrB,EAASC,QACrB,cAACoB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE1C,aAAW,SACX2C,QAAS,kBAAMX,EAAeZ,EAAS6B,KAFzC,SAGE,cAACC,EAAA,EAAD,UATSH,aAkB3B,eAACI,EAAA,EAAD,CACEtC,KAAMA,EACNuC,QAASlC,EACTmC,kBAAgB,oBAHlB,UAIE,cAACC,EAAA,EAAD,CAAaL,GAAG,oBAAhB,iCACA,eAACM,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,6HAIA,cAACC,EAAA,EAAD,CACEC,WAAW,EACXC,OAAO,QACPV,GAAG,OACHW,MAAM,gBACNC,WAAS,EACTC,SAAU,SAACC,GAAD,OAAW/C,EAAgB+C,EAAMC,OAAOC,aAGtD,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQxB,QAASzB,EAAckD,MAAM,UAArC,oBAGA,cAACD,EAAA,EAAD,CAAQxB,QAnGG,WACjB7B,GAAQ,GACRK,KAiGmCiD,MAAM,UAAnC,sCC3IK,SAASC,IAAY,IAAD,EACCzD,mBAAS,IADV,mBAC1BK,EAD0B,KACfqD,EADe,KAKjCC,qBAAU,WACR,ILuF4BC,EK3E5B,OL2E4BA,EKvFwB,CAClDC,KAAM,SAACC,GACL,IAAMC,EAAsBD,EAAcE,KAAK9B,KAAI,SAAC+B,GAClD,MAAO,CAAE5B,GAAI4B,EAAY5B,GAAI5B,MAAOwD,EAAYC,OAAOzD,UAEzDiD,GAAa,SAAClD,GAAD,MAAe,CAAEH,UAAW0D,OAE3C7C,MAAO,SAACA,GACNC,MAAM,oDACNJ,QAAQG,MAAM,sBAAuBA,KL+EpCxC,EAAGiC,WAAW,aAAawD,WAAWP,KK3E1C,CAACF,IAEJC,qBAAU,WACR5C,QAAQqD,IAAI,mBAAoB/D,KAC/B,CAACA,IAEJ,IAAMgE,EAAMC,mBAAQ,iBAAO,CAAEjE,eAAc,CAACA,IAE5C,OACE,eAAC,EAAckE,SAAf,CAAwBlB,MAAOgB,EAA/B,UACE,cAACnF,EAAD,IACA,uBACA,cAACU,EAAD,O,+BCjCS4E,EAFMlF,0B,SCGN,SAASmF,IAAkB,IAChC3E,EAAgBC,qBAAWR,GAA3BO,YAD+B,EAEbC,qBAAWyE,GAA7BE,EAF+B,EAE/BA,KAAMC,EAFyB,EAEzBA,QAGd,OACE,cAACC,EAAA,EAAD,CACEC,IAAK/E,EAAYgF,SACjBC,IAAI,iBACJhD,QAAS,kBANe4C,GAASD,MCHxB,SAASM,IAAkB,IAChClF,EAAgBC,qBAAWR,GAA3BO,YAER,OACE,sBACEmF,MAAO,CACLC,OAAQ,IACRC,mBAAoB,MACpBC,aAAc,MACdC,QAAS,eACTtC,OAAQ,IACRuC,SAAU,WACVC,IAAK,OACLC,MAAO,OACPhC,MAAO,UACPiC,gBAAiB,wBACjBC,UAAW,OACXC,KAAM,uCACNC,cAAe,QACfC,WAAY,OACZC,WAAY,OACZC,QAAS,WAjBb,UAmBE,qBACEd,MAAO,CACLzB,MAAO,SAFX,4BAMA,8BAAM1D,EAAYkG,cAClB,8BAAMlG,EAAYY,QAClB,cAAC6C,EAAA,EAAD,CACE0C,QAAQ,YACRzC,MAAM,UACNzB,QAAS,kBAAMmE,EAAqBC,WAHtC,wBC/BS,SAASC,IAAe,IAAD,EACZpG,oBAAS,GADG,mBAC7B0E,EAD6B,KACvBC,EADuB,KAE9BN,EAAMC,mBAAQ,iBAAO,CAAEI,OAAMC,aAAY,CAACD,IAEhD,OACE,eAAC,EAAaH,SAAd,CAAuBlB,MAAOgB,EAA9B,UACE,cAACI,EAAD,IADF,IACsBC,EAAO,cAACM,EAAD,IAAqB,QCLtD,IAAMxF,EAAYC,aAAW,SAAC4G,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAIC,SAASK,IACtB,IAAM/G,EAAUL,IAChB,OACE,qBAAKkC,UAAW7B,EAAQyG,KAAxB,SACE,cAACO,EAAA,EAAD,CAAQvB,SAAS,SAAjB,SACE,eAACwB,EAAA,EAAD,WACE,cAAChF,EAAA,EAAD,CACEiF,KAAK,QACLrF,UAAW7B,EAAQ2G,WACnBhD,MAAM,UACNpE,aAAW,OAJb,SAKE,cAAC4H,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,CAAY1F,UAAW,OAAQ0E,QAAQ,KAAKvE,UAAW7B,EAAQ8G,MAA/D,iEAGA,cAACP,EAAD,W,qBC9BKc,GAFQ5H,0B,8BCIR,SAAS6H,KAAwB,IAAD,EACPC,cAA9BC,EADqC,EACrCA,YAAaC,EADwB,EACxBA,aACbC,EAAcxH,qBAAWmH,IAAzBK,UAER,OACE,qCACE,eAACpI,EAAA,EAAD,CAAaC,aAAW,aAAxB,UACE,cAAC,IAAD,CAAMgD,GAAG,YAAT,kBACA,cAAC,IAAD,CAAMA,GAAI,aAAeiF,EAAzB,SAAuCA,IACvC,4BAAIC,OAEN,wCAAWA,KACX,wCAAWC,EAAUC,YACrB,uCAAUD,EAAUE,QACpB,4CAAeF,EAAUG,gB,aCPzBlI,GAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OAIC,SAASgI,KAAyB,IAAD,EACV5H,qBAAWmH,IAAvCK,EADsC,EACtCA,UAAWK,EAD2B,EAC3BA,aACb/H,EAAUL,KAEVqI,EAAwB,SAAC1E,GAC7B,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfyE,EAAO1E,EAAO0E,KACpBF,GAAa,SAACL,GAAD,oBAAC,gBAAoBA,GAArB,mBAAiCO,EAAOzE,QAGvD,OACE,cAAC/B,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,cAACC,EAAA,EAAD,CAAOC,UAAW7B,EAAQH,MAAOqI,KAAK,QAAQ3I,aAAW,eAAzD,SACE,eAAC6C,EAAA,EAAD,WACE,eAACL,EAAA,EAAD,WACE,2CACA,cAACC,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEmF,WAAS,EACT/E,WAAS,EACTgD,QAAQ,WACR7G,aAAW,iBACX6I,YAAY,qCACZ5E,MAAOkE,EAAUW,UACjBJ,KAAK,YACL5E,SAAU2E,SAIhB,eAACjG,EAAA,EAAD,WACE,2CACA,cAACC,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEmF,WAAS,EACT/E,WAAS,EACTgD,QAAQ,WACR7G,aAAW,iBACX6I,YAAY,4FACZ5E,MAAOkE,EAAUY,UACjBL,KAAK,YACL5E,SAAU2E,SAIhB,eAACjG,EAAA,EAAD,WACE,sCACA,cAACC,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEmF,WAAS,EACT/E,WAAS,EACTgD,QAAQ,WACR7G,aAAW,iBACX6I,YAAY,4CACZH,KAAK,OACLzE,MAAOkE,EAAUa,KACjBlF,SAAU2E,gB,+BC3DpBrI,GAAYC,aAAW,SAAC4G,GAAD,MAAY,CACvCgC,YAAa,CACXtF,OAAQsD,EAAMK,QAAQ,GACtB/G,SAAU,KAEZ2I,YAAa,CACXC,UAAWlC,EAAMK,QAAQ,IAE3BhH,MAAO,CACLC,SAAU,SAIC,SAAS6I,KACtB,IAAM3I,EAAUL,KACR+H,EAAcxH,qBAAWmH,IAAzBK,UACFkB,EAAMlB,EAAUC,SAChBkB,EAAOnB,EAAUG,UAWvB,OACE,cAACpG,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,cAACC,EAAA,EAAD,CAAOC,UAAW7B,EAAQH,MAAOqI,KAAK,QAAQ3I,aAAW,eAAzD,SACE,eAAC6C,EAAA,EAAD,WACE,eAACL,EAAA,EAAD,WACE,uCACA,cAACC,EAAA,EAAD,CACEoD,MAAO,CACL0D,MAAO,OAFX,SAIGpB,EAAUC,WAEb,cAAC3F,EAAA,EAAD,OAEF,eAACD,EAAA,EAAD,WACE,sCACA,cAACC,EAAA,EAAD,UAAY0F,EAAUE,OACtB,cAAC5F,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEmF,WAAS,EACT/E,WAAS,EACTgD,QAAQ,WACR7G,aAAW,iBACX0I,KAAK,gBACLc,WAAY,CACVC,UAAU,GAEZxF,MAAOkE,EAAUuB,sBAIvB,eAAClH,EAAA,EAAD,WACE,2CACA,cAACC,EAAA,EAAD,UAAY0F,EAAUG,YACtB,cAAC7F,EAAA,EAAD,UAEI,cAACgB,EAAA,EAAD,CACEmF,WAAS,EACT/E,WAAS,EACTgD,QAAQ,WACR7G,aAAW,iBACX0I,KAAK,qBACLc,WAAY,CACVC,UAAU,GAEZxF,MArDVkE,EAAUC,UAAYD,EAAUG,UAC3BqB,KAAcN,GAAKO,WAAWC,MAAK,SAACC,GAAD,OAAOA,EAAExB,YAAcgB,KAC9DS,UAEI,iBClCb,IAAM3J,GAAYC,aAAW,SAAC4G,GAAD,MAAY,CACvC+C,UAAW,CACTT,MAAO,GAEP,UAAW,CACTjD,UAAW,eAKF,SAAS2D,KAAmB,IACjC9B,EAAcxH,qBAAWmH,IAAzBK,UACFkB,EAAMlB,EAAUC,SAChB3H,EAAUL,KAUhB,OACE,cAACqD,EAAA,EAAD,CACEoD,QAAQ,WACR8B,KAAK,QACLrG,UAAW7B,EAAQuJ,UACnBtB,KAAK,SACL9E,MAAM,SACN4F,WAAY,CACVC,UAAU,GAEZxF,MAjBEkE,EAAUC,SACLuB,KAAcN,GAAKa,OAEnB,KCpBb,IAAM9J,GAAYC,aAAW,SAAC4G,GAAD,MAAY,CACvC+C,UAAW,CACTT,MAAO,GAEP,UAAW,CACTjD,UAAW,eAKF,SAAS6D,KAAmB,IAAD,EACJxJ,qBAAWmH,IAAvCK,EADgC,EAChCA,UAAWK,EADqB,EACrBA,aACb/H,EAAUL,KAShB,OACE,cAACqD,EAAA,EAAD,CACE2G,KAAK,SACLvD,QAAQ,WACR8B,KAAK,QACL/E,MAAM,SACNyG,IAAK,EACL3B,KAAK,SACLpG,UAAW7B,EAAQuJ,UACnB/F,MAAOkE,EAAUmC,QAAU,GAC3BxG,SAjB0B,SAACC,GAC7B,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfyE,EAAO1E,EAAO0E,KACpBF,GAAa,SAACL,GAAD,oBAAC,gBAAoBA,GAArB,mBAAiCO,EAAOzE,UClBzD,IAAM7D,GAAYC,aAAW,SAAC4G,GAAD,MAAY,CACvC+C,UAAW,CACTT,MAAO,GAEP,UAAW,CACTjD,UAAW,eAKF,SAASiE,KAAkB,IAAD,EACH5J,qBAAWmH,IAAvCK,EAD+B,EAC/BA,UAAWK,EADoB,EACpBA,aACb/H,EAAUL,KAShB,OACE,cAACqD,EAAA,EAAD,CACE2G,KAAK,SACLvD,QAAQ,WACR8B,KAAK,QACLrG,UAAW7B,EAAQuJ,UACnBtB,KAAK,QACL9E,MAAM,QACNyG,IAAK,EACLpG,MAAOkE,EAAUqC,OAAS,GAC1B1G,SAjB0B,SAACC,GAC7B,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfyE,EAAO1E,EAAO0E,KACpBF,GAAa,SAACL,GAAD,oBAAC,gBAAoBA,GAArB,mBAAiCO,EAAOzE,UCjBzD,IAAM7D,GAAYC,aAAW,SAAC4G,GAAD,MAAY,CACvC+C,UAAW,CACTT,MAAO,GAEP,UAAW,CACTjD,UAAW,UAEb3C,OAAQ,OAIG,SAAS8G,KAAe,IAAD,EACA9J,qBAAWmH,IAAvCK,EAD4B,EAC5BA,UAAWK,EADiB,EACjBA,aACba,EAAMlB,EAAUC,SAChB3H,EAAUL,KAwBhB,OACE,qCACE,cAACqD,EAAA,EAAD,CACE2G,KAAK,SACLvD,QAAQ,WACRjD,MAAM,KACNyG,IAAK,EACL1B,KAAK,QACLrG,UAAW7B,EAAQuJ,UACnBtB,KAAK,KACLzE,MAAOkE,EAAUuC,IAAM,GACvB5G,SAlBwB,SAACC,GAC7B,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfyE,EAAO1E,EAAO0E,KACpBF,GAAa,SAACL,GAAD,oBAAC,gBAAoBA,GAArB,mBAAiCO,EAAOzE,UAgBnD,cAACR,EAAA,EAAD,CACEoD,QAAQ,WACRjD,MAAM,SACN+E,KAAK,QACLrG,UAAW7B,EAAQuJ,UACnBtB,KAAK,QACLc,WAAY,CACVC,UAAU,GAEZxF,MA3CAkE,EAAUC,UAAYD,EAAUwC,UAEhC,MACChB,KAAcN,GAAKuB,QAClBC,SACE1C,EAAUwC,UAAUd,MAAK,SAACC,GAAD,MAAsB,QAAfA,EAAEgB,YAAoBC,MACtD,KAIC,QC5Bb,IAAM3K,GAAYC,aAAW,SAAC4G,GAAD,MAAY,CACvC+C,UAAW,CACTT,MAAO,GAEP,UAAW,CACTjD,UAAW,eAKF,SAAS0E,KAAkB,IAAD,EACHrK,qBAAWmH,IAAvCK,EAD+B,EAC/BA,UAAWK,EADoB,EACpBA,aACb/H,EAAUL,KAShB,OACE,cAACqD,EAAA,EAAD,CACE2G,KAAK,SACLvD,QAAQ,WACR8B,KAAK,QACL/E,MAAM,QACNtB,UAAW7B,EAAQuJ,UACnBK,IAAK,EACL3B,KAAK,QACLzE,MAAOkE,EAAU8C,OAAS,GAC1BnH,SAjB0B,SAACC,GAC7B,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfyE,EAAO1E,EAAO0E,KACpBF,GAAa,SAACL,GAAD,oBAAC,gBAAoBA,GAArB,mBAAiCO,EAAOzE,UClBzD,IAAM7D,GAAYC,aAAW,SAAC4G,GAAD,MAAY,CACvC+C,UAAW,CACTT,MAAO,GAEP,UAAW,CACTjD,UAAW,UAEb3C,OAAQ,OAIG,SAASuH,KAAe,IAAD,EACAvK,qBAAWmH,IAAvCK,EAD4B,EAC5BA,UAAWK,EADiB,EACjBA,aACb/H,EAAUL,KAkBhB,OACE,qCACE,cAACqD,EAAA,EAAD,CACE2G,KAAK,SACLvD,QAAQ,WACRjD,MAAM,KACNyG,IAAK,EACL1B,KAAK,QACLrG,UAAW7B,EAAQuJ,UACnBtB,KAAK,KACLzE,MAAOkE,EAAUgD,IAAM,GACvBrH,SAlBwB,SAACC,GAC7B,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfyE,EAAO1E,EAAO0E,KACpBF,GAAa,SAACL,GAAD,oBAAC,gBAAoBA,GAArB,mBAAiCO,EAAOzE,UAgBnD,cAACR,EAAA,EAAD,CACEoD,QAAQ,WACR8B,KAAK,QACL/E,MAAM,SACNtB,UAAW7B,EAAQuJ,UACnBtB,KAAK,QACLc,WAAY,CACVC,UAAU,GAEZxF,MApCAkE,EAAU8C,MACL,MAAQJ,SAAS1C,EAAU8C,MAAO,IAAM,GAExC,QCTE,SAASG,KACtB,OACE,cAAClJ,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,cAACC,EAAA,EAAD,UACE,cAACQ,EAAA,EAAD,UACE,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACuI,GAAD,MAEF,cAACvI,EAAA,EAAD,UACE,cAACyI,GAAD,MAEF,cAACzI,EAAA,EAAD,UACE,cAACwH,GAAD,MAEF,cAACxH,EAAA,EAAD,UACE,cAAC0H,GAAD,MAEF,cAAC1H,EAAA,EAAD,UACE,cAAC8H,GAAD,MAEF,cAAC9H,EAAA,EAAD,UACE,cAACgI,GAAD,e,4FCvBRrK,GAAYC,aAAW,SAAC4G,GAAD,MAAY,CACvCoE,KAAM,CACJ9B,MAAO,IACP5C,QAAS,GAEX2E,WAAY,CACVhF,UAAW,UAEb2C,YAAa,CACXtF,OAAQ,EACR4F,MAAO,IACPjD,UAAW,UAEb0D,UAAW,CACTT,MAAO,IACP,UAAW,CACTjD,UAAW,WAGfiF,cAAe,CACbhC,MAAO,IACP,UAAW,CACTjD,UAAW,SACXI,WAAY,OACZ8E,SAAU,SAKD,SAASC,KACtB,IAAMhL,EAAUL,KAD2B,EAEPO,qBAAWmH,IAAvCK,EAFmC,EAEnCA,UAAWK,EAFwB,EAExBA,aAEbkD,EAAqB,SAAC3I,GAAD,OAAW,SAAC4I,GACrC,IAAIC,EAAY,aAAOzD,EAAUwC,WACjCiB,EAAa7I,GAAb,6BACKoF,EAAUwC,UAAU5H,IADzB,IAEEgI,MAAOY,EAAE3H,OAAOC,QAElBuE,GAAa,SAACL,GAAD,oBAAC,gBACTA,GADQ,IAEXwC,UAAWiB,SAITC,EAA0B,SAAC9I,GAAD,OAAW,SAAC4I,GAC1C,IAAIC,EAAY,aAAOzD,EAAUwC,WACjCiB,EAAa7I,GAAb,6BACKoF,EAAUwC,UAAU5H,IADzB,IAEE+I,WAAYH,EAAE3H,OAAOC,QAEvBuE,GAAa,SAACL,GAAD,oBAAC,gBACTA,GADQ,IAEXwC,UAAWiB,SAITG,EAAkB,SAACC,EAAcC,GACrC,GAAID,GAAgBC,EAAmB,CACrC,IAAIC,EAGJF,EAAenB,SAASmB,EAAc,IAElC,CAAC,EAAG,EAAG,GAAGG,QAAQH,IAAiB,EACrCE,GAAgB,EACP,CAAC,EAAG,GAAGC,QAAQH,IAAiB,EACzCE,GAAgB,EACP,CAAC,EAAG,EAAG,GAAGC,QAAQH,IAAiB,EAC5CE,GAAgB,EACP,CAAC,EAAG,GAAI,GAAI,IAAIC,QAAQH,IAAiB,EAClDE,EAAe,EACN,CAAC,GAAI,GAAI,IAAIC,QAAQH,IAAiB,EAC/CE,EAAe,EACN,CAAC,GAAI,IAAIC,QAAQH,IAAiB,EAC3CE,EAAe,EACW,KAAjBF,IACTE,EAAe,GAUjB,IAAIE,EAAWF,GANW,gBAAtBD,EACU,EAEA,GAKd,OAAIG,EAAW,EACN,KAAOA,EAAW,IAElB,IAAMA,EAAW,IAG1B,MAAO,IAIX,OACE,cAACC,GAAA,EAAD,CAAMC,WAAS,EAAChF,QAAS,EAAGiF,QAAQ,SAApC,SACGpE,EAAUwC,WACTxC,EAAUwC,UAAU7H,KAAI,SAAC6H,EAAW5H,GAClC,IAAMyJ,EAAK7B,EAAUG,SACrB,OACE,cAACuB,GAAA,EAAD,CAAMI,MAAI,EAAV,SACE,eAACC,GAAA,EAAD,CAAMpK,UAAW7B,EAAQ4K,KAAzB,UACE,cAACsB,GAAA,EAAD,CACEpF,MAAOoD,EAAUG,SACjBxI,UAAW7B,EAAQ6K,aAErB,eAACsB,GAAA,EAAD,WACE,cAACnJ,EAAA,EAAD,CACE2G,KAAK,SACLvD,QAAQ,WACR8B,KAAK,QACLhF,OAAO,OACP0G,IAAK,EACLwC,IAAK,GACLnE,KAAMiC,EAAUG,SAAW,QAC3B7G,MAAO0G,EAAUI,MACjBzI,UAAW7B,EAAQuJ,UACnBlG,SAAU4H,EAAmB3I,KAE/B,cAACU,EAAA,EAAD,CACEoD,QAAQ,WACR6B,KAAMiC,EAAUG,SAAW,WAC3B7G,MAAO8H,EACLpB,EAAUI,MACVJ,EAAUmB,YAEZtC,WAAY,CAAEC,UAAU,GACxBnH,UAAW7B,EAAQ8K,gBAErB,cAACuB,GAAA,EAAD,CACEjG,QAAQ,WACR8B,KAAK,QACLrG,UAAW7B,EAAQwI,YAHrB,SAIE,cAAC8D,GAAA,EAAD,CACEC,UAAW,EACX/I,MAAO0G,EAAUmB,YAAc,OAC/BpD,KAAMiC,EAAUG,SAAW,aAC3BhH,SAAU+H,EAAwB9I,GAJpC,SAKGkK,KAAoBT,GAAI1J,KAAI,SAACgC,EAAMoI,GAClC,OACE,cAACC,GAAA,EAAD,CAAUlJ,MAAOa,EAAjB,SACGA,GADyBoI,iBAxC1BnK,QCxG5B,IAAM3C,GAAYC,aAAW,SAAC4G,GAAD,MAAY,CACvCC,KAAM,CACJqC,MAAO,QAET6D,QAAS,CACP5B,SAAUvE,EAAMoG,WAAWC,QAAQ,IACnC5G,WAAYO,EAAMoG,WAAWE,mBAE/BjN,MAAO,CACLC,SAAU,SAIC,SAASiN,KACtB,IAAM/M,EAAUL,KADuB,EAEHO,qBAAWmH,IAAvCK,EAF+B,EAE/BA,UAAWK,EAFoB,EAEpBA,aAGbiF,EAAa,SAAC1K,GAAD,OAAW,SAAC4I,GAC7B,IAAI+B,EAAQ,aAAOvF,EAAUwF,OAC7BD,EAAS3K,GAAT,6BAAuBoF,EAAUwF,MAAM5K,IAAvC,IAA+C6K,KAAMjC,EAAE3H,OAAOC,QAC9DuE,GAAa,SAACL,GAAD,oBAAC,gBAAoBA,GAArB,IAAgCwF,MAAOD,SAqBtD,OACE,cAACxL,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,UAAW7B,EAAQH,MAAON,aAAW,eAA5C,UACE,cAACuC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWoL,MAAM,SAAjB,kBACA,cAACpL,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAY1C,aAAW,MAAM2C,QAAS,kBAZ9B,WAClB,IAAM+K,EAAQ,uBAAOvF,EAAUwF,OAAjB,CAAwB,CAAEC,KAAM,MAC9CpF,GAAa,SAACL,GAAD,oBAAC,gBAAoBA,GAArB,IAAgCwF,MAAOD,OAUEI,IAA5C,SACE,cAAClL,EAAA,EAAD,aAKR,cAACC,EAAA,EAAD,UACGsF,EAAUwF,OACTxF,EAAUwF,MAAM7K,KAAI,SAAC6K,EAAO5K,GAC1B,OACE,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEmF,WAAS,EACT/E,WAAS,EACTgD,QAAQ,WACR7G,aAAW,iBACX6I,YAAY,qBACZ5E,MAAO0J,EAAMC,KACblF,KAAM,OAAS3F,EACfe,SAAU2J,EAAW1K,OAGzB,cAACN,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE1C,aAAW,SACX2C,QAAS,kBAlDP,SAACI,GACrB,IAAM2K,EAAQ,aAAOvF,EAAUwF,OACA,IAA3BxF,EAAUwF,MAAMI,QAElBL,EAASM,OAAOjL,EAAO,GACvByF,GAAa,SAACL,GAAD,oBAAC,gBAAoBA,GAArB,IAAgCwF,MAAOD,QAEpD3L,MAAM,2BA2CyBkM,CAAclL,IAF/B,SAGE,cAACG,EAAA,EAAD,UAjBSH,QAwBvB,+B,mDC1EF3C,GAAYC,aAAW,SAAC4G,GAAD,MAAY,CACvCiH,MAAO,CACLjI,QAAS,OACTkI,SAAU,QAEZC,KAAM,CACJzK,OAAQ,GAEVsF,YAAa,CACXtF,OAAQsD,EAAMK,QAAQ,GACtB/G,SAAU,IACV8N,SAAU,KAEZ/N,MAAO,CACLC,SAAU,SAMR+N,GAAY,CAChBC,WAAY,CACV1I,MAAO,CACL2I,UAAWC,IACXlF,MAAO,OAKE,SAASmF,KACtB,IAAMjO,EAAUL,KADsB,EAEFO,qBAAWmH,IAAvCK,EAF8B,EAE9BA,UAAWK,EAFmB,EAEnBA,aACba,EAAMlB,EAAUC,SA2DhBK,EAAwB,SAAC1E,EAAOhB,GACpC,IAAMiB,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfyE,EAAO1E,EAAO0E,KACpB/G,QAAQqD,IAAI,SAAUhB,GACtB,IAAI2K,EAAQ,aAAOxG,EAAUyG,OAC7BD,EAAS5L,GAAT,6BAAuBoF,EAAUyG,MAAM7L,IAAvC,mBAAgD2F,EAAOzE,IACvDuE,GAAa,SAACL,GAAD,oBAAC,gBAAoBA,GAArB,IAAgCyG,MAAOD,QAiCtD,OACE,cAACzM,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,UAAW7B,EAAQH,MAAON,aAAW,eAA5C,UACE,cAACuC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWoL,MAAM,SAAjB,kBACA,cAACpL,EAAA,EAAD,CAAWoL,MAAM,SAAjB,kBACA,cAACpL,EAAA,EAAD,CAAWoL,MAAM,SAASgB,QAAQ,IAAlC,oCAGA,cAACpM,EAAA,EAAD,CAAWoL,MAAM,SAAjB,mBACA,cAACpL,EAAA,EAAD,CAAWoL,MAAM,SAAjB,mBACA,cAACpL,EAAA,EAAD,CAAWoL,MAAM,SAAjB,kBACA,cAACpL,EAAA,EAAD,CAAWoL,MAAM,SAAjB,kBACA,cAACpL,EAAA,EAAD,CAAWoL,MAAM,SAAjB,kBACA,cAACpL,EAAA,EAAD,CAAWoL,MAAM,SAASgB,QAAQ,IAAlC,oBAGA,cAACpM,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAY1C,aAAW,MAAM2C,QAAS,kBApC/B,WACjB,IAAMgM,EAAQ,uBACTxG,EAAUyG,OADD,CAEZ,CACElG,KAAM,GACNoG,YAAa,GACbC,OAAQ,GACR3E,KAAM,GACN4E,MAAO,GACPC,KAAM,GACNC,KAAM,GACNC,KAAM,MAGV3G,GAAa,SAACL,GAAD,oBAAC,gBAAoBA,GAArB,IAAgCyG,MAAOD,OAsBES,IAA5C,SACE,cAACxM,EAAA,EAAD,aAKR,eAACC,EAAA,EAAD,WACGsF,EAAUyG,OACTzG,EAAUyG,MAAM9L,KAAI,SAAC8L,EAAO7L,GAC1B,OACE,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWoL,MAAM,SAAjB,SACE,cAACf,GAAA,EAAD,CACEjG,QAAQ,WACR8B,KAAK,QACLrG,UAAW7B,EAAQwI,YAHrB,SAIE,cAAC8D,GAAA,EAAD,CACEC,UAAW,EACX/I,MAAO2K,EAAMxE,KACb1B,KAAK,OACL5E,SAAU,SAACC,GAAD,OACR0E,EAAsB1E,EAAOhB,IALjC,SAOGsM,KAAUvM,KAAI,SAACsH,GAAD,OACb,cAAC+C,GAAA,EAAD,CAAqBlJ,MAAOmG,EAA5B,SACGA,GADYA,YAOvB,cAAC3H,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEI,WAAS,EACT8E,KAAK,QACL9B,QAAQ,WACR7G,aAAW,iBACXiE,MAAO2K,EAAMlG,KACbA,KAAK,OACL5E,SAAU,SAACC,GAAD,OAAW0E,EAAsB1E,EAAOhB,QAGtD,cAACN,EAAA,EAAD,CAAWoM,QAAQ,IAAnB,SACE,cAACpL,EAAA,EAAD,CACEmF,WAAS,EACT/E,WAAS,EACT8E,KAAK,QACL9B,QAAQ,WACR7G,aAAW,iBACXiE,MAAO2K,EAAME,YACbpG,KAAK,cACL5E,SAAU,SAACC,GAAD,OAAW0E,EAAsB1E,EAAOhB,QAGtD,cAACN,EAAA,EAAD,CAAWoL,MAAM,SAAjB,SACE,cAACpK,EAAA,EAAD,CACE2G,KAAK,SACLvG,WAAS,EACT8E,KAAK,QACL9B,QAAQ,WACRwD,IAAK,EACL3B,KAAK,SACLzE,MAAO2K,EAAMtE,OACbxG,SAAU,SAACC,GAAD,OAAW0E,EAAsB1E,EAAOhB,QAGtD,cAACN,EAAA,EAAD,CAAWoL,MAAM,SAAjB,SACE,cAACf,GAAA,EAAD,CACEjG,QAAQ,WACR8B,KAAK,QACLrG,UAAW7B,EAAQwI,YAHrB,SAIE,cAAC8D,GAAA,EAAD,CACEC,UAAW,EACX/I,MAAO2K,EAAMI,MACbtG,KAAK,QACL5E,SAAU,SAACC,GAAD,OACR0E,EAAsB1E,EAAOhB,IALjC,SAOGuM,KAAWxM,KAAI,SAACkM,GAAD,OACd,cAAC7B,GAAA,EAAD,CAAsBlJ,MAAO+K,EAA7B,SACGA,GADYA,YAOvB,cAACvM,EAAA,EAAD,CAAWoL,MAAM,SAAjB,SACE,cAACpK,EAAA,EAAD,CACE2G,KAAK,SACLvG,WAAS,EACT8E,KAAK,QACL9B,QAAQ,WACRwD,IAAK,EACL3B,KAAK,OACLzE,MAAO2K,EAAMK,KACbnL,SAAU,SAACC,GAAD,OAAW0E,EAAsB1E,EAAOhB,QAGtD,cAACN,EAAA,EAAD,CAAWoL,MAAM,SAAjB,SACE,cAACpK,EAAA,EAAD,CACE2G,KAAK,SACLvG,WAAS,EACT8E,KAAK,QACL9B,QAAQ,WACRwD,IAAK,EACL3B,KAAK,OACLzE,MAAO2K,EAAMM,KACbpL,SAAU,SAACC,GAAD,OAAW0E,EAAsB1E,EAAOhB,QAGtD,cAACN,EAAA,EAAD,UACE,cAACqK,GAAA,EAAD,CAAaxK,UAAW7B,EAAQwI,YAAhC,SACE,cAAC8D,GAAA,EAAD,CACEwC,UAAQ,EACRtL,MAAO2K,EAAMO,KACbzG,KAAK,OACL5E,SAAU,SAACC,GAAD,OACR0E,EAAsB1E,EAAOhB,IAE/ByM,MAAO,cAACC,GAAA,EAAD,IACPC,YAAa,SAACC,GAAD,OACX,qBAAKrN,UAAW7B,EAAQyN,MAAxB,SACGyB,EAAS7M,KAAI,SAACmB,GAAD,OACZ,cAAC2L,GAAA,EAAD,CAEEhM,MAAOK,EACP3B,UAAW7B,EAAQ2N,MAFdnK,SAObqK,UAAWA,GAnBb,SAoBGuB,KAAS/M,KAAI,SAAC4F,GAAD,OACZ,cAACyE,GAAA,EAAD,CAAqBlJ,MAAOyE,EAA5B,SACGA,GADYA,YAOvB,cAACjG,EAAA,EAAD,CAAWoM,QAAQ,IAAnB,SACE,cAACpL,EAAA,EAAD,CACE2G,KAAK,SACLvG,WAAS,EACT8E,KAAK,QACL9B,QAAQ,WACRwD,IAAK,EACLpG,MAAO2K,EAAMG,OACbrG,KAAK,SACL5E,SAAU,SAACC,GAAD,OAAW0E,EAAsB1E,EAAOhB,QAGtD,cAACN,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE1C,aAAW,SACX2C,QAAS,kBA3MP,SAACI,GACrB,IAAM4L,EAAQ,aAAOxG,EAAUyG,OACA,IAA3BzG,EAAUyG,MAAMb,QAElBY,EAASX,OAAOjL,EAAO,GACvByF,GAAa,SAACL,GAAD,oBAAC,gBAAoBA,GAArB,IAAgCyG,MAAOD,QAEpD5M,MAAM,2BAoMyB+N,CAAc/M,IAF/B,SAGE,cAACG,EAAA,EAAD,UAlJSH,MAwJrB,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWoL,MAAM,QAAQgB,QAAQ,KAAjC,kBAGA,cAACpM,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACE2G,KAAK,SACLvG,WAAS,EACT8E,KAAK,QACL9B,QAAQ,WACR6B,KAAK,YACLc,WAAY,CACVC,UAAU,GAEZxF,MAlSRkE,EAAUyG,MACLzG,EAAUyG,MAAMmB,QACrB,SAACC,EAAWlL,GAAZ,OAAqBkL,EAAYnF,SAAS/F,EAAKiK,QAAU,EAAG,MAC5D,GAGK,OA+RD,cAACtM,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEI,WAAS,EACT8E,KAAK,QACL9B,QAAQ,WACR6B,KAAK,UACLc,WAAY,CACVC,UAAU,GAEZxF,MAnSE,WACd,GACEkE,EAAUC,UACVD,EAAUwC,UAAUd,MAAK,SAACC,GAAD,MAAsB,QAAfA,EAAEgB,YAAoBC,OACtD5C,EAAUwC,UAAUd,MAAK,SAACC,GAAD,MAAsB,QAAfA,EAAEgB,YAAoBgB,WACtD,CACA,IACII,EADA+D,EAAM9H,EAAUwC,UAAUd,MAAK,SAACC,GAAD,MAAsB,QAAfA,EAAEgB,YAExCmB,EAAoBgE,EAAInE,WACxBE,EAAenB,SAASoF,EAAIlF,MAAO,IAGnC,CAAC,EAAG,EAAG,GAAGoB,QAAQH,IAAiB,EACrCE,GAAgB,EACP,CAAC,EAAG,GAAGC,QAAQH,IAAiB,EACzCE,GAAgB,EACP,CAAC,EAAG,EAAG,GAAGC,QAAQH,IAAiB,EAC5CE,GAAgB,EACP,CAAC,EAAG,GAAI,GAAI,IAAIC,QAAQH,IAAiB,EAClDE,EAAe,EACN,CAAC,GAAI,GAAI,IAAIC,QAAQH,IAAiB,EAC/CE,EAAe,EACN,CAAC,GAAI,IAAIC,QAAQH,IAAiB,EAC3CE,EAAe,EACW,KAAjBF,IACTE,EAAe,GAUjB,IAAIE,EAAWF,GANW,gBAAtBD,EACU,EAEA,GAKd,MAAO,MAAQtC,KAAcN,GAAK6G,UAAY9D,GAE9C,MAAO,GA4PU+D,kB,cCzVjB/P,GAAYC,aAAW,SAAC4G,GAAD,MAAY,CACvCC,KAAM,CACJqC,MAAO,QAET6D,QAAS,CACP5B,SAAUvE,EAAMoG,WAAWC,QAAQ,IACnC5G,WAAYO,EAAMoG,WAAWE,mBAE/BjN,MAAO,CACLC,SAAU,SAIC,SAAS6P,KACtB,IAAM3P,EAAUL,KAD+B,EAEXO,qBAAWmH,IAAvCK,EAFuC,EAEvCA,UAAWK,EAF4B,EAE5BA,aAGb6H,EAAwB,SAACtN,GAAD,OAAW,SAAC4I,GACxC,IAAI2E,EAAW,aAAOnI,EAAUoI,gBAChCD,EAAYvN,GAAZ,6BACKoF,EAAUoI,eAAexN,IAD9B,IAEEyN,SAAU7E,EAAE3H,OAAOyM,UAErBjI,GAAa,SAACL,GAAD,oBAAC,gBACTA,GADQ,IAEXoI,eAAgBD,SAIdI,EAAgB,SAAC3N,GAAD,OAAW,SAAC4I,GAChC,IAAI2E,EAAW,aAAOnI,EAAUoI,gBAChCD,EAAYvN,GAAZ,6BACKoF,EAAUoI,eAAexN,IAD9B,IAEE4N,QAAShF,EAAE3H,OAAOC,QAEpBuE,GAAa,SAACL,GAAD,oBAAC,gBACTA,GADQ,IAEXoI,eAAgBD,SA+BpB,OACE,cAACpO,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,UAAW7B,EAAQH,MAAON,aAAW,eAA5C,UACE,cAACuC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWoM,QAAQ,IAAIhB,MAAM,SAA7B,qBAGA,cAACpL,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAY1C,aAAW,MAAM2C,QAAS,kBApB5B,WACpB,IAAM2N,EAAW,uBACZnI,EAAUoI,gBADE,CAEf,CAAEI,QAAS,GAAIH,UAAU,KAE3BhI,GAAa,SAACL,GAAD,oBAAC,gBACTA,GADQ,IAEXoI,eAAgBD,OAaoCM,IAA5C,SACE,cAAChO,EAAA,EAAD,aAKR,cAACC,EAAA,EAAD,UACGsF,EAAUoI,gBACTpI,EAAUoI,eAAezN,KAAI,SAACyN,EAAgBxN,GAC5C,OACE,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACoO,GAAA,EAAD,CACEnI,KAAM,yBAA2B3F,EACjC0N,UAAWF,EAAeC,SAC1B1M,SAAUuM,EAAsBtN,GAChCqB,MAAM,cAGV,cAAC3B,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEmF,WAAS,EACT/E,WAAS,EACTgD,QAAQ,WACR7G,aAAW,iBACX6I,YAAY,kHACZ5E,MAAOsM,EAAeI,QACtBjI,KAAM,gBAAkB3F,EACxBe,SAAU4M,EAAc3N,OAG5B,cAACN,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACE1C,aAAW,SACX2C,QAAS,kBArEJ,SAACI,GACxB,IAAMuN,EAAW,aAAOnI,EAAUoI,gBACM,IAApCpI,EAAUoI,eAAexC,QAE3BuC,EAAYtC,OAAOjL,EAAO,GAC1ByF,GAAa,SAACL,GAAD,oBAAC,gBACTA,GADQ,IAEXoI,eAAgBD,QAGlBvO,MAAM,2BA2DyB+O,CAAiB/N,IAFlC,SAGE,cAACG,EAAA,EAAD,UAzBSH,a,sDCjGhB,SAASgO,KACtB,OACE,qCACG,IACAC,KAAelO,KAAI,SAACgC,EAAM/B,GACzB,OACE,eAACkO,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAkBC,WAAY,cAACC,GAAA,EAAD,IAA9B,SACGtM,EAAK4D,OAER,cAAC2I,GAAA,EAAD,UACE,mBAAGC,wBAAyB,CAAEC,OAAQzM,EAAKgK,mBAL/B/L,MAShB,O,cCfK,SAASyO,KACtB,OACE,mCACGC,KAAe3O,KAAI,SAACgC,EAAM/B,GACzB,OACE,eAACkO,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAkBC,WAAY,cAACC,GAAA,EAAD,IAA9B,SACGtM,EAAK4D,OAER,cAAC2I,GAAA,EAAD,UACE,mBAAGC,wBAAyB,CAAEC,OAAQzM,EAAKgK,mBAL/B/L,QCLX,SAAS2O,KACA/Q,qBAAWmH,IAAzBK,UACcC,SAEtB,OAAO,6BCLT,SAASuJ,GAASC,GAAQ,IAChBC,EAAqCD,EAArCC,SAAU5N,EAA2B2N,EAA3B3N,MAAOlB,EAAoB6O,EAApB7O,MAAU+O,EADZ,aACsBF,EADtB,8BAGvB,OACE,+CACEG,KAAK,WACLC,OAAQ/N,IAAUlB,EAClBE,GAAE,0BAAqBF,GACvBM,kBAAA,qBAA+BN,IAC3B+O,GALN,aAMG7N,IAAUlB,GAAS,cAACkP,GAAA,EAAD,CAAKC,EAAG,EAAR,SAAYL,OAWtC,SAASM,GAAUpP,GACjB,MAAO,CACLE,GAAG,cAAD,OAAgBF,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIxC,IAAM3C,GAAYC,aAAW,SAAC4G,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVd,gBAAiBY,EAAMmL,QAAQC,WAAWC,WAI/B,SAASC,KACtB,IAAM9R,EAAUL,KADuB,EAEboS,IAAM5R,SAAS,GAFF,mBAEhCqD,EAFgC,KAEzBwO,EAFyB,KAQvC,OACE,sBAAKnQ,UAAW7B,EAAQyG,KAAxB,UACE,cAACO,EAAA,EAAD,CAAQvB,SAAS,SAAjB,SACE,eAACwM,GAAA,EAAD,CACEzO,MAAOA,EACPH,SATgB,SAACC,EAAO4O,GAC9BF,EAASE,IASH3S,aAAW,sBAHb,UAIE,cAAC4S,GAAA,EAAD,cAAKhP,MAAM,YAAeuO,GAAU,KACpC,cAACS,GAAA,EAAD,cAAKhP,MAAM,YAAeuO,GAAU,KACpC,cAACS,GAAA,EAAD,cAAKhP,MAAM,SAAYuO,GAAU,UAGrC,cAACR,GAAD,CAAU1N,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAACgO,GAAD,MAEF,cAACY,GAAD,CAAU1N,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAACyO,GAAD,MAEF,cAACG,GAAD,CAAU1N,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAAC,GAAD,S,cC3DF3C,GAAYC,aAAW,SAAC4G,GAAD,MAAY,CACvCgC,YAAa,CACXtF,OAAQsD,EAAMK,QAAQ,GACtBiC,MAAO,IACPjD,UAAW,UAEb0D,UAAW,CACTT,MAAO,IACP,UAAW,CACTjD,UAAW,eAKF,SAASuM,KAAc,IAAD,EACXjS,qBADW,mBAC5BkS,EAD4B,KACtBC,EADsB,OAELnS,qBAFK,mBAE5BoS,EAF4B,KAEnBC,EAFmB,OAGCrS,mBAAS,GAHV,mBAG5BsS,EAH4B,KAGhBC,EAHgB,KAI7B1S,EAAUL,KAEhB,SAASgT,EAAWC,GAElB,OADaC,KAAKC,MAAMD,KAAKE,SAAWH,GAAS,EAcnD,OACE,qCACE,eAACvG,GAAA,EAAD,CACEjG,QAAQ,WACR8B,KAAK,QACLrG,UAAW7B,EAAQwI,YAHrB,UAIE,cAACwK,GAAA,EAAD,mBACA,eAAC1G,GAAA,EAAD,CACEC,UAAW,EACX0G,aAAa,OACb9P,MAAM,OACNE,SAAU,SAACC,GACTgP,EAAQhP,EAAMC,OAAOC,QALzB,UAOE,cAACkJ,GAAA,EAAD,CAAUwG,SAAS,WAAW1P,MAAM,OAAO+N,OAAO,WAClD,cAAC7E,GAAA,EAAD,CAAUlJ,MAAM,IAAhB,gBACA,cAACkJ,GAAA,EAAD,CAAUlJ,MAAM,IAAhB,gBACA,cAACkJ,GAAA,EAAD,CAAUlJ,MAAM,KAAhB,uBAGJ,uBACA,eAAC6I,GAAA,EAAD,CACEjG,QAAQ,WACR8B,KAAK,QACLrG,UAAW7B,EAAQwI,YAHrB,UAIE,cAACwK,GAAA,EAAD,qBACA,eAAC1G,GAAA,EAAD,CACEC,UAAW,EACX0G,aAAa,OACb9P,MAAM,SACNE,SAAU,SAACC,GACTkP,EAAWlP,EAAMC,OAAOC,QAL5B,UAOE,cAACkJ,GAAA,EAAD,CAAUwG,SAAS,WAAW1P,MAAM,OAAO+N,OAAO,WAClD,cAAC7E,GAAA,EAAD,CAAUlJ,MAAM,IAAhB,eACA,cAACkJ,GAAA,EAAD,CAAUlJ,MAAM,IAAhB,eACA,cAACkJ,GAAA,EAAD,CAAUlJ,MAAM,IAAhB,qBAGJ,cAACE,EAAA,EAAD,CAAQxB,QAAS,kBAjDrB,SAAkB0Q,EAAOL,GACvBK,EAAQxI,SAASwI,EAAO,IACxBL,EAAUnI,SAASmI,EAAS,IAE5B,IADA,IAAIY,EAAQ,EACHC,EAAI,EAAGA,EAAIb,EAASa,IAC3BD,GAAgBR,EAAWC,GAE7B,OAAOF,EAAcS,GA0CIE,CAAShB,EAAME,IAAtC,kBACA,cAACvP,EAAA,EAAD,CACEoD,QAAQ,WACR8B,KAAK,QACL/E,MAAM,SACNtB,UAAW7B,EAAQuJ,UACnB/F,MAAOiP,OCjEf,SAASvB,GAASC,GAAQ,IAChBC,EAAqCD,EAArCC,SAAU5N,EAA2B2N,EAA3B3N,MAAOlB,EAAoB6O,EAApB7O,MAAU+O,EADZ,aACsBF,EADtB,8BAGvB,OACE,+CACEG,KAAK,WACLC,OAAQ/N,IAAUlB,EAClBE,GAAE,0BAAqBF,GACvBM,kBAAA,qBAA+BN,IAC3B+O,GALN,aAMG7N,IAAUlB,GAAS,cAACkP,GAAA,EAAD,CAAKC,EAAG,EAAR,SAAYL,OAWtC,SAASM,GAAUpP,GACjB,MAAO,CACLE,GAAG,cAAD,OAAgBF,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIxC,IAAM3C,GAAYC,aAAW,SAAC4G,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVd,gBAAiBY,EAAMmL,QAAQC,WAAWC,WAa/B,SAASyB,KACtB,IAAMtT,EAAUL,KADuB,EAEbQ,mBAAS,GAFI,mBAEhCqD,EAFgC,KAEzBwO,EAFyB,OAGL7R,mBAAS,IAHJ,mBAGhCuH,EAHgC,KAGrBK,EAHqB,OAIDR,cAA9BC,EAJ+B,EAI/BA,YAAaC,EAJkB,EAIlBA,aACbxH,EAAgBC,qBAAWR,GAA3BO,YAOR6D,qBAAU,WACR,GAAI0D,GAAeC,EAcjB,O/BgBC,SAAyB9G,EAAU+G,EAAW3D,GACnD,OAAOlF,EACJiC,WAAW,aACXC,IAAIJ,GACJG,WAAW,cACXC,IAAI2G,GACJpD,WAAWP,G+BnCUsC,CAClBmB,EACAC,EACA,CACEzD,KAAM,SAACuP,GACLxL,EAAawL,EAAiBlP,SAEhChD,MAAO,SAACA,GACNC,MAAM,8DACNJ,QAAQG,MAAM,0BAA2BA,QAMhD,CAACmG,EAAaC,EAAcM,IAG/B,IAAMyL,EAAgBC,sBAxCP,SAACC,EAAUC,GAC1B,IAAIC,EACJ,OAAO,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAClBC,aAAaF,GACbA,EAAQG,YAAW,kBAAML,EAAQ,WAAR,EAAYG,KAAOF,IAqC5CK,EACE,SAACtM,GAAD,O/BfC,SAAuB/G,EAAU+G,EAAWrD,GACjD,OAAOxF,EACJiC,WAAW,aACXC,IAAIJ,GACJG,WAAW,cACXC,IAAI2G,GACJ1G,IAAIqD,G+BUDgC,CAA8BmB,EAAaC,EAAcC,GACtDzG,MAAK,WACJC,QAAQC,KAAK,mBAAoBuG,MAElCtG,OAAM,SAACC,GACNC,MAAM,8DACNJ,QAAQG,MAAM,yBAA0BA,QAE9C,KAEF,IAIFyC,qBAAU,WAEN4D,GACAuM,OAAOC,KAAKxM,GAAW4F,QAAU,GACjCrN,EAAYY,QAAU6G,EAAU9G,QAEhCM,QAAQC,KAAK,kBAAmBuG,GAChC8L,EAAc9L,MAEf,CAACA,IAEJ,IAAMlD,EAAMC,mBAAQ,iBAAO,CAAEiD,YAAWK,kBAAiB,CAACL,IAE1D,OACE,eAAC,GAAehD,SAAhB,CAAyBlB,MAAOgB,EAAhC,UACE,cAAC8C,GAAD,IACA,uBACA,sBAAKzF,UAAW7B,EAAQyG,KAAxB,UACE,cAACkE,GAAD,IACA,uBACA,cAACK,GAAD,IACA,uBACA,cAAChE,EAAA,EAAD,CAAQvB,SAAS,SAAjB,SACE,eAACwM,GAAA,EAAD,CACEzO,MAAOA,EACPH,SAnEc,SAACC,EAAO4O,GAC9BF,EAASE,IAmED3S,aAAW,sBAHb,UAIE,cAAC4S,GAAA,EAAD,cAAKhP,MAAM,iBAAoBuO,GAAU,KACzC,cAACS,GAAA,EAAD,cAAKhP,MAAM,SAAYuO,GAAU,KACjC,cAACS,GAAA,EAAD,cAAKhP,MAAM,kBAAqBuO,GAAU,KAC1C,cAACS,GAAA,EAAD,cAAKhP,MAAM,QAAWuO,GAAU,KAChC,cAACS,GAAA,EAAD,cAAKhP,MAAM,SAAYuO,GAAU,KACjC,cAACS,GAAA,EAAD,cAAKhP,MAAM,eAAkBuO,GAAU,UAG3C,eAAC,GAAD,CAAUlO,MAAOA,EAAOlB,MAAO,EAA/B,UACE,cAACwF,GAAD,IACA,uBACA,cAACa,GAAD,OAEF,cAAC,GAAD,CAAUnF,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAACyK,GAAD,MAEF,cAAC,GAAD,CAAUvJ,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAACqN,GAAD,MAEF,cAAC,GAAD,CAAUnM,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAAC2L,GAAD,MAEF,cAAC,GAAD,CAAUzK,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAACwP,GAAD,MAEF,cAAC,GAAD,CAAUtO,MAAOA,EAAOlB,MAAO,EAA/B,SACE,cAAC8P,GAAD,YC1KV,IAEe+B,GAFO1U,0BCGP,SAAS2U,KAAkB,IAChC5M,EAAgBD,cAAhBC,YAER,OACE,gCACE,eAAClI,EAAA,EAAD,CAAaC,aAAW,aAAxB,UACE,cAAC,IAAD,CAAMgD,GAAG,YAAT,kBACA,4BAAIiF,OAEN,4CAAeA,QCZrB,IAEe6M,GAFc5U,0B,wCCyBvBE,GAAYC,aAAW,SAAC4G,GAAD,MAAY,CACvCgC,YAAa,CACXtF,OAAQsD,EAAMK,QAAQ,GACtB/G,SAAU,KAEZ2I,YAAa,CACXC,UAAWlC,EAAMK,QAAQ,QAId,SAASyN,KACtB,IAAMtU,EAAUL,KADwB,EAEdO,qBAAWmU,IAA7BjU,EAFgC,EAEhCA,KAAMC,EAF0B,EAE1BA,QAF0B,EAGNF,mBAAS,IAHH,mBAGjCoU,EAHiC,KAGtBC,EAHsB,OAIJrU,mBAAS,IAJL,mBAIjCsU,EAJiC,KAIrBC,EAJqB,OAKNvU,mBAAS,IALH,mBAKjCwU,EALiC,KAKtBC,EALsB,OAMIzU,mBAAS,IANb,mBAMjC0U,EANiC,KAMjBC,EANiB,OAOY3U,mBAAS,IAPrB,mBAOjC4U,EAPiC,KAObC,EAPa,KAQhC/U,EAAgBC,qBAAWR,GAA3BO,YACAuH,EAAgBD,cAAhBC,YAMF/G,EAAe,WACnB+T,EAAa,IACbE,EAAc,IACdE,EAAa,IACbE,EAAkB,IAClBE,EAAsB,IACtB3U,GAAQ,IASJ4U,EAAgB,WAElBzN,GACA+M,GACAE,GACAI,GACAF,GACAI,EnCtCC,SACLpU,EACA4T,EACA3T,EACAsU,EACArN,EACAD,EACAuN,GAEA,OAAOtW,EACJiC,WAAW,aACXC,IAAIJ,GACJG,WAAW,cACXC,IAAIwT,GACJvT,IAAI,CACHkJ,UAAW,CACT,CAAEG,SAAU,MAAOC,MAAO,IAAKe,WAAY,eAC3C,CAAEhB,SAAU,MAAOC,MAAO,IAAKe,WAAY,eAC3C,CAAEhB,SAAU,MAAOC,MAAO,IAAKe,WAAY,eAC3C,CAAEhB,SAAU,MAAOC,MAAO,IAAKe,WAAY,eAC3C,CAAEhB,SAAU,MAAOC,MAAO,IAAKe,WAAY,eAC3C,CAAEhB,SAAU,MAAOC,MAAO,IAAKe,WAAY,gBAE7CxD,UAAWA,EACXgC,OAAQ,GACRvB,UAAW,GACX4E,MAAO,CAAC,CAAEC,KAAM,KAChB2C,eAAgB,CAAC,CAAEI,QAAS,GAAIH,UAAU,IAC1CpI,SAAUuN,EACV7M,UAAW,GACX0B,MAAO,GACPE,GAAI,GACJkE,MAAO,CACL,CACElG,KAAM,GACNoG,YAAa,GACb1E,KAAM,GACN4E,MAAO,GACPC,KAAM,GACNF,OAAQ,GACRG,KAAM,GACNC,KAAM,KAGVlE,MAAO,GACPjC,KAAM,GACN3H,MAAOA,EACPgH,KAAMA,EACNqB,eAAgBkM,EAChBzK,GAAI,KmCRJrE,CACEmB,EACA+M,EACAtU,EAAYY,MACZ4T,EACAI,EACAF,EACAI,GAEC9T,MAAK,WACJC,QAAQC,KAAK,qBAAsBoT,MAEpCnT,OAAM,SAACC,GACNC,MAAM,iDACNJ,QAAQG,MAAM,2BAA4BA,MAG9CC,MAAM,gCAIV,OACE,eAACoB,EAAA,EAAD,CACEtC,KAAMA,EACNuC,QAASlC,EACTmC,kBAAgB,oBAHlB,UAIE,cAACC,EAAA,EAAD,CAAaL,GAAG,oBAAhB,kCAAuE,IACvE,eAACM,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,yHAIA,cAACC,EAAA,EAAD,CACEC,WAAW,EACXC,OAAO,QACPV,GAAG,OACHW,MAAM,uBACNC,WAAS,EACTC,SAAU,SAACC,GAAD,OAAWkR,EAAalR,EAAMC,OAAOC,UAEjD,uBACA,eAAC6I,GAAA,EAAD,CAAajG,QAAQ,WAAWvE,UAAW7B,EAAQwI,YAAnD,UACE,cAACwK,GAAA,EAAD,oBACA,cAAC1G,GAAA,EAAD,CACEnJ,MAAM,QACNK,MAAOiR,EACPxM,KAAK,QACL5E,SAAU,SAACC,GAAD,OAAWoR,EAAcpR,EAAMC,OAAOC,QAJlD,SAKG4R,KAAW/S,KAAI,SAACgC,EAAMoI,GACrB,OACE,cAACC,GAAA,EAAD,CAAUlJ,MAAOa,EAAjB,SACGA,GADyBoI,WAOpC,uBACA,eAACJ,GAAA,EAAD,CAAajG,QAAQ,WAAWvE,UAAW7B,EAAQwI,YAAnD,UACE,cAACwK,GAAA,EAAD,mBACA,cAAC1G,GAAA,EAAD,CACEnJ,MAAM,OACNK,MAAOmR,EACP1M,KAAK,OACL5E,SAAU,SAACC,GAAD,OAAWsR,EAAatR,EAAMC,OAAOC,QAJjD,SAKG6R,KAAMhT,KAAI,SAACgC,EAAMoI,GAChB,OACE,cAACC,GAAA,EAAD,CAAUlJ,MAAOa,EAAjB,SACGA,GADyBoI,WAOpC,uBACA,eAACJ,GAAA,EAAD,CAAajG,QAAQ,WAAWvE,UAAW7B,EAAQwI,YAAnD,UACE,cAACwK,GAAA,EAAD,wBACA,cAAC1G,GAAA,EAAD,CACEnJ,MAAM,YACNK,MAAOqR,EACP5M,KAAK,YACL5E,SAAU,SAACC,GAAD,OAAWwR,EAAkBxR,EAAMC,OAAOC,QAJtD,SAKGiR,GACCvL,KAAcuL,GAAYtL,WAAW9G,KAAI,SAACgC,EAAMoI,GAC9C,OACE,cAACC,GAAA,EAAD,CAAUlJ,MAAOa,EAAKwD,UAAtB,SACGxD,EAAKwD,WAD8B4E,WAOhD,uBACA,eAACJ,GAAA,EAAD,CAAa3K,UAAU,WAAWG,UAAW7B,EAAQwI,YAArD,UACE,cAAC8M,GAAA,EAAD,CAAW5T,UAAU,SAArB,4BACA,cAAC6T,GAAA,EAAD,CACEhW,aAAW,iBACX0I,KAAK,iBACLzE,MAAOuR,EACP1R,SAhIgB,SAACC,GACzB0R,EAAsB1R,EAAMC,OAAOC,QA2H7B,SAKGiR,GACCvL,KAAcuL,GAAYe,gBAAgBnT,KAAI,SAACgC,EAAMoI,GACnD,OACE,cAACgJ,GAAA,EAAD,CACEjS,MAAOa,EAAKiF,UACZoM,QAAS,cAACC,GAAA,EAAD,IACTxS,MAAOkB,EAAKiF,UAAY,KAAOjF,EAAKuD,KAAO,iBAOzD,eAACnE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQxB,QAASzB,EAAckD,MAAM,UAArC,oBAGA,cAACD,EAAA,EAAD,CAAQxB,QArIK,WACjB7B,GAAQ,GACR4U,KAmIiCtR,MAAM,UAAnC,oCChLR,IAAMhE,GAAYC,YAAW,CAC3B6G,KAAM,CACJ3G,SAAU,KAEZgH,MAAO,CACLiE,SAAU,IAEZ6K,IAAK,CACHC,aAAc,MAIH,SAASvB,KACtB,IAAMtU,EAAUL,KADwB,EAEhBQ,mBAASkU,IAFO,mBAEjCjU,EAFiC,KAE3BC,EAF2B,KAGhCM,EAAaT,qBAAWiU,IAAxBxT,SACA6G,EAAgBD,cAAhBC,YACFhD,EAAMC,mBAAQ,iBAAO,CAAErE,OAAMC,aAAY,CAACD,IAO1C0V,EAAkB,SAACnV,EAAU+G,GAC7B/G,GAAY+G,EpCqFb,SAAyB/G,EAAU+G,GACxC,OAAO7I,EACJiC,WAAW,aACXC,IAAIJ,GACJG,WAAW,cACXC,IAAI2G,GACJlG,SoCzFC6E,CAAgC1F,EAAU+G,GACvCzG,MAAK,WACJC,QAAQC,KAAK,qBAAsBuG,MAEpCtG,OAAM,SAACC,GACNC,MAAM,iDACNJ,QAAQG,MAAM,2BAA4BA,MAG9CC,MAAM,kCAIV,OACE,eAAC,GAAqBoD,SAAtB,CAA+BlB,MAAOgB,EAAtC,UACE,eAACoH,GAAA,EAAD,CAAMC,WAAS,EAAChF,QAAS,EAAzB,UACGlG,EAASA,UACRA,EAASA,SAAS0B,KAAI,SAAC1B,EAAU2B,GAC/B,OACE,cAACsJ,GAAA,EAAD,CAAMI,MAAI,EAAC+J,GAAI,EAAf,SACE,eAAC9J,GAAA,EAAD,CAAMpK,UAAW7B,EAAQyG,KAAzB,UACE,cAACyF,GAAA,EAAD,CACE8J,OACE,cAAC/T,EAAA,EAAD,CACE1C,aAAW,SACX2C,QAAS,kBACP4T,EAAgBtO,EAAa7G,EAAS+G,YAH1C,SAKE,cAACjF,EAAA,EAAD,MAGJqE,MACE,cAAC,IAAD,CACEvE,GACE,aAAeiF,EAAc,IAAM7G,EAAS+G,UAFhD,SAIG/G,EAAS+G,YAGduO,UAAWtV,EAASuV,cAActV,QAEpC,eAACuL,GAAA,EAAD,WACE,cAAC/E,EAAA,EAAD,CAAYhB,QAAQ,QAAQ1E,UAAU,IAAtC,SACGf,EAASuV,cAAcvO,WAE1B,cAACP,EAAA,EAAD,CAAYhB,QAAQ,QAAQ1E,UAAU,IAAtC,SACGf,EAASuV,cAActO,OAE1B,cAACR,EAAA,EAAD,CAAYhB,QAAQ,QAAQ1E,UAAU,IAAtC,SACGf,EAASuV,cAAcrO,YAE1B,uBACA,eAACT,EAAA,EAAD,CAAYhB,QAAQ,QAAQ1E,UAAU,IAAtC,iBACOf,EAASuV,cAAcjM,MAE9B,eAAC7C,EAAA,EAAD,CAAYhB,QAAQ,QAAQ1E,UAAU,IAAtC,iBACOf,EAASuV,cAAcxL,aArCbpI,MA4C7B,cAACsJ,GAAA,EAAD,CAAMI,MAAI,EAAC+J,GAAI,EAAf,SACE,eAAC9J,GAAA,EAAD,CAAMpK,UAAW7B,EAAQyG,KAAzB,UACE,cAACyF,GAAA,EAAD,CAAYpF,MAAM,kBAClB,cAACqF,GAAA,EAAD,UACE,cAAClK,EAAA,EAAD,CAAY1C,aAAW,MAAM2C,QA3EjB,WACtB7B,GAAQ,IA0EE,SACE,cAAC8B,EAAA,EAAD,gBAMV,cAAC,GAAD,OChHS,SAASgU,KAAiB,IAAD,EACNhW,mBAAS,IADH,mBAC/BQ,EAD+B,KACrByV,EADqB,KAE9B5O,EAAgBD,cAAhBC,YAIR1D,qBAAU,WACR,GAAI0D,EAgBF,OrC0EC,SAA0B7G,EAAUoD,GACzC,OAAOlF,EACJiC,WAAW,aACXC,IAAIJ,GACJG,WAAW,cACXwD,WAAWP,GqC9FUsC,CAAiCmB,EAAa,CAChExD,KAAM,SAACC,GACL,IAAMoS,EAAuBpS,EAAcE,KAAK9B,KAAI,SAAC+B,GACnD,MAAO,CACLsD,UAAWtD,EAAY5B,GACvB0T,cAAe9R,EAAYC,WAG/B+R,GAAY,SAACzV,GAAD,MAAe,CAAEA,SAAU0V,OAEzChV,MAAO,SAACA,GACNC,MAAM,6DACNJ,QAAQG,MAAM,0BAA2BA,QAK9C,CAACmG,EAAa4O,IAEjBtS,qBAAU,WACR5C,QAAQC,KAAK,kBAAmBR,KAC/B,CAACA,IAEJ,IAAM6D,EAAMC,mBAAQ,iBAAO,CAAE9D,WAAUyV,iBAAgB,CAACzV,IAExD,OACE,eAAC,GAAc+D,SAAf,CAAwBlB,MAAOgB,EAA/B,UACE,cAAC4P,GAAD,IACA,uBACA,cAAC,GAAD,O,OClCS,SAASkC,KACtB,OACE,cAAClP,EAAA,EAAD,CAAY1F,UAAW,OAAvB,SACE,cAAC6U,EAAA,EAAD,UACE,eAAC,IAAD,WACE,cAACxP,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEyP,OAAO,EACPC,KAAK,uCACL/U,UAAW4R,KAEb,cAAC,IAAD,CACEkD,OAAO,EACPC,KAAK,yBACL/U,UAAWgV,KAEb,cAAC,IAAD,CAAOF,OAAO,EAAMC,KAAK,YAAY/U,UAAWkC,IAChD,cAAC,IAAD,CAAOlC,UAAW1D,cCrB9B,SAAS2Y,KAAS,IAAD,EACuBxW,mBAAS,MADhC,mBACRF,EADQ,KACK2W,EADL,KAGTpS,EAAMC,mBAAQ,iBAAO,CAAExE,iBAAgB,CAACA,IAS9C,OAPA6D,qBAAU,WAIR,OAHoBuC,EAAqBwQ,oBAAmB,SAACC,GAC3DF,EAAeE,QAGhB,IAGD,cAAC,EAAUpS,SAAX,CAAoBlB,MAAOgB,EAA3B,SACGvE,EACC,cAACqW,GAAD,IAEA,cAAC5S,EAAA,EAAD,CACE0C,QAAQ,YACRzC,MAAM,UACNzB,QAASmE,EAHX,mCAWR,IAAM0Q,GAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACR,GAAD,IAAWI,K","file":"static/js/main.05f6eff6.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorPage() {\n  return <h1>Oops! Page not found!</h1>;\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialise Firebase and setting up firestore and auth for use later\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\n\n// Authenticate with Firebase-auth using the Google provider object\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account',\n});\nexport function SignInWithGoogle() {\n  auth.signInWithPopup(provider);\n}\n\n// Firestore operations\n\n// Create new campaign\nexport function createCampaign(campaign, owner) {\n  return db.collection('campaigns').doc(campaign).set({ owner: owner });\n}\n\n// Create new character\nexport function createCharacter(\n  campaign,\n  charaName,\n  owner,\n  dwClass,\n  alignment,\n  race,\n  raceAttribute\n) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .doc(charaName)\n    .set({\n      abilities: [\n        { category: 'STR', score: '1', affliction: 'Unafflicted' },\n        { category: 'DEX', score: '1', affliction: 'Unafflicted' },\n        { category: 'CON', score: '1', affliction: 'Unafflicted' },\n        { category: 'INT', score: '1', affliction: 'Unafflicted' },\n        { category: 'WIS', score: '1', affliction: 'Unafflicted' },\n        { category: 'CHA', score: '1', affliction: 'Unafflicted' },\n      ],\n      alignment: alignment,\n      armour: '',\n      backstory: '',\n      bonds: [{ bond: '' }],\n      class_features: [{ feature: '', checkbox: false }],\n      dw_class: dwClass,\n      full_name: '',\n      funds: '',\n      hp: '',\n      items: [\n        {\n          name: '',\n          description: '',\n          type: '',\n          range: '',\n          cost: '',\n          weight: '',\n          uses: '',\n          tags: [],\n        },\n      ],\n      level: '',\n      look: '',\n      owner: owner,\n      race: race,\n      race_attribute: raceAttribute,\n      xp: '',\n    });\n}\n// Save Character\nexport function saveCharacter(campaign, character, data) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .doc(character)\n    .set(data);\n}\n\n// Stream Campaign Data (all Campaigns)\nexport function streamCampaigns(observer) {\n  return db.collection('campaigns').onSnapshot(observer);\n}\n\n// Stream Character Data (all Characters)\nexport function streamCharacters(campaign, observer) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .onSnapshot(observer);\n}\n\n// Stream Character Data (selected Characters)\nexport function streamCharacter(campaign, character, observer) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .doc(character)\n    .onSnapshot(observer);\n}\n\n// Delete Campaign\nexport function deleteCampaign(campaign) {\n  return db.collection('campaigns').doc(campaign).delete();\n}\n\n// Delete Characters\nexport function deleteCharacter(campaign, character) {\n  return db\n    .collection('campaigns')\n    .doc(campaign)\n    .collection('characters')\n    .doc(character)\n    .delete();\n}\n\n// Default Export\nexport default firebase;\n","import React from 'react';\nimport { Breadcrumbs } from '@material-ui/core';\n\nexport default function HomepageHeader() {\n  return (\n    <div>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <p>Home</p>\n      </Breadcrumbs>\n      <h1>Campaigns Homepage</h1>\n    </div>\n  );\n}\n","import { createContext } from 'react';\n\nconst HomepageState = createContext();\n\nexport default HomepageState;\n","import { createContext } from 'react';\n\nconst AuthState = createContext();\n\nexport default AuthState;\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as FirebaseService from 'services/firebase';\nimport HomepageState from 'components/contexts/HomepageState';\nimport AuthState from 'components/contexts/AuthState';\nimport { Add, Delete } from '@material-ui/icons';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function HomepageDetails() {\n  const classes = useStyles();\n  const { currentUser } = useContext(AuthState);\n  const [open, setOpen] = useState(false);\n  const [campaignName, setCampaignName] = useState('');\n  const { campaigns } = useContext(HomepageState);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    setOpen(false);\n    saveCampaign();\n  };\n\n  // Create New Campaign\n  const saveCampaign = () => {\n    if (campaignName) {\n      //don't save unless details present\n      FirebaseService.createCampaign(campaignName, currentUser.email)\n        .then(() => {\n          console.info('Created Campaign:', campaignName);\n        })\n        .catch((error) => {\n          alert('Failed to create campaign, see console error');\n          console.error('Error creating document:', error);\n        });\n    } else {\n      alert('Cannot save blank campaign');\n    }\n  };\n\n  // Delete Campaign\n  const deleteCampaign = (campaignName) => {\n    if (campaignName) {\n      //don't save unless details present\n      FirebaseService.deleteCampaign(campaignName)\n        .then(() => {\n          console.info('Deleted Campaign:', campaignName);\n        })\n        .catch((error) => {\n          alert('Failed to delete campaign, see console error');\n          console.error('Error deleting document:', error);\n        });\n    } else {\n      alert('Cannot delete blank campaign');\n    }\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Campaign</TableCell>\n              <TableCell>Owner</TableCell>\n              <TableCell>\n                <IconButton aria-label='add' onClick={handleClickOpen}>\n                  <Add />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {campaigns.campaigns &&\n              campaigns.campaigns.map((campaign, index) => {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>\n                      <Link to={'/dw-react/' + campaign.id}>{campaign.id}</Link>\n                    </TableCell>\n                    <TableCell>{campaign.owner}</TableCell>\n                    <TableCell>\n                      <IconButton\n                        aria-label='delete'\n                        onClick={() => deleteCampaign(campaign.id)}>\n                        <Delete />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Dialog\n        open={open}\n        onClose={handleCancel}\n        aria-labelledby='form-dialog-title'>\n        <DialogTitle id='form-dialog-title'>Create new campaign</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To create a campaign, please enter the new campaign name here. You\n            will not be able to change this once saved.\n          </DialogContentText>\n          <TextField\n            autoFocus={true}\n            margin='dense'\n            id='name'\n            label='Campaign Name'\n            fullWidth\n            onChange={(event) => setCampaignName(event.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={handleSave} color='primary'>\n            Create Campaign\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport * as FirebaseService from 'services/firebase';\nimport HomepageHeader from 'components/homepage/HomepageHeader';\nimport HomepageDetails from 'components/homepage/HomepageDetails';\nimport HomepageState from 'components/contexts/HomepageState';\n\nexport default function Homepage() {\n  const [campaigns, setCampaigns] = useState({});\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    const unsubscribe = FirebaseService.streamCampaigns({\n      next: (querySnapshot) => {\n        const updatedCampaignList = querySnapshot.docs.map((docSnapshot) => {\n          return { id: docSnapshot.id, owner: docSnapshot.data().owner };\n        });\n        setCampaigns((campaign) => ({ campaigns: updatedCampaignList }));\n      },\n      error: (error) => {\n        alert('Failed to load data correctly, see console error');\n        console.error('Error loading data:', error);\n      },\n    });\n    return unsubscribe;\n  }, [setCampaigns]);\n\n  useEffect(() => {\n    console.log('Campaigns State:', campaigns);\n  }, [campaigns]); //Only log to console if state actually changes\n\n  const ctx = useMemo(() => ({ campaigns }), [campaigns]); //Memo-ised state for performance\n\n  return (\n    <HomepageState.Provider value={ctx}>\n      <HomepageHeader />\n      <br />\n      <HomepageDetails />\n    </HomepageState.Provider>\n  );\n}\n","import { createContext } from 'react';\n\nconst ProfileState = createContext();\n\nexport default ProfileState;\n","import React, { useContext } from \"react\";\nimport AuthState from \"components/contexts/AuthState\";\nimport ProfileState from \"components/contexts/ProfileState\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nexport default function ProfilePicture() {\n  const { currentUser } = useContext(AuthState);\n  const { show, setShow } = useContext(ProfileState);\n  const toggleSetShow = () => setShow(!show);\n\n  return (\n    <Avatar\n      src={currentUser.photoURL}\n      alt=\"Google Profile\"\n      onClick={() => toggleSetShow()}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport AuthState from 'components/contexts/AuthState';\nimport * as FirebaseService from 'services/firebase';\nimport { Button } from '@material-ui/core';\n\nexport default function ProfileDetails() {\n  const { currentUser } = useContext(AuthState);\n\n  return (\n    <div\n      style={{\n        border: '0',\n        WebkitBorderRadius: '50%',\n        borderRadius: '5px',\n        display: 'inline-block',\n        margin: '0',\n        position: 'absolute',\n        top: '50px',\n        right: '20px',\n        color: '#bdc1c6',\n        backgroundColor: 'rgba(60, 64, 67, 0.9)',\n        textAlign: 'left',\n        font: \"500 12px 'Roboto', arial, sans-serif\",\n        letterSpacing: '0.8px',\n        lineHeight: '16px',\n        fontWeight: 'bold',\n        padding: '8px 8px',\n      }}>\n      <div\n        style={{\n          color: 'white',\n        }}>\n        Google Account\n      </div>\n      <div>{currentUser.displayName}</div>\n      <div>{currentUser.email}</div>\n      <Button\n        variant='contained'\n        color='primary'\n        onClick={() => FirebaseService.auth.signOut()}>\n        LOG OUT\n      </Button>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from 'react';\nimport ProfilePicture from 'components/profile/ProfilePicture';\nimport ProfileDetails from 'components/profile/ProfileDetails';\nimport ProfileState from 'components/contexts/ProfileState';\n\nexport default function UserProfile() {\n  const [show, setShow] = useState(false);\n  const ctx = useMemo(() => ({ show, setShow }), [show]); //Memo-ised state for performance\n\n  return (\n    <ProfileState.Provider value={ctx}>\n      <ProfilePicture /> {show ? <ProfileDetails /> : null}\n    </ProfileState.Provider>\n  );\n}\n","import React from 'react';\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Menu } from '@material-ui/icons';\nimport UserProfile from 'components/profile/UserProfile';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function AppHeader() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Toolbar>\n          <IconButton\n            edge='start'\n            className={classes.menuButton}\n            color='inherit'\n            aria-label='menu'>\n            <Menu />\n          </IconButton>\n          <Typography component={'span'} variant='h6' className={classes.title}>\n            Dungeon World Character Sheet (v0.10.0 by Godmar02)\n          </Typography>\n          <UserProfile />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { createContext } from 'react';\n\nconst CharacterState = createContext();\n\nexport default CharacterState;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { Breadcrumbs } from '@material-ui/core';\nimport CharacterState from 'components/contexts/CharacterState';\n\nexport default function CharacterSheetHeader() {\n  const { campaignURL, characterURL } = useParams();\n  const { character } = useContext(CharacterState);\n\n  return (\n    <>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <Link to='/dw-react'>Home</Link>\n        <Link to={'/dw-react/' + campaignURL}>{campaignURL}</Link>\n        <p>{characterURL}</p>\n      </Breadcrumbs>\n      <h1>Name: {characterURL}</h1>\n      <p>Class: {character.dw_class}</p>\n      <p>Race: {character.race}</p>\n      <p>Alignment: {character.alignment}</p>\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CharacterState from 'components/contexts/CharacterState';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function CharacterBasicDetails() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size='small' aria-label='simple table'>\n        <TableBody>\n          <TableRow>\n            <th>FULL NAME</th>\n            <TableCell>\n              <TextField\n                multiline\n                fullWidth\n                variant='outlined'\n                aria-label='empty textarea'\n                placeholder='Add your characters full name here'\n                value={character.full_name}\n                name='full_name'\n                onChange={handleCharacterChange}\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <th>BACKSTORY</th>\n            <TableCell>\n              <TextField\n                multiline\n                fullWidth\n                variant='outlined'\n                aria-label='empty textarea'\n                placeholder=\"Describe your character's backstory and anything else about your characters identity here\"\n                value={character.backstory}\n                name='backstory'\n                onChange={handleCharacterChange}\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <th>LOOK</th>\n            <TableCell>\n              <TextField\n                multiline\n                fullWidth\n                variant='outlined'\n                aria-label='empty textarea'\n                placeholder=\"Describe your character's appearance here\"\n                name='look'\n                value={character.look}\n                onChange={handleCharacterChange}\n              />\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { races } from 'data/raceList';\nimport { dw_classes } from 'data/classList';\nimport { class_details } from 'data/classDetails';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function CharacterType() {\n  const classes = useStyles();\n  const { character } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  const alig = character.alignment;\n\n  const alignmentAttribute = () => {\n    if (character.dw_class && character.alignment) {\n      return class_details[dwc].alignments.find((x) => x.alignment === alig)\n        .attribute;\n    } else {\n      return '';\n    }\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size='small' aria-label='simple table'>\n        <TableBody>\n          <TableRow>\n            <th>CLASS</th>\n            <TableCell\n              style={{\n                width: '25%',\n              }}>\n              {character.dw_class}\n            </TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n          <TableRow>\n            <th>RACE</th>\n            <TableCell>{character.race}</TableCell>\n            <TableCell>\n              <TextField\n                multiline\n                fullWidth\n                variant='outlined'\n                aria-label='empty textarea'\n                name='raceAttribute'\n                InputProps={{\n                  readOnly: true,\n                }}\n                value={character.race_attribute}\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <th>ALIGNMENT</th>\n            <TableCell>{character.alignment}</TableCell>\n            <TableCell>\n              {\n                <TextField\n                  multiline\n                  fullWidth\n                  variant='outlined'\n                  aria-label='empty textarea'\n                  name='alignmentAttribute'\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  value={alignmentAttribute()}\n                />\n              }\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n}));\n\nexport default function CharacterDamage() {\n  const { character } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  const classes = useStyles();\n\n  const damage = () => {\n    if (character.dw_class) {\n      return class_details[dwc].damage;\n    } else {\n      return '';\n    }\n  };\n\n  return (\n    <TextField\n      variant='outlined'\n      size='small'\n      className={classes.textField}\n      name='damage'\n      label='Damage'\n      InputProps={{\n        readOnly: true,\n      }}\n      value={damage()}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n}));\n\nexport default function CharacterArmour() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TextField\n      type='number'\n      variant='outlined'\n      size='small'\n      label='Armour'\n      min={0}\n      name='armour'\n      className={classes.textField}\n      value={character.armour || ''}\n      onChange={handleCharacterChange}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n}));\n\nexport default function CharacterFunds() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TextField\n      type='number'\n      variant='outlined'\n      size='small'\n      className={classes.textField}\n      name='funds'\n      label='Funds'\n      min={0}\n      value={character.funds || ''}\n      onChange={handleCharacterChange}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n\n    '& input': {\n      textAlign: 'center',\n    },\n    margin: 4,\n  },\n}));\n\nexport default function CharacterHP() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const dwc = character.dw_class;\n  const classes = useStyles();\n\n  const maxHp = () => {\n    if (character.dw_class && character.abilities) {\n      return (\n        '/ ' +\n        (class_details[dwc].base_hp +\n          parseInt(\n            character.abilities.find((x) => x.category === 'CON').score,\n            10\n          ))\n      );\n    } else {\n      return '';\n    }\n  };\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <>\n      <TextField\n        type='number'\n        variant='outlined'\n        label='HP'\n        min={0}\n        size='small'\n        className={classes.textField}\n        name='hp'\n        value={character.hp || ''}\n        onChange={handleCharacterChange}\n      />\n      <TextField\n        variant='outlined'\n        label='Max HP'\n        size='small'\n        className={classes.textField}\n        name='maxHp'\n        InputProps={{\n          readOnly: true,\n        }}\n        value={maxHp()}\n      />\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n}));\n\nexport default function CharacterLevel() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <TextField\n      type='number'\n      variant='outlined'\n      size='small'\n      label='Level'\n      className={classes.textField}\n      min={1}\n      name='level'\n      value={character.level || ''}\n      onChange={handleCharacterChange}\n    />\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: 80,\n\n    '& input': {\n      textAlign: 'center',\n    },\n    margin: 4,\n  },\n}));\n\nexport default function CharacterXP() {\n  const { character, setCharacter } = useContext(CharacterState);\n  const classes = useStyles();\n\n  // Total Load\n  const calcMaxXp = () => {\n    if (character.level) {\n      return '/ ' + (parseInt(character.level, 10) + 7);\n    } else {\n      return '';\n    }\n  };\n\n  const handleCharacterChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setCharacter((character) => ({ ...character, [name]: value }));\n  };\n\n  return (\n    <>\n      <TextField\n        type='number'\n        variant='outlined'\n        label='XP'\n        min={0}\n        size='small'\n        className={classes.textField}\n        name='xp'\n        value={character.xp || ''}\n        onChange={handleCharacterChange}\n      />\n      <TextField\n        variant='outlined'\n        size='small'\n        label='Max XP'\n        className={classes.textField}\n        name='maxXp'\n        InputProps={{\n          readOnly: true,\n        }}\n        value={calcMaxXp()}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from '@material-ui/core';\nimport CharacterDamage from 'components/character/CharacterDamage';\nimport CharacterArmour from 'components/character/CharacterArmour';\nimport CharacterFunds from 'components/character/CharacterFunds';\nimport CharacterHP from 'components/character/CharacterHP';\nimport CharacterLevel from 'components/character/CharacterLevel';\nimport CharacterXP from 'components/character/CharacterXP';\n\nexport default function CharacterBasicStats() {\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <CharacterLevel />\n            </TableCell>\n            <TableCell>\n              <CharacterXP />\n            </TableCell>\n            <TableCell>\n              <CharacterDamage />\n            </TableCell>\n            <TableCell>\n              <CharacterArmour />\n            </TableCell>\n            <TableCell>\n              <CharacterFunds />\n            </TableCell>\n            <TableCell>\n              <CharacterHP />\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { ability_afflictions } from 'data/abilityAfflictions';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  FormControl,\n  Grid,\n  MenuItem,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    width: 160,\n    padding: 0,\n  },\n  cardHeader: {\n    textAlign: 'center',\n  },\n  formControl: {\n    margin: 0,\n    width: 126,\n    textAlign: 'center',\n  },\n  textField: {\n    width: 126,\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n  textFieldBold: {\n    width: 126,\n    '& input': {\n      textAlign: 'center',\n      fontWeight: 'bold',\n      fontSize: 25,\n    },\n  },\n}));\n\nexport default function CharacterAbilities() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n\n  const updateAbilityScore = (index) => (e) => {\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {\n      ...character.abilities[index],\n      score: e.target.value,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      abilities: newAbilities,\n    })); // set array back\n  };\n\n  const updateAbilityAffliction = (index) => (e) => {\n    let newAbilities = [...character.abilities]; // copying the old array\n    newAbilities[index] = {\n      ...character.abilities[index],\n      affliction: e.target.value,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      abilities: newAbilities,\n    })); // set array back\n  };\n\n  const abilityModifier = (abilityScore, abilityAffliction) => {\n    if (abilityScore && abilityAffliction) {\n      let baseModifier;\n      let afflicted;\n\n      abilityScore = parseInt(abilityScore, 10);\n\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\n        baseModifier = -3;\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\n        baseModifier = -2;\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n        baseModifier = -1;\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n        baseModifier = 0;\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n        baseModifier = 1;\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\n        baseModifier = 2;\n      } else if (abilityScore === 18) {\n        baseModifier = 3;\n      }\n\n      /* -1 if afflicted */\n      if (abilityAffliction === 'Unafflicted') {\n        afflicted = 0;\n      } else {\n        afflicted = 1;\n      }\n\n      let modifier = baseModifier - afflicted;\n\n      if (modifier > 0) {\n        return '[+' + modifier + ']';\n      } else {\n        return '[' + modifier + ']';\n      }\n    } else {\n      return '';\n    }\n  };\n\n  return (\n    <Grid container spacing={0} justify='center'>\n      {character.abilities &&\n        character.abilities.map((abilities, index) => {\n          const ab = abilities.category;\n          return (\n            <Grid item key={index}>\n              <Card className={classes.card}>\n                <CardHeader\n                  title={abilities.category}\n                  className={classes.cardHeader}\n                />\n                <CardContent>\n                  <TextField\n                    type='number'\n                    variant='outlined'\n                    size='small'\n                    margin='none'\n                    min={1}\n                    max={18}\n                    name={abilities.category + 'Score'}\n                    value={abilities.score}\n                    className={classes.textField}\n                    onChange={updateAbilityScore(index)}\n                  />\n                  <TextField\n                    variant='outlined'\n                    name={abilities.category + 'Modifier'}\n                    value={abilityModifier(\n                      abilities.score,\n                      abilities.affliction\n                    )}\n                    InputProps={{ readOnly: true }}\n                    className={classes.textFieldBold}\n                  />\n                  <FormControl\n                    variant='outlined'\n                    size='small'\n                    className={classes.formControl}>\n                    <Select\n                      tabIndex={-1}\n                      value={abilities.affliction || 'null'}\n                      name={abilities.category + 'Affliction'}\n                      onChange={updateAbilityAffliction(index)}>\n                      {ability_afflictions[ab].map((data, key) => {\n                        return (\n                          <MenuItem value={data} key={key}>\n                            {data}\n                          </MenuItem>\n                        );\n                      })}\n                    </Select>\n                  </FormControl>\n                </CardContent>\n              </Card>\n            </Grid>\n          );\n        })}\n    </Grid>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { Add, Delete } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function CharacterBonds() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n\n  // State manipulation\n  const updateBond = (index) => (e) => {\n    let newBonds = [...character.bonds]; // copying the old array\n    newBonds[index] = { ...character.bonds[index], bond: e.target.value }; // replace value\n    setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\n  };\n\n  // Delete rows in the table\n  const deleteBondRow = (index) => {\n    const newBonds = [...character.bonds]; // copying the old array\n    if (character.bonds.length !== 1) {\n      //don't delete last row\n      newBonds.splice(index, 1); // remove item from array\n      setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  };\n\n  // Add rows in the table\n  const addBondsRow = () => {\n    const newBonds = [...character.bonds, { bond: '' }]; // copying the old array and adding blank item\n    setCharacter((character) => ({ ...character, bonds: newBonds })); // set array back\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label='simple table'>\n        <TableHead>\n          <TableRow>\n            <TableCell align='center'>Bond</TableCell>\n            <TableCell>\n              <IconButton aria-label='add' onClick={() => addBondsRow()}>\n                <Add />\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {character.bonds &&\n            character.bonds.map((bonds, index) => {\n              return (\n                <TableRow key={index}>\n                  <TableCell>\n                    <TextField\n                      multiline\n                      fullWidth\n                      variant='outlined'\n                      aria-label='empty textarea'\n                      placeholder='Add 2-3 bonds here'\n                      value={bonds.bond}\n                      name={'bond' + index}\n                      onChange={updateBond(index)}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <IconButton\n                      aria-label='delete'\n                      onClick={() => deleteBondRow(index)}>\n                      <Delete />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n        <tfoot />\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useContext, useTheme, useState } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { class_details } from 'data/classDetails';\nimport { Add, Delete } from '@material-ui/icons';\nimport {\n  Chip,\n  FormControl,\n  IconButton,\n  Input,\n  Paper,\n  Select,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { itemRanges } from 'data/itemRanges';\nimport { itemTypes } from 'data/itemTypes';\nimport { itemTags } from 'data/itemTags';\n\nconst useStyles = makeStyles((theme) => ({\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nexport default function CharacterGear() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n  const dwc = character.dw_class;\n\n  // Total Load\n  const totalLoad = () => {\n    if (character.items) {\n      return character.items.reduce(\n        (totalLoad, data) => totalLoad + parseInt(data.weight || 0, 10),\n        0\n      );\n    } else {\n      return '';\n    }\n  };\n\n  // Max Load\n  const maxLoad = () => {\n    if (\n      character.dw_class &&\n      character.abilities.find((x) => x.category === 'STR').score &&\n      character.abilities.find((x) => x.category === 'STR').affliction\n    ) {\n      let str = character.abilities.find((x) => x.category === 'STR');\n      let baseModifier;\n      let abilityAffliction = str.affliction;\n      let abilityScore = parseInt(str.score, 10);\n      let afflicted;\n\n      if ([1, 2, 3].indexOf(abilityScore) > -1) {\n        baseModifier = -3;\n      } else if ([4, 5].indexOf(abilityScore) > -1) {\n        baseModifier = -2;\n      } else if ([6, 7, 8].indexOf(abilityScore) > -1) {\n        baseModifier = -1;\n      } else if ([9, 10, 11, 12].indexOf(abilityScore) > -1) {\n        baseModifier = 0;\n      } else if ([13, 14, 15].indexOf(abilityScore) > -1) {\n        baseModifier = 1;\n      } else if ([16, 17].indexOf(abilityScore) > -1) {\n        baseModifier = 2;\n      } else if (abilityScore === 18) {\n        baseModifier = 3;\n      }\n\n      /*-1 if afflicted*/\n      if (abilityAffliction === 'Unafflicted') {\n        afflicted = 0;\n      } else {\n        afflicted = 1;\n      }\n\n      let modifier = baseModifier - afflicted;\n\n      return '/ ' + (class_details[dwc].base_load + modifier);\n    } else {\n      return '';\n    }\n  };\n\n  // State manipulation\n  const handleCharacterChange = (event, index) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    console.log('target', target);\n    let newItems = [...character.items]; // copying the old array\n    newItems[index] = { ...character.items[index], [name]: value }; // replace value\n    setCharacter((character) => ({ ...character, items: newItems })); // set array back\n  };\n\n  // Delete rows in the table\n  const deleteItemRow = (index) => {\n    const newItems = [...character.items]; // copying the old array\n    if (character.items.length !== 1) {\n      //don't delete last row\n      newItems.splice(index, 1); // remove item from array\n      setCharacter((character) => ({ ...character, items: newItems })); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  };\n\n  // Add rows in the table\n  const addItemRow = () => {\n    const newItems = [\n      ...character.items,\n      {\n        name: '',\n        description: '',\n        weight: '',\n        type: '',\n        range: '',\n        cost: '',\n        uses: '',\n        tags: [],\n      },\n    ]; // copying the old array and adding blank item\n    setCharacter((character) => ({ ...character, items: newItems })); // set array back\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label='simple table'>\n        <TableHead>\n          <TableRow>\n            <TableCell align='center'>TYPE</TableCell>\n            <TableCell align='center'>NAME</TableCell>\n            <TableCell align='center' colSpan='4'>\n              DESCRIPTION00000000000\n            </TableCell>\n            <TableCell align='center'>AMOUR</TableCell>\n            <TableCell align='center'>RANGE</TableCell>\n            <TableCell align='center'>COST</TableCell>\n            <TableCell align='center'>USES</TableCell>\n            <TableCell align='center'>TAGS</TableCell>\n            <TableCell align='center' colSpan='2'>\n              WEIGHT\n            </TableCell>\n            <TableCell>\n              <IconButton aria-label='add' onClick={() => addItemRow()}>\n                <Add />\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {character.items &&\n            character.items.map((items, index) => {\n              return (\n                <TableRow key={index}>\n                  <TableCell align='center'>\n                    <FormControl\n                      variant='outlined'\n                      size='small'\n                      className={classes.formControl}>\n                      <Select\n                        tabIndex={-1}\n                        value={items.type}\n                        name='type'\n                        onChange={(event) =>\n                          handleCharacterChange(event, index)\n                        }>\n                        {itemTypes.map((type) => (\n                          <MenuItem key={type} value={type}>\n                            {type}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      fullWidth\n                      size='small'\n                      variant='outlined'\n                      aria-label='empty textarea'\n                      value={items.name}\n                      name='name'\n                      onChange={(event) => handleCharacterChange(event, index)}\n                    />\n                  </TableCell>\n                  <TableCell colSpan='4'>\n                    <TextField\n                      multiline\n                      fullWidth\n                      size='small'\n                      variant='outlined'\n                      aria-label='empty textarea'\n                      value={items.description}\n                      name='description'\n                      onChange={(event) => handleCharacterChange(event, index)}\n                    />\n                  </TableCell>\n                  <TableCell align='center'>\n                    <TextField\n                      type='number'\n                      fullWidth\n                      size='small'\n                      variant='outlined'\n                      min={0}\n                      name='armour'\n                      value={items.armour}\n                      onChange={(event) => handleCharacterChange(event, index)}\n                    />\n                  </TableCell>\n                  <TableCell align='center'>\n                    <FormControl\n                      variant='outlined'\n                      size='small'\n                      className={classes.formControl}>\n                      <Select\n                        tabIndex={-1}\n                        value={items.range}\n                        name='range'\n                        onChange={(event) =>\n                          handleCharacterChange(event, index)\n                        }>\n                        {itemRanges.map((range) => (\n                          <MenuItem key={range} value={range}>\n                            {range}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </TableCell>\n                  <TableCell align='center'>\n                    <TextField\n                      type='number'\n                      fullWidth\n                      size='small'\n                      variant='outlined'\n                      min={0}\n                      name='cost'\n                      value={items.cost}\n                      onChange={(event) => handleCharacterChange(event, index)}\n                    />\n                  </TableCell>\n                  <TableCell align='center'>\n                    <TextField\n                      type='number'\n                      fullWidth\n                      size='small'\n                      variant='outlined'\n                      min={0}\n                      name='uses'\n                      value={items.uses}\n                      onChange={(event) => handleCharacterChange(event, index)}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <FormControl className={classes.formControl}>\n                      <Select\n                        multiple\n                        value={items.tags}\n                        name='tags'\n                        onChange={(event) =>\n                          handleCharacterChange(event, index)\n                        }\n                        input={<Input />}\n                        renderValue={(selected) => (\n                          <div className={classes.chips}>\n                            {selected.map((value) => (\n                              <Chip\n                                key={value}\n                                label={value}\n                                className={classes.chip}\n                              />\n                            ))}\n                          </div>\n                        )}\n                        MenuProps={MenuProps}>\n                        {itemTags.map((name) => (\n                          <MenuItem key={name} value={name}>\n                            {name}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </TableCell>\n                  <TableCell colSpan='2'>\n                    <TextField\n                      type='number'\n                      fullWidth\n                      size='small'\n                      variant='outlined'\n                      min={0}\n                      value={items.weight}\n                      name='weight'\n                      onChange={(event) => handleCharacterChange(event, index)}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <IconButton\n                      aria-label='delete'\n                      onClick={() => deleteItemRow(index)}>\n                      <Delete />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          <TableRow>\n            <TableCell align='right' colSpan='11'>\n              LOAD\n            </TableCell>\n            <TableCell>\n              <TextField\n                type='number'\n                fullWidth\n                size='small'\n                variant='outlined'\n                name='totalLoad'\n                InputProps={{\n                  readOnly: true,\n                }}\n                value={totalLoad()}\n              />\n            </TableCell>\n            <TableCell>\n              <TextField\n                fullWidth\n                size='small'\n                variant='outlined'\n                name='maxLoad'\n                InputProps={{\n                  readOnly: true,\n                }}\n                value={maxLoad()}\n              />\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport { Add, Delete } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ExpandMore } from '@material-ui/icons';\nimport {\n  Checkbox,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function CharacterClassFeatures() {\n  const classes = useStyles();\n  const { character, setCharacter } = useContext(CharacterState);\n\n  // State manipulation\n  const updateFeatureCheckbox = (index) => (e) => {\n    let newFeatures = [...character.class_features]; // copying the old array\n    newFeatures[index] = {\n      ...character.class_features[index],\n      checkbox: e.target.checked,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      class_features: newFeatures,\n    })); // set array back\n  };\n\n  const updateFeature = (index) => (e) => {\n    let newFeatures = [...character.class_features]; // copying the old array\n    newFeatures[index] = {\n      ...character.class_features[index],\n      feature: e.target.value,\n    }; // replace value\n    setCharacter((character) => ({\n      ...character,\n      class_features: newFeatures,\n    })); // set array back\n  };\n\n  // Delete rows in the table\n  const deleteFeatureRow = (index) => {\n    const newFeatures = [...character.class_features]; // copying the old array\n    if (character.class_features.length !== 1) {\n      //don't delete last row\n      newFeatures.splice(index, 1); // remove item from array\n      setCharacter((character) => ({\n        ...character,\n        class_features: newFeatures,\n      })); // set array back\n    } else {\n      alert('Cannot delete final row');\n    }\n  };\n\n  // Add rows in the table\n  const addFeatureRow = () => {\n    const newFeatures = [\n      ...character.class_features,\n      { feature: '', checkbox: false },\n    ]; // copying the old array and adding blank item\n    setCharacter((character) => ({\n      ...character,\n      class_features: newFeatures,\n    })); // set array back\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label='simple table'>\n        <TableHead>\n          <TableRow>\n            <TableCell colSpan='2' align='center'>\n              Feature\n            </TableCell>\n            <TableCell>\n              <IconButton aria-label='add' onClick={() => addFeatureRow()}>\n                <Add />\n              </IconButton>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {character.class_features &&\n            character.class_features.map((class_features, index) => {\n              return (\n                <TableRow key={index}>\n                  <TableCell>\n                    <Checkbox\n                      name={'class_feature_checkbox' + index}\n                      checked={!!class_features.checkbox}\n                      onChange={updateFeatureCheckbox(index)}\n                      color='primary'\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      multiline\n                      fullWidth\n                      variant='outlined'\n                      aria-label='empty textarea'\n                      placeholder='Add any Class Features here (e.g. Spell Lists, Poison Recipes, Druid Balance, Paladin Quests or anything else!)'\n                      value={class_features.feature}\n                      name={'class_feature' + index}\n                      onChange={updateFeature(index)}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <IconButton\n                      aria-label='delete'\n                      onClick={() => deleteFeatureRow(index)}>\n                      <Delete />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { standard_moves } from 'data/standardMovesList';\n\nexport default function CharacterStandardMoves() {\n  return (\n    <>\n      {' '}\n      {standard_moves.map((data, index) => {\n        return (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              {data.name}\n            </AccordionSummary>\n            <AccordionDetails>\n              <p dangerouslySetInnerHTML={{ __html: data.description }}></p>\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}{' '}\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { advanced_moves } from 'data/advancedMovesList';\n\nexport default function CharacterAdvancedMoves() {\n  return (\n    <>\n      {advanced_moves.map((data, index) => {\n        return (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              {data.name}\n            </AccordionSummary>\n            <AccordionDetails>\n              <p dangerouslySetInnerHTML={{ __html: data.description }}></p>\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport CharacterState from 'components/contexts/CharacterState';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\n\nexport default function CharacterClassStartingMoves() {\n  const { character } = useContext(CharacterState);\n  const dwc = character.dw_class;\n\n  return <></>;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Box, Tab, Tabs } from '@material-ui/core';\nimport CharacterStandardMoves from 'components/character/CharacterStandardMoves';\nimport CharacterAdvancedMoves from 'components/character/CharacterAdvancedMoves';\nimport CharacterClassMoves from 'components/character/CharacterClassMoves';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}>\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function CharacterMoves() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleTabChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Tabs\n          value={value}\n          onChange={handleTabChange}\n          aria-label='simple tabs example'>\n          <Tab label='Standard' {...a11yProps(0)} />\n          <Tab label='Advanced' {...a11yProps(1)} />\n          <Tab label='Class' {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <CharacterStandardMoves />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <CharacterAdvancedMoves />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <CharacterClassMoves />\n      </TabPanel>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: 126,\n    textAlign: 'center',\n  },\n  textField: {\n    width: 126,\n    '& input': {\n      textAlign: 'center',\n    },\n  },\n}));\n\nexport default function DiceRoller() {\n  const [dice, setDice] = useState();\n  const [diceNum, setDiceNum] = useState();\n  const [rollResult, setRollResult] = useState(0);\n  const classes = useStyles();\n\n  function singleRoll(sides) {\n    const roll = Math.floor(Math.random() * sides) + 1;\n    return roll;\n  }\n\n  function rollDice(sides, diceNum) {\n    sides = parseInt(sides, 10);\n    diceNum = parseInt(diceNum, 10);\n    let total = 0;\n    for (let i = 0; i < diceNum; i++) {\n      total = total + singleRoll(sides);\n    }\n    return setRollResult(total);\n  }\n\n  return (\n    <>\n      <FormControl\n        variant='outlined'\n        size='small'\n        className={classes.formControl}>\n        <InputLabel>Dice</InputLabel>\n        <Select\n          tabIndex={-1}\n          defaultValue='null'\n          label='dice'\n          onChange={(event) => {\n            setDice(event.target.value);\n          }}>\n          <MenuItem disabled='disabled' value='null' hidden='hidden' />\n          <MenuItem value='6'>d6</MenuItem>\n          <MenuItem value='8'>d8</MenuItem>\n          <MenuItem value='10'>d10</MenuItem>\n        </Select>\n      </FormControl>\n      <br />\n      <FormControl\n        variant='outlined'\n        size='small'\n        className={classes.formControl}>\n        <InputLabel>Number</InputLabel>\n        <Select\n          tabIndex={-1}\n          defaultValue='null'\n          label='Number'\n          onChange={(event) => {\n            setDiceNum(event.target.value);\n          }}>\n          <MenuItem disabled='disabled' value='null' hidden='hidden' />\n          <MenuItem value='1'>1</MenuItem>\n          <MenuItem value='2'>2</MenuItem>\n          <MenuItem value='3'>3</MenuItem>\n        </Select>\n      </FormControl>\n      <Button onClick={() => rollDice(dice, diceNum)}>Roll</Button>\n      <TextField\n        variant='outlined'\n        size='small'\n        label='Result'\n        className={classes.textField}\n        value={rollResult}\n      />\n    </>\n  );\n}\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useContext,\n  useMemo,\n} from 'react';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport PropTypes from 'prop-types';\nimport CharacterState from 'components/contexts/CharacterState';\nimport AuthState from 'components/contexts/AuthState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Box, Tab, Tabs } from '@material-ui/core';\nimport CharacterSheetHeader from 'components/character/CharacterSheetHeader';\nimport CharacterBasicDetails from 'components/character/CharacterBasicDetails';\nimport CharacterType from 'components/character/CharacterType';\nimport CharacterBasicStats from 'components/character/CharacterBasicStats';\nimport CharacterAbilities from 'components/character/CharacterAbilities';\nimport CharacterBonds from 'components/character/CharacterBonds';\nimport CharacterGear from 'components/character/CharacterGear';\nimport CharacterClassFeatures from 'components/character/CharacterClassFeatures';\nimport CharacterMoves from 'components/character/CharacterMoves';\nimport DiceRoller from 'components/other/DiceRoller';\n\n// Tab functions\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}>\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\n// Debounce function\nconst debounce = (callback, delay) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => callback(...args), delay);\n  };\n};\n\nexport default function CharacterSheet() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [character, setCharacter] = useState({});\n  const { campaignURL, characterURL } = useParams();\n  const { currentUser } = useContext(AuthState);\n\n  const handleTabChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  // Subscribe to Character Data\n  useEffect(() => {\n    if (campaignURL && characterURL) {\n      const unsubscribe = FirebaseService.streamCharacter(\n        campaignURL,\n        characterURL,\n        {\n          next: (documentSnapshot) => {\n            setCharacter(documentSnapshot.data());\n          },\n          error: (error) => {\n            alert('Failed to load character data correctly, see console error');\n            console.error('Error loading document:', error);\n          },\n        }\n      );\n      return unsubscribe;\n    }\n  }, [campaignURL, characterURL, setCharacter]);\n\n  // Debounced Save\n  const debouncedSave = useCallback(\n    debounce(\n      (character) =>\n        FirebaseService.saveCharacter(campaignURL, characterURL, character)\n          .then(() => {\n            console.info('Saved Character:', character);\n          })\n          .catch((error) => {\n            alert('Failed to save character data correctly, see console error');\n            console.error('Error saving document:', error);\n          }),\n      5000\n    ),\n    []\n  );\n\n  // Save changes to character\n  useEffect(() => {\n    if (\n      character &&\n      Object.keys(character).length >= 1 &&\n      currentUser.email === character.owner\n    ) {\n      console.info('CharacterState:', character);\n      debouncedSave(character);\n    }\n  }, [character]); //Only trigger effect on change of character\n\n  const ctx = useMemo(() => ({ character, setCharacter }), [character]); //Memo-ised state for performance\n\n  return (\n    <CharacterState.Provider value={ctx}>\n      <CharacterSheetHeader />\n      <br />\n      <div className={classes.root}>\n        <CharacterBasicStats />\n        <br />\n        <CharacterAbilities />\n        <br />\n        <AppBar position='static'>\n          <Tabs\n            value={value}\n            onChange={handleTabChange}\n            aria-label='simple tabs example'>\n            <Tab label='Basic Details' {...a11yProps(0)} />\n            <Tab label='Bonds' {...a11yProps(1)} />\n            <Tab label='Class Features' {...a11yProps(2)} />\n            <Tab label='Gear' {...a11yProps(3)} />\n            <Tab label='Moves' {...a11yProps(4)} />\n            <Tab label='Dice Roller' {...a11yProps(5)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <CharacterBasicDetails />\n          <br />\n          <CharacterType />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <CharacterBonds />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <CharacterClassFeatures />\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          <CharacterGear />\n        </TabPanel>\n        <TabPanel value={value} index={4}>\n          <CharacterMoves />\n        </TabPanel>\n        <TabPanel value={value} index={5}>\n          <DiceRoller />\n        </TabPanel>\n      </div>\n    </CharacterState.Provider>\n  );\n}\n","import { createContext } from 'react';\n\nconst CampaignState = createContext();\n\nexport default CampaignState;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { Breadcrumbs } from '@material-ui/core';\n\nexport default function CampaignHeader() {\n  const { campaignURL } = useParams();\n\n  return (\n    <div>\n      <Breadcrumbs aria-label='breadcrumb'>\n        <Link to='/dw-react'>Home</Link>\n        <p>{campaignURL}</p>\n      </Breadcrumbs>\n      <h1>Campaign: {campaignURL}</h1>\n    </div>\n  );\n}\n","import { createContext } from 'react';\n\nconst CreateCharacterState = createContext();\n\nexport default CreateCharacterState;\n","import React, { useContext, useState } from 'react';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport AuthState from 'components/contexts/AuthState';\nimport CreateCharacterState from 'components/contexts/CreateCharacterState';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { class_details } from 'data/classDetails';\nimport { dw_classes } from 'data/classList';\nimport { races } from 'data/raceList';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function CampaignDetails() {\n  const classes = useStyles();\n  const { open, setOpen } = useContext(CreateCharacterState);\n  const [charaName, setCharaName] = useState('');\n  const [charaClass, setCharaClass] = useState('');\n  const [charaRace, setCharaRace] = useState('');\n  const [charaAlignment, setCharaAlignment] = useState('');\n  const [charaRaceAttribute, setCharaRaceAttribute] = useState('');\n  const { currentUser } = useContext(AuthState);\n  const { campaignURL } = useParams();\n\n  const handleRadioChange = (event) => {\n    setCharaRaceAttribute(event.target.value);\n  };\n\n  const handleCancel = () => {\n    setCharaName('');\n    setCharaClass('');\n    setCharaRace('');\n    setCharaAlignment('');\n    setCharaRaceAttribute('');\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    setOpen(false);\n    saveCharacter();\n  };\n\n  // Create New Character\n  const saveCharacter = () => {\n    if (\n      campaignURL &&\n      charaName &&\n      charaClass &&\n      charaAlignment &&\n      charaRace &&\n      charaRaceAttribute\n    ) {\n      //don't save unless details present\n      FirebaseService.createCharacter(\n        campaignURL,\n        charaName,\n        currentUser.email,\n        charaClass,\n        charaAlignment,\n        charaRace,\n        charaRaceAttribute\n      )\n        .then(() => {\n          console.info('Created Character:', charaName);\n        })\n        .catch((error) => {\n          alert('Failed to create character, see console error');\n          console.error('Error creating document:', error);\n        });\n    } else {\n      alert('Cannot save blank character');\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleCancel}\n      aria-labelledby='form-dialog-title'>\n      <DialogTitle id='form-dialog-title'>Create new character</DialogTitle>{' '}\n      <DialogContent>\n        <DialogContentText>\n          To create a character, please enter the following details. You will\n          not be able to change this once saved.\n        </DialogContentText>\n        <TextField\n          autoFocus={true}\n          margin='dense'\n          id='name'\n          label='Short Character Name'\n          fullWidth\n          onChange={(event) => setCharaName(event.target.value)}\n        />\n        <br />\n        <FormControl variant='outlined' className={classes.formControl}>\n          <InputLabel>Class</InputLabel>\n          <Select\n            label='Class'\n            value={charaClass}\n            name='class'\n            onChange={(event) => setCharaClass(event.target.value)}>\n            {dw_classes.map((data, key) => {\n              return (\n                <MenuItem value={data} key={key}>\n                  {data}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n        <br />\n        <FormControl variant='outlined' className={classes.formControl}>\n          <InputLabel>Race</InputLabel>\n          <Select\n            label='Race'\n            value={charaRace}\n            name='race'\n            onChange={(event) => setCharaRace(event.target.value)}>\n            {races.map((data, key) => {\n              return (\n                <MenuItem value={data} key={key}>\n                  {data}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n        <br />\n        <FormControl variant='outlined' className={classes.formControl}>\n          <InputLabel>Alignment</InputLabel>\n          <Select\n            label='Alignment'\n            value={charaAlignment}\n            name='alignment'\n            onChange={(event) => setCharaAlignment(event.target.value)}>\n            {charaClass &&\n              class_details[charaClass].alignments.map((data, key) => {\n                return (\n                  <MenuItem value={data.alignment} key={key}>\n                    {data.alignment}\n                  </MenuItem>\n                );\n              })}\n          </Select>\n        </FormControl>\n        <br />\n        <FormControl component='fieldset' className={classes.formControl}>\n          <FormLabel component='legend'>Race Attribute</FormLabel>\n          <RadioGroup\n            aria-label='race attribute'\n            name='race attribute'\n            value={charaRaceAttribute}\n            onChange={handleRadioChange}>\n            {charaClass &&\n              class_details[charaClass].race_attributes.map((data, key) => {\n                return (\n                  <FormControlLabel\n                    value={data.attribute}\n                    control={<Radio />}\n                    label={data.attribute + ' (' + data.race + ')'}\n                  />\n                );\n              })}\n          </RadioGroup>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color='primary'>\n          Cancel\n        </Button>\n        <Button onClick={handleSave} color='primary'>\n          Create Character\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CampaignState from 'components/contexts/CampaignState';\nimport CreateCharacterState from 'components/contexts/CreateCharacterState';\nimport CreateCharacter from 'components/campaign/CreateCharacter';\nimport { Add, Delete } from '@material-ui/icons';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function CampaignDetails() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(CreateCharacterState);\n  const { campaign } = useContext(CampaignState);\n  const { campaignURL } = useParams();\n  const ctx = useMemo(() => ({ open, setOpen }), [open]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  // Delete Character\n  const deleteCharacter = (campaign, character) => {\n    if (campaign && character) {\n      //don't save unless details present\n      FirebaseService.deleteCharacter(campaign, character)\n        .then(() => {\n          console.info('Deleted Character:', character);\n        })\n        .catch((error) => {\n          alert('Failed to delete character, see console error');\n          console.error('Error deleting document:', error);\n        });\n    } else {\n      alert('Cannot delete blank character');\n    }\n  };\n\n  return (\n    <CreateCharacterState.Provider value={ctx}>\n      <Grid container spacing={3}>\n        {campaign.campaign &&\n          campaign.campaign.map((campaign, index) => {\n            return (\n              <Grid item xs={3} key={index}>\n                <Card className={classes.root}>\n                  <CardHeader\n                    action={\n                      <IconButton\n                        aria-label='delete'\n                        onClick={() =>\n                          deleteCharacter(campaignURL, campaign.character)\n                        }>\n                        <Delete />\n                      </IconButton>\n                    }\n                    title={\n                      <Link\n                        to={\n                          '/dw-react/' + campaignURL + '/' + campaign.character\n                        }>\n                        {campaign.character}\n                      </Link>\n                    }\n                    subheader={campaign.characterData.owner}\n                  />\n                  <CardContent>\n                    <Typography variant='body1' component='p'>\n                      {campaign.characterData.dw_class}\n                    </Typography>\n                    <Typography variant='body1' component='p'>\n                      {campaign.characterData.race}\n                    </Typography>\n                    <Typography variant='body1' component='p'>\n                      {campaign.characterData.alignment}\n                    </Typography>\n                    <br />\n                    <Typography variant='body2' component='p'>\n                      HP: {campaign.characterData.hp}\n                    </Typography>\n                    <Typography variant='body2' component='p'>\n                      XP: {campaign.characterData.xp}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            );\n          })}\n        <Grid item xs={3}>\n          <Card className={classes.root}>\n            <CardHeader title='Add Character' />\n            <CardContent>\n              <IconButton aria-label='add' onClick={handleClickOpen}>\n                <Add />\n              </IconButton>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <CreateCharacter />\n    </CreateCharacterState.Provider>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useParams } from 'react-router';\nimport * as FirebaseService from 'services/firebase';\nimport CampaignState from 'components/contexts/CampaignState';\nimport CampaignHeader from 'components/campaign/CampaignHeader';\nimport CampaignDetails from 'components/campaign/CampaignDetails';\n\nexport default function CampaignSheet() {\n  const [campaign, setCampaign] = useState({});\n  const { campaignURL } = useParams();\n\n  // Use an effect hook to subscribe to the campaign stream and\n  // automatically unsubscribe when the component unmounts.\n  useEffect(() => {\n    if (campaignURL) {\n      const unsubscribe = FirebaseService.streamCharacters(campaignURL, {\n        next: (querySnapshot) => {\n          const updatedCharacterList = querySnapshot.docs.map((docSnapshot) => {\n            return {\n              character: docSnapshot.id,\n              characterData: docSnapshot.data(),\n            };\n          });\n          setCampaign((campaign) => ({ campaign: updatedCharacterList }));\n        },\n        error: (error) => {\n          alert('Failed to load campaign data correctly, see console error');\n          console.error('Error loading document:', error);\n        },\n      });\n      return unsubscribe;\n    }\n  }, [campaignURL, setCampaign]);\n\n  useEffect(() => {\n    console.info('Campaign State:', campaign);\n  }, [campaign]); //Only log to console if state actually changes\n\n  const ctx = useMemo(() => ({ campaign, setCampaign }), [campaign]); //Memo-ised state for performance\n\n  return (\n    <CampaignState.Provider value={ctx}>\n      <CampaignHeader />\n      <br />\n      <CampaignDetails />\n    </CampaignState.Provider>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Container, Typography } from '@material-ui/core';\nimport ErrorPage from 'components/ErrorPage';\nimport Homepage from 'components/homepage/Homepage';\nimport AppHeader from 'components/AppHeader';\nimport CharacterSheet from 'components/character/CharacterSheet';\nimport Campaign from 'components/campaign/Campaign';\nimport '@fontsource/roboto';\n\nexport default function App() {\n  return (\n    <Typography component={'span'}>\n      <Container>\n        <Router>\n          <AppHeader />\n          <Switch>\n            <Route\n              exact={true}\n              path='/dw-react/:campaignURL/:characterURL'\n              component={CharacterSheet}\n            />\n            <Route\n              exact={true}\n              path='/dw-react/:campaignURL'\n              component={Campaign}\n            />\n            <Route exact={true} path='/dw-react' component={Homepage} />\n            <Route component={ErrorPage} />\n          </Switch>\n        </Router>\n      </Container>\n    </Typography>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport * as FirebaseService from 'services/firebase';\nimport AuthState from 'components/contexts/AuthState';\nimport { Button } from '@material-ui/core';\n\nfunction Index() {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const ctx = useMemo(() => ({ currentUser }), [currentUser]);\n\n  useEffect(() => {\n    const unsubscribe = FirebaseService.auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n\n  return (\n    <AuthState.Provider value={ctx}>\n      {currentUser ? (\n        <App />\n      ) : (\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={FirebaseService.SignInWithGoogle}>\n          SIGN IN WITH GOOGLE\n        </Button>\n      )}\n    </AuthState.Provider>\n  );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Index />, rootElement);\n"],"sourceRoot":""}